---
title: Anaconda介绍、安装及使用教程
date: 2022-05-13
category:
  - 学习
tag:
  - 学习
  - Python
  - Anaconda
article: true
---

https://docs.anaconda.com/anaconda/install/linux/

```
apt-get install libgl1-mesa-glx libegl1-mesa libxrandr2 libxrandr2 libxss1 libxcursor1 libxcomposite1 libasound2 libxi6 libxtst6
anaconda-navigator
pip install pyopenssl
```

打开这个主的Anaconda Prompt，

![3C6B41BE970B42EC83654EA0ECB4E0C2](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/3C6B41BE970B42EC83654EA0ECB4E0C2.jpeg)

先执行，conda update conda，先把conda更新到最新版

然后输入conda update anaconda，把anaconda更新的新版。

Anaconda已经更新完毕，启动anaconda-navigator，发现在配置的环境中，只有base这个环境更新到最新。

![5FB51640E34C4D75AD9357A355FB5858](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/5FB51640E34C4D75AD9357A355FB5858.jpeg)

而自己常用的自定义配置的环境还是以前的版本

![](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/43C30E546EF74EF597149B56330AD525.jpeg)

进入到需要升级的配置环境

![](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/8E72F456C609436EB4D05F1EAE10EF4A.jpeg)

输入conda update --all

更新完毕后，你所使用的自定义配置环境也更新到最新版的Anaconda了。

------

针对更新速度缓慢的问题我自己测试目前有两种解决办法：

1.使用全局代理

2.添加国内镜像源

全局代理这个办法，这里不做讲解了，需要使用的朋友可以自己去研究一下。这里说一下添加国内镜像源的方法。

1. 运行Anaconda Prompt

```
conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/
conda config --add channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/mro
conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/pro conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2
```

2. 设置启动设置好的国内镜像源

```
conda config --set show_channel_urls yes
```

3. 查看是否添加上了源

```
conda config --show
```

![](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/D812C5AE9D3C4898B3DDCC7F51F13E5B.jpeg)

这个是默认的，如果你添加成功了，会在上面出现两个刚才添加的地址

如果镜像源失效了，或者想换成其他的源，怎么删除呢？

```
conda config --remove channels https://mirrors.ustc.edu.cn/anaconda/pkgs/free/

conda config --remove channels https://mirrors.ustc.edu.cn/anaconda/pkgs/main/
```

这样就可以删除了。

出现更新慢的问题的，先把代理或者源设置好，然后就可以更新你的Anaconda了。看到这里估计可能会有人放弃了，太麻烦了，又得找代理，又得用国内镜像的，太费劲了，当然还有一种更简单粗暴的方式，卸载掉目前用的版本，安装个最新版的。但是配置好的环境应该都没有了，我没敢尝试这样的方法。如果大家有更好的办法解决Anaconda升级的问题，欢迎一起讨论一下，这个给遇到升级问题的小伙伴们一个参考，不足之处请指正。

# Anaconda介绍、安装及使用教程



〇、序

 

Python是一种面向对象的解释型计算机程序设计语言，其使用，具有跨平台的特点，可以在Linux、macOS以及Windows系统中搭建环境并使用，其编写的代码在不同平台上运行时，几乎不需要做较大的改动，使用者无不受益于它的便捷性。

 

此外，Python的强大之处在于它的应用领域范围之广，遍及人工智能、科学计算、Web开发、系统运维、大数据及云计算、金融、游戏开发等。实现其强大功能的前提，就是Python具有数量庞大且功能相对完善的标准库和第三方库。通过对库的引用，能够实现对不同领域业务的开发。然而，正是由于库的数量庞大，对于管理这些库以及对库作及时的维护成为既重要但复杂度又高的事情。

 

一、什么是Anaconda？

 

1. 简介

 

Anaconda（[官方网站](https://link.jianshu.com?t=https%3A%2F%2Fwww.anaconda.com%2Fdownload%2F%23macos)）就是可以便捷获取包且对包能够进行管理，同时对环境可以统一管理的发行版本。Anaconda包含了conda、Python在内的超过180个科学包及其依赖项。

 

2. 特点

 

Anaconda具有如下特点：

 开源

 安装过程简单

 高性能使用Python和R语言

 免费的社区支持

其特点的实现主要基于Anaconda拥有的：

 conda包

 环境管理器

 1,000+开源库

如果日常工作或学习并不必要使用1,000多个库，那么可以考虑安装Miniconda（[图形界面下载及命令行安装请戳](https://link.jianshu.com?t=https%3A%2F%2Fconda.io%2Fminiconda.html)），这里不过多介绍Miniconda的安装及使用。

 

3. Anaconda、conda、pip、virtualenv的区别

 

① Anaconda

 Anaconda是一个包含180+的科学包及其依赖项的发行版本。其包含的科学包包括：conda, numpy, scipy, ipython notebook等。

② conda

 conda是包及其依赖项和环境的管理工具。

 适用语言：Python, R, Ruby, Lua, Scala, Java, JavaScript, C/C++, FORTRAN。

 适用平台：Windows, macOS, Linux

 用途：

 快速安装、运行和升级包及其依赖项。

 在计算机中便捷地创建、保存、加载和切换环境。

如果你需要的包要求不同版本的Python，你无需切换到不同的环境，因为conda同样是一个环境管理器。仅需要几条命令，你可以创建一个完全独立的环境来运行不同的Python版本，同时继续在你常规的环境中使用你常用的Python版本。——[conda官方网站](https://link.jianshu.com?t=https%3A%2F%2Fconda.io%2Fdocs%2F)

 conda为Python项目而创造，但可适用于上述的多种语言。

 conda包和环境管理器包含于Anaconda的所有版本当中。

③ pip

 pip是用于安装和管理软件包的包管理器。

 pip编写语言：Python。

 Python中默认安装的版本：

 Python 2.7.9及后续版本：默认安装，命令为pip

 Python 3.4及后续版本：默认安装，命令为pip3

 pip名称的由来：pip采用的是递归缩写进行命名的。其名字被普遍认为来源于2处：

 “Pip installs Packages”（“pip安装包”）

 “Pip installs Python”（“pip安装Python”）

④ virtualenv

 virtualenv：用于创建一个独立的Python环境的工具。

 解决问题：

 当一个程序需要使用Python 2.7版本，而另一个程序需要使用Python 3.6版本，如何同时使用这两个程序？

 如果将所有程序都安装在系统下的默认路径，如：/usr/lib/python2.7/site-packages，当不小心升级了本不该升级的程序时，将会对其他的程序造成影响。

 如果想要安装程序并在程序运行时对其库或库的版本进行修改，都会导致程序的中断。

 在共享主机时，无法在全局site-packages目录中安装包。

 virtualenv将会为它自己的安装目录创建一个环境，这并不与其他virtualenv环境共享库；同时也可以选择性地不连接已安装的全局库。

⑤ pip 与 conda 比较

 

→ 依赖项检查

 pip：

 不一定会展示所需其他依赖包。

 安装包时或许会直接忽略依赖项而安装，仅在结果中提示错误。

 conda：

 列出所需其他依赖包。

 安装包时自动安装其依赖项。

 可以便捷地在包的不同版本中自由切换。

→ 环境管理

 pip：维护多个环境难度较大。

 conda：比较方便地在不同环境之间进行切换，环境管理较为简单。

→ 对系统自带Python的影响

 pip：在系统自带Python中包的更新/回退版本/卸载将影响其他程序。

 conda：不会影响系统自带Python。

→ 适用语言

 pip：仅适用于Python。

 conda：适用于Python, R, Ruby, Lua, Scala, Java, JavaScript, C/C++, FORTRAN。

⑥ conda与pip、virtualenv的关系

 conda结合了pip和virtualenv的功能。

二、Anaconda的适用平台及安装条件

 

1. 适用平台

 

Anaconda可以在以下系统平台中安装和使用：

 Windows

 macOS

 Linux（x86 / Power8）

2. 安装条件

 系统要求：32位或64位系统均可

 下载文件大小：约500MB

 所需空间大小：3GB空间大小（Miniconda仅需400MB空间即可）

三、Anaconda的安装步骤

 

1. macOS系统安装Anaconda

 

① 图形界面安装

1.前往[官方下载页面](https://link.jianshu.com?t=https%3A%2F%2Fwww.anaconda.com%2Fdownloads%23macos)下载。有两个版本可供选择：Python 3.6 和 Python 2.7，我下载的是前者。选择版之后点击“64-Bit Graphical Installer”进行下载。

2.完成下载之后，双击下载文件，在对话框中“Introduction”、“Read Me”、“License”部分可直接点击下一步。

3.“Destination Select”部分选择“Install for me only”并点击下一步。

 注意：若有错误提示信息“You cannot install Anaconda in this location”则重新选择“Install for me only”并点击下一步。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BE4.tmp.jpg) 

4.“Installation Type”部分，可以点击“Change Install Location”来改变安装位置。标准的安装路径是在用户的家目录下。在这一步我没有改变安装位置。若选择默认安装路径，则直接点击“Install”进行安装。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BE5.tmp.jpg) 

 

5.待“Installation”部分结束，在“Summary”部分若看到“The installation was completed successfully.”则安装成功，直接点击“Close”关闭对话框。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BE6.tmp.jpg) 

 

6.在mac的Launchpad中可以找到名为“Anaconda-Navigator”的图标，点击打开。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BE7.tmp.jpg) 

 

7.若“Anaconda-Navigator”成功启动，则说明真正成功地安装了Anaconda；如果未成功，请务必仔细检查以上安装步骤。

 “Anaconda-Navigator”中已经包含“Jupyter Notebook”、“Jupyterlab”、“Qtconsole”和“Spyder”。（图中的“Rstudio”是我后来安装的，但它默认出现在“Anaconda-Navigator”的启动界面，只需要点击“Install”便可安装。）

 

 

8.完成安装。

② 命令行安装

1.前往[官方下载页面](https://link.jianshu.com?t=https%3A%2F%2Fwww.anaconda.com%2Fdownloads%23macos)下载。有两个版本可供选择：Python 3.6 和 Python 2.7，我下载的是前者。选择版之后点击“64-Bit Command-Line Installer”进行下载。

2.完成下载之后，在mac的Launchpad中找到“其他”并打开“终端”。

 安装Python 3.6：bash ~/Downloads/Anaconda3-5.0.1-MacOSX-x86_64.sh

 安装Python 2.7：bash ~/Downloads/Anaconda2-5.0.1-MacOSX-x86_64.sh

 注意：

 首词bash也需要输入，无论是否用的Bash shell。

 如果你的下载路径是自定义的，那么把该步骤路径中的~/Downloads替换成你自己的下载路径。

 如果你将第1步下载的.sh文件重命名了，那么把该步骤路径中的Anaconda3-5.0.1-MacOSX-x86_64.sh或Anaconda2-5.0.1-MacOSX-x86_64.sh替换成你重命名后的文件名。

 强烈建议：不要修改文件名。如果重命名，使用英文进行命名。

3.安装过程中，看到提示“In order to continue the installation process, please review the license agreement.”（“请浏览许可证协议以便继续安装。”），点击“Enter”查看“许可证协议”。

4.在“许可证协议”界面将屏幕滚动至底，输入“yes”表示同意许可证协议内容。然后进行下一步。

5.安装过程中，提示“Press Enter to confirm the location, Press CTRL-C to cancel the installation or specify an alternate installation directory.”（“按回车键确认安装路径，按'CTRL-C'取消安装或者指定安装目录。”）如果接受默认安装路径，则会显示“PREFIX=/home/<user>/anaconda<2 or 3>”并且继续安装。安装过程大约需要几分钟的时间。

 建议：直接接受默认安装路径。

6.安装器若提示“Do you wish the installer to prepend the Anaconda install location to PATH in your /home/<user>/.bash_profile ?”（“你希望安装器添加Anaconda安装路径在/home/<user>/.bash_profile文件中吗？”），建议输入“yes”。

 注意：

 路径/home/<user>/.bash_profile中“<user>”即进入到家目录后你的目录名。

 如果输入“no”，则需要手动添加路径。添加export PATH="/<path to anaconda>/bin:$PATH"在“.bashrc”或者“.bash_profile”中。其中，“<path to anaconda>”替换为你真实的Anaconda安装路径。

7.当看到“Thank you for installing Anaconda!”则说明已经成功完成安装。

8.关闭终端，然后再打开终端以使安装后的Anaconda启动。

9.验证安装结果。可选用以下任意一种方法：

 在终端中输入命令condal list，如果Anaconda被成功安装，则会显示已经安装的包名和版本号。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BE8.tmp.jpg) 

 在终端中输入python。这条命令将会启动Python交互界面，如果Anaconda被成功安装并且可以运行，则将会在Python版本号的右边显示“Anaconda custom (64-bit)”。退出Python交互界面则输入exit()或quit()即可。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BE9.tmp.jpg) 

 在终端中输入anaconda-navigator。如果Anaconda被成功安装，则Anaconda Navigator的图形界面将会被启动。

2. Windows系统安装Anaconda

1.前往[官方下载页面](https://link.jianshu.com?t=https%3A%2F%2Fdocs.anaconda.com%2Fanaconda%2Finstall%2Fwindows)下载。有两个版本可供选择：Python 3.6 和 Python 2.7，选择版之后根据自己操作系统的情况点击“64-Bit Graphical Installer”或“32-Bit Graphical Installer”进行下载。

2,完成下载之后，双击下载文件，启动安装程序。

 注意：

 如果在安装过程中遇到任何问题，那么暂时地关闭杀毒软件，并在安装程序完成之后再打开。

 如果在安装时选择了“为所有用户安装”，则卸载Anaconda然后重新安装，只为“我这个用户”安装。

3.选择“Next”。

4.阅读许可证协议条款，然后勾选“I Agree”并进行下一步。

5.除非是以管理员身份为所有用户安装，否则仅勾选“Just Me”并点击“Next”。

6.在“Choose Install Location”界面中选择安装Anaconda的目标路径，然后点击“Next”。

 注意：

 目标路径中不能含有空格，同时不能是“unicode”编码。

 除非被要求以管理员权限安装，否则不要以管理员身份安装。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BEA.tmp.jpg) 

7.在“Advanced Installation Options”中不要勾选“Add Anaconda to my PATH environment variable.”（“添加Anaconda至我的环境变量。”）。因为如果勾选，则将会影响其他程序的使用。如果使用Anaconda，则通过打开Anaconda Navigator或者在开始菜单中的“Anaconda Prompt”（类似macOS中的“终端”）中进行使用。

除非你打算使用多个版本的Anaconda或者多个版本的Python，否则便勾选“Register Anaconda as my default Python 3.6”。

 

然后点击“Install”开始安装。如果想要查看安装细节，则可以点击“Show Details”。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BEB.tmp.jpg) 

8.点击“Next”。

9.进入“Thanks for installing Anaconda!”界面则意味着安装成功，点击“Finish”完成安装。

 注意：如果你不想了解“Anaconda云”和“Anaconda支持”，则可以不勾选“Learn more about Anaconda Cloud”和“Learn more about Anaconda Support”。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BEC.tmp.jpg) 

10.验证安装结果。可选以下任意方法：

 “开始 → Anaconda3（64-bit）→ Anaconda Navigator”，若可以成功启动Anaconda Navigator则说明安装成功。

 “开始 → Anaconda3（64-bit）→ 右键点击Anaconda Prompt → 以管理员身份运行”，在Anaconda Prompt中输入conda list，可以查看已经安装的包名和版本号。若结果可以正常显示，则说明安装成功。

3. Linux系统安装Anaconda

 前往[官方下载页面](https://link.jianshu.com?t=https%3A%2F%2Fwww.anaconda.com%2Fdownload%2F%23linux)下载。有两个版本可供选择：Python 3.6 和 Python 2.7。

 启动终端，在终端中输入命令md5sum /path/filename或sha256sum /path/filename

 注意：将该步骤命令中的/path/filename替换为文件的实际下载路径和文件名。其中，path是路径，filename为文件名。

 强烈建议：

 路径和文件名中不要出现空格或其他特殊字符。

 路径和文件名最好以英文命名，不要以中文或其他特殊字符命名。

 根据Python版本的不同有选择性地在终端输入命令：

 Python 3.6：bash ~/Downloads/Anaconda3-5.0.1-Linux-x86_64.sh

 Python 2.7：bash ~/Downloads/Anaconda2-5.0.1-Linux-x86_64.sh

 注意：

 首词bash也需要输入，无论是否用的Bash shell。

 如果你的下载路径是自定义的，那么把该步骤路径中的~/Downloads替换成你自己的下载路径。

 除非被要求使用root权限，否则均选择“Install Anaconda as a user”。

 安装过程中，看到提示“In order to continue the installation process, please review the license agreement.”（“请浏览许可证协议以便继续安装。”），点击“Enter”查看“许可证协议”。

 在“许可证协议”界面将屏幕滚动至底，输入“yes”表示同意许可证协议内容。然后进行下一步。

 安装过程中，提示“Press Enter to accept the default install location, CTRL-C to cancel the installation or specify an alternate installation directory.”（“按回车键确认安装路径，按'CTRL-C'取消安装或者指定安装目录。”）如果接受默认安装路径，则会显示“PREFIX=/home/<user>/anaconda<2 or 3>”并且继续安装。安装过程大约需要几分钟的时间。

 建议：直接接受默认安装路径。

 安装器若提示“Do you wish the installer to prepend the Anaconda<2 or 3> install location to PATH in your /home/<user>/.bashrc ?”（“你希望安装器添加Anaconda安装路径在/home/<user>/.bashrc文件中吗？”），建议输入“yes”。

 注意：

 路径/home/<user>/.bash_rc中“<user>”即进入到家目录后你的目录名。

 如果输入“no”，则需要手动添加路径，否则conda将无法正常运行。

 当看到“Thank you for installing Anaconda<2 or 3>!”则说明已经成功完成安装。

 关闭终端，然后再打开终端以使安装后的Anaconda启动。或者直接在终端中输入source ~/.bashrc也可完成启动。

 验证安装结果。可选用以下任意一种方法：

 在终端中输入命令condal list，如果Anaconda被成功安装，则会显示已经安装的包名和版本号。

 在终端中输入python。这条命令将会启动Python交互界面，如果Anaconda被成功安装并且可以运行，则将会在Python版本号的右边显示“Anaconda custom (64-bit)”。退出Python交互界面则输入exit()或quit()即可。

 在终端中输入anaconda-navigator。如果Anaconda被成功安装，则Anaconda Navigator将会被启动。

四、管理conda

 

0. 写在前面

 

接下来均是以命令行模式进行介绍，Windows用户请打开“Anaconda Prompt”；macOS和Linux用户请打开“Terminal”（“终端”）进行操作。

 

1. 验证conda已被安装

 

conda --version

 

终端上将会以conda 版本号的形式显示当前安装conda的版本号。如：conda 3.11.0

 注意：如果出现错误信息，则需核实是否出现以下情况：

 使用的用户是否是安装Anaconda时的账户。

 是否在安装Anaconda之后重启了终端。

2. 更新conda至最新版本

 

conda update conda

 

执行命令后，conda将会对版本进行比较并列出可以升级的版本。同时，也会告知用户其他相关包也会升级到相应版本。

 

当较新的版本可以用于升级时，终端会显示Proceed ([y]/n)?，此时输入y即可进行升级。

 

3. 查看conda帮助信息

 

conda --help

 

或

 

conda -h

 

4. 卸载conda

 

① Linux 或 macOS

 

rm -rf ~/anaconda2

 

或

 

rm -rf ~/anaconda3

 

即删除Anaconda的安装目录。根据安装的Anaconda版本选择相应的卸载命令。

 

② Windows

 

控制面板 → 添加或删除程序 → 选择“Python X.X (Anaconda)” → 点击“删除程序”

 注意：

 Python X.X：即Python的版本，如：Python 3.6。

 Windows 10的删除有所不同。

五、管理环境

 

0. 写在前面

 

接下来均是以命令行模式进行介绍，Windows用户请打开“Anaconda Prompt”；macOS和Linux用户请打开“Terminal”（“终端”）进行操作。

 

1. 创建新环境

 

conda create --name <env_name> <package_names>

 注意：

 <env_name>即创建的环境名。建议以英文命名，且不加空格，名称两边不加尖括号“<>”。

 <package_names>即安装在环境中的包名。名称两边不加尖括号“<>”。

 如果要安装指定的版本号，则只需要在包名后面以=和版本号的形式执行。如：conda create --name python2 python=2.7，即创建一个名为“python2”的环境，环境中安装版本为2.7的python。

 如果要在新创建的环境中创建多个包，则直接在<package_names>后以空格隔开，添加多个包名即可。如：conda create -n python3 python=3.5 numpy pandas，即创建一个名为“python3”的环境，环境中安装版本为3.5的python，同时也安装了numpy和pandas。

 --name同样可以替换为-n。

 提示：默认情况下，新创建的环境将会被保存在/Users/<user_name>/anaconda3/env目录下，其中，<user_name>为当前用户的用户名。

2. 切换环境

 

① Linux 或 macOS

 

source activate <env_name>

 

② Windows

 

activate <env_name>

 

③ 提示

 如果创建环境后安装Python时没有指定Python的版本，那么将会安装与Anaconda版本相同的Python版本，即如果安装Anaconda第2版，则会自动安装Python 2.x；如果安装Anaconda第3版，则会自动安装Python 3.x。

 当成功切换环境之后，在该行行首将以“(env_name)”或“[env_name]”开头。其中，“env_name”为切换到的环境名。如：在macOS系统中执行source active python2，即切换至名为“python2”的环境，则行首将会以(python2)开头。

3. 退出环境至root

 

① Linux 或 macOS

 

source deactivate

 

② Windows

 

deactivate

 

③ 提示

 

当执行退出当前环境，回到root环境命令后，原本行首以“(env_name)”或“[env_name]”开头的字符将不再显示。

 

4. 显示已创建环境

 

conda info --envs

 

或

 

conda info -e

 

或

 

conda env list

 例如：

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BFC.tmp.jpg) 

结果中星号“*”所在行即为当前所在环境。macOS系统中默认创建的环境名为“base”。

 

5. 复制环境

 

conda create --name <new_env_name> --clone <copied_env_name>

 注意：

 <copied_env_name>即为被复制/克隆环境名。环境名两边不加尖括号“<>”。

 <new_env_name>即为复制之后新环境的名称。环境名两边不加尖括号“<>”。

 如：conda create --name py2 --clone python2，即为克隆名为“python2”的环境，克隆后的新环境名为“py2”。此时，环境中将同时存在“python2”和“py2”环境，且两个环境的配置相同。

6. 删除环境

 

conda remove --name <env_name> --all

 注意：<env_name>为被删除环境的名称。环境名两边不加尖括号“<>”。

六、管理包

 

1. 查找可供安装的包版本

 

① 精确查找

 

conda search --full-name <package_full_name>

 注意：

 --full-name为精确查找的参数。

 <package_full_name>是被查找包的全名。包名两边不加尖括号“<>”。

 例如：conda search --full-name python即查找全名为“python”的包有哪些版本可供安装。

② 模糊查找

 

conda search <text>

 注意：<text>是查找含有此字段的包名。此字段两边不加尖括号“<>”。

 例如：conda search py即查找含有“py”字段的包，有哪些版本可供安装。

2. 获取当前环境中已安装的包信息

 

conda list

 

执行上述命令后将在终端显示当前环境已安装包的包名及其版本号。

 

3. 安装包

 

① 在指定环境中安装包

 

conda install --name <env_name> <package_name>

 注意：

 <env_name>即将包安装的指定环境名。环境名两边不加尖括号“<>”。

 <package_name>即要安装的包名。包名两边不加尖括号“<>”。

 例如：conda install --name python2 pandas即在名为“python2”的环境中安装pandas包。

② 在当前环境中安装包

 

conda install <package_name>

 注意：

 <package_name>即要安装的包名。包名两边不加尖括号“<>”。

 执行命令后在当前环境中安装包。

 例如：conda install pandas即在当前环境中安装pandas包。

③ 使用pip安装包

 

→ 使用场景

 

当使用conda install无法进行安装时，可以使用pip进行安装。例如：see包。

 

→ 命令

 

pip install <package_name>

 注意：<package_name>为指定安装包的名称。包名两边不加尖括号“<>”。

 如：pip install see即安装see包。

→ 注意

 pip只是包管理器，无法对环境进行管理。因此如果想在指定环境中使用pip进行安装包，则需要先切换到指定环境中，再使用pip命令安装包。

 pip无法更新python，因为pip并不将python视为包。

 pip可以安装一些conda无法安装的包；conda也可以安装一些pip无法安装的包。因此当使用一种命令无法安装包时，可以尝试用另一种命令。

④ 从Anaconda.org安装包

 

→ 使用场景

 

当使用conda install无法进行安装时，可以考虑从Anaconda.org中获取安装包的命令，并进行安装。

 

→ 注意

 从Anaconda.org安装包时，无需注册。

 在当前环境中安装来自于Anaconda.org的包时，需要通过输入要安装的包在Anaconda.org中的路径作为获取途径（channel）。查询路径的方式如下：

 在浏览器中输入：[http://anaconda.org](https://link.jianshu.com?t=http%3A%2F%2Fanaconda.org)，或直接点击[Anaconda.org](https://link.jianshu.com?t=http%3A%2F%2Fanaconda.org)

 在新页面“Anaconda Cloud”的上方搜索框中输入要安装的包名，然后点击右边“放大镜”标志。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BFD.tmp.jpg) 

 搜索结果中有数以千计的包可供选择，此时点击“Downloads”可根据下载量进行排序，最上面的为下载最多的包。（图中以搜索bottleneck包为例）

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BFE.tmp.jpg) 

 选择满足需求的包或下载量最多的包，点击包名。

 复制“To install this package with conda run:”下方的命令，并粘贴在终端中执行。

![img](Anaconda%E4%BB%8B%E7%BB%8D%E3%80%81%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.assets/wps6BFF.tmp.jpg) 

 完成安装。

4. 卸载包

 

① 卸载指定环境中的包

 

conda remove --name <env_name> <package_name>

 注意：

 <env_name>即卸载包所在指定环境的名称。环境名两边不加尖括号“<>”。

 <package_name>即要卸载包的名称。包名两边不加尖括号“<>”。

 例如：conda remove --name python2 pandas即卸载名为“python2”中的pandas包。

② 卸载当前环境中的包

 

conda remove <package_name>

 注意：

 <package_name>即要卸载包的名称。包名两边不加尖括号“<>”。

 执行命令后即在当前环境中卸载指定包。

 例如：conda remove pandas即在当前环境中卸载pandas包。

5. 更新包

 

① 更新所有包

 

conda update --all

 

或

 

conda upgrade --all

 建议：在安装Anaconda之后执行上述命令更新Anaconda中的所有包至最新版本，便于使用。

② 更新指定包

 

conda update <package_name>

 

或

 

conda upgrade <package_name>

 注意：

 <package_name>为指定更新的包名。包名两边不加尖括号“<>”。

 更新多个指定包，则包名以空格隔开，向后排列。如：conda update pandas numpy matplotlib即更新pandas、numpy、matplotlib包。

七、参考资料

 知乎“初学python者自学anaconda的正确姿势是什么？？”[猴子的回答](https://link.jianshu.com?t=https%3A%2F%2Fwww.zhihu.com%2Fquestion%2F58033789%2Fanswer%2F254673663%3Futm_source%3Dwechat_session%26utm_medium%3Dsocial)

 [Anaconda Cheat Sheet](https://link.jianshu.com?t=https%3A%2F%2Fdocs.anaconda.com%2F_downloads%2FAnaconda-Starter-Guide-Cheat-Sheet.pdf)

 [Anaconda官方网站](https://link.jianshu.com?t=https%3A%2F%2Fwww.anaconda.com%2Fdownload%2F%23macos)

 [conda官方网站](https://link.jianshu.com?t=https%3A%2F%2Fconda.io%2Fdocs%2F)

 [pip维基百科](https://link.jianshu.com?t=https%3A%2F%2Fen.wikipedia.org%2Fwiki%2FPip_(package_manager)%23External_links)

 [pip官方网站](https://link.jianshu.com?t=https%3A%2F%2Fpip.pypa.io%2Fen%2Fstable%2F)

 YouTube视频：[Pip vs Conda: Differences and Comparisons](https://link.jianshu.com?t=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DRXLRIHaabaI)

 [virtualenv官方网站](https://link.jianshu.com?t=https%3A%2F%2Fvirtualenv.pypa.io%2Fen%2Fstable%2F)

 [macOS系统安装Anaconda的官方教程](https://link.jianshu.com?t=https%3A%2F%2Fdocs.anaconda.com%2Fanaconda%2Finstall%2Fmac-os%23macos-graphical-install)

 [Windows系统安装Anaconda的官方教程](https://link.jianshu.com?t=https%3A%2F%2Fdocs.anaconda.com%2Fanaconda%2Finstall%2Fwindows)

 [Linux系统安装Anaconda的官方教程](https://link.jianshu.com?t=https%3A%2F%2Fdocs.anaconda.com%2Fanaconda%2Finstall%2Flinux)

 [Conda Official User Guide](https://link.jianshu.com?t=https%3A%2F%2Fconda.io%2Fdocs%2Fuser-guide%2Fgetting-started.html%23managing-conda)