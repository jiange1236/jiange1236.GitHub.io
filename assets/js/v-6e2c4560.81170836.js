"use strict";(self.webpackChunkZeblog=self.webpackChunkZeblog||[]).push([[9045],{14144:(i,e,n)=>{n.r(e),n.d(e,{default:()=>t});var l=n(4270);const s=[(0,l.uE)('<h1 id="springboot打包不同环境配置与shell脚本部署" tabindex="-1"><a class="header-anchor" href="#springboot打包不同环境配置与shell脚本部署" aria-hidden="true">#</a> SpringBoot打包不同环境配置与shell脚本部署</h1><p>本篇和大家分享的是springboot打包并结合shell脚本命令部署，重点在分享一个shell程序启动工具，希望能便利工作；</p><ul><li>profiles指定不同环境的配置</li><li>maven-assembly-plugin打发布压缩包</li><li>分享shenniu_publish.sh程序启动工具</li><li>linux上使用shenniu_publish.sh启动程序</li></ul><h1 id="profiles指定不同环境的配置" tabindex="-1"><a class="header-anchor" href="#profiles指定不同环境的配置" aria-hidden="true">#</a> profiles指定不同环境的配置</h1><p>通常一套程序分为了很多个部署环境：开发，测试，uat，线上 等，我们要想对这些环境区分配置文件，可以通过两种方式：</p><ul><li>通过application.yml中编码指定 profile.active=uat 方式指定</li><li>通过mvn中profiles来区分不同环境对应的配置文件夹，人工可以手动在idea勾选生成不同环境的包(推荐)</li></ul><p>这里我们要讲的是第二种，首先在mvn中配置如下内容：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> 1     &lt;profiles&gt;\n 2         &lt;profile&gt;\n 3             &lt;id&gt;node&lt;/id&gt;\n 4             &lt;properties&gt;\n 5                 &lt;!--传递给脚本的参数值--&gt;\n 6                 &lt;activeProfile&gt;node&lt;/activeProfile&gt;\n 7                 &lt;package-name&gt;${scripts_packageName}&lt;/package-name&gt;\n 8                 &lt;boot-main&gt;${scripts_bootMain}&lt;/boot-main&gt;\n 9             &lt;/properties&gt;\n10             &lt;activation&gt;\n11                 &lt;activeByDefault&gt;true&lt;/activeByDefault&gt;\n12             &lt;/activation&gt;\n13         &lt;/profile&gt;\n14         &lt;profile&gt;\n15             &lt;id&gt;node1&lt;/id&gt;\n16             &lt;properties&gt;\n17                 &lt;activeProfile&gt;node1&lt;/activeProfile&gt;\n18                 &lt;package-name&gt;${scripts_packageName}&lt;/package-name&gt;\n19                 &lt;boot-main&gt;${scripts_bootMain}&lt;/boot-main&gt;\n20             &lt;/properties&gt;\n21         &lt;/profile&gt;\n22         &lt;profile&gt;\n23             &lt;id&gt;node2&lt;/id&gt;\n24             &lt;properties&gt;\n25                 &lt;activeProfile&gt;node2&lt;/activeProfile&gt;\n26                 &lt;package-name&gt;${scripts_packageName}&lt;/package-name&gt;\n27                 &lt;boot-main&gt;${scripts_bootMain}&lt;/boot-main&gt;\n28             &lt;/properties&gt;\n29         &lt;/profile&gt;\n30     &lt;/profiles&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>节点粗解：</p><ul><li>id：用来指定不同环境配置文件所在的目录，如下我这里： <img src="https://cdn.jsdelivr.net/gh/jiange1236/MyImage/MdImg/fe69f622e6fd659b563e79a848403dcac97db44d.png" alt="image"></li><li>properties：该节点中的节点是可作为参数传递给其他配置文件，如我这里的package-name节点值就可以在另外的assembly.xml或者shell脚本文件中通过${package-name}获取到，如下： <img src="https://cdn.jsdelivr.net/gh/jiange1236/MyImage/MdImg/fd2638a541ecddb2844197770587337bfa4bcc29.png" alt="image"></li><li>activeByDefault：指定默认环境配置文件夹</li></ul><h1 id="maven-assembly-plugin打发布压缩包" tabindex="-1"><a class="header-anchor" href="#maven-assembly-plugin打发布压缩包" aria-hidden="true">#</a> maven-assembly-plugin打发布压缩包</h1><p>对于springboot程序打包，可以分为jar和war，这里是jar包；有场景是咋们配置文件或者第三方等依赖包不想放到工程jar中，并且把这些文件压缩成一个zip包，方便上传到linux；此时通过maven-assembly-plugin和maven-jar-plugin就可以做到，mvn的配置如：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> 1            &lt;plugin&gt;\n 2                 &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n 3                 &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;\n 4                 &lt;version&gt;2.6&lt;/version&gt;\n 5                 &lt;configuration&gt;\n 6                     &lt;archive&gt;\n 7                         &lt;addMavenDescriptor&gt;false&lt;/addMavenDescriptor&gt;\n 8                         &lt;manifest&gt;\n 9                             &lt;addClasspath&gt;true&lt;/addClasspath&gt;\n10                             &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;\n11                             &lt;mainClass&gt;${scripts_bootMain}&lt;/mainClass&gt;\n12                         &lt;/manifest&gt;\n13                     &lt;/archive&gt;\n14                     &lt;!--打包排除项--&gt;\n15                     &lt;excludes&gt;\n16                         &lt;exclude&gt;**/*.yml&lt;/exclude&gt;\n17                         &lt;exclude&gt;**/*.properties&lt;/exclude&gt;\n18                         &lt;exclude&gt;**/*.xml&lt;/exclude&gt;\n19                         &lt;exclude&gt;**/*.sh&lt;/exclude&gt;\n20                     &lt;/excludes&gt;\n21                 &lt;/configuration&gt;\n22                 &lt;executions&gt;\n23                     &lt;execution&gt;\n24                         &lt;id&gt;make-a-jar&lt;/id&gt;\n25                         &lt;phase&gt;compile&lt;/phase&gt;\n26                         &lt;goals&gt;\n27                             &lt;goal&gt;jar&lt;/goal&gt;\n28                         &lt;/goals&gt;\n29                     &lt;/execution&gt;\n30                 &lt;/executions&gt;\n31             &lt;/plugin&gt;\n32 \n33             &lt;plugin&gt;\n34                 &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;\n35                 &lt;artifactId&gt;maven-assembly-plugin&lt;/artifactId&gt;\n36                 &lt;version&gt;2.4&lt;/version&gt;\n37                 &lt;!-- The configuration of the plugin --&gt;\n38                 &lt;configuration&gt;\n39                     &lt;!-- Specifies the configuration file of the assembly plugin --&gt;\n40                     &lt;descriptors&gt;\n41                         &lt;descriptor&gt;${project.basedir}/src/main/assembly/assembly.xml&lt;/descriptor&gt;\n42                     &lt;/descriptors&gt;\n43                 &lt;/configuration&gt;\n44                 &lt;executions&gt;\n45                     &lt;execution&gt;\n46                         &lt;id&gt;make-assembly&lt;/id&gt;\n47                         &lt;phase&gt;package&lt;/phase&gt;\n48                         &lt;goals&gt;\n49                             &lt;goal&gt;single&lt;/goal&gt;\n50                         &lt;/goals&gt;\n51                     &lt;/execution&gt;\n52                 &lt;/executions&gt;\n53             &lt;/plugin&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>值得注意的地方如下几点：</p><ul><li>mainClass节点：用来指定启动main函数入口类路径，如这里的：com.sm.EurekaServerApplication</li><li>excludes节点：排除主jar包中配置等一些列后缀文件，因为我们要包这些配置文件放到主包外面</li><li>descriptor节点：用来指定assembly插件对应的assembly.xml配置文件</li></ul><p>有了上面mvn配置，我们还需要assembly.xml的配置，这里提取了结合shell脚本发布程序的配置：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> 1 &lt;assembly xmlns=&quot;http://maven.apache.org/ASSEMBLY/2.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;\n 2           xsi:schemaLocation=&quot;http://maven.apache.org/ASSEMBLY/2.0.0 http://maven.apache.org/xsd/assembly-2.0.0.xsd\n 3 http://maven.apache.org/ASSEMBLY/2.0.0 &quot;&gt;\n 4     &lt;id&gt;${activeProfile}&lt;/id&gt;\n 5     &lt;!--打包成一个用于发布的zip文件--&gt;\n 6     &lt;formats&gt;\n 7         &lt;format&gt;zip&lt;/format&gt;\n 8     &lt;/formats&gt;\n 9     &lt;!--true：zip中生成一级目录(此处屏蔽，配合脚本需要profiles后缀)--&gt;\n10     &lt;includeBaseDirectory&gt;false&lt;/includeBaseDirectory&gt;\n11     &lt;dependencySets&gt;\n12         &lt;dependencySet&gt;\n13             &lt;!--打包进zip文件的lib目录--&gt;\n14             &lt;useProjectArtifact&gt;false&lt;/useProjectArtifact&gt;\n15             &lt;outputDirectory&gt;${package-name}-${activeProfile}/lib&lt;/outputDirectory&gt;\n16             &lt;unpack&gt;false&lt;/unpack&gt;\n17         &lt;/dependencySet&gt;\n18     &lt;/dependencySets&gt;\n19 \n20     &lt;fileSets&gt;\n21         &lt;!-- 配置文件打包进zip文件的conf目录 --&gt;\n22         &lt;fileSet&gt;\n23             &lt;directory&gt;${project.basedir}/src/main/profiles/${activeProfile}&lt;/directory&gt;\n24             &lt;outputDirectory&gt;${package-name}-${activeProfile}/conf&lt;/outputDirectory&gt;\n25             &lt;includes&gt;\n26                 &lt;include&gt;**/*&lt;/include&gt;\n27                 &lt;!--&lt;include&gt;*.xml&lt;/include&gt;--&gt;\n28                 &lt;!--&lt;include&gt;*.properties&lt;/include&gt;--&gt;\n29                 &lt;!--&lt;include&gt;*.yml&lt;/include&gt;--&gt;\n30             &lt;/includes&gt;\n31         &lt;/fileSet&gt;\n32 \n33         &lt;!--启动脚本打包进zip文件--&gt;\n34         &lt;fileSet&gt;\n35             &lt;directory&gt;${project.basedir}/src/main/scripts&lt;/directory&gt;\n36             &lt;outputDirectory&gt;&lt;/outputDirectory&gt;\n37             &lt;includes&gt;\n38                 &lt;include&gt;**/*&lt;/include&gt;\n39             &lt;/includes&gt;\n40             &lt;!-- 文件文件权限为777 --&gt;\n41             &lt;fileMode&gt;777&lt;/fileMode&gt;\n42             &lt;!-- 目录权限为777  --&gt;\n43             &lt;directoryMode&gt;777&lt;/directoryMode&gt;\n44             &lt;!--脚本中参数变量为pom中的值 关键--&gt;\n45             &lt;filtered&gt;true&lt;/filtered&gt;\n46         &lt;/fileSet&gt;\n47 \n48         &lt;!-- 项目编译出来的jar打包进zip文件 --&gt;\n49         &lt;fileSet&gt;\n50             &lt;directory&gt;${project.build.directory}&lt;/directory&gt;\n51             &lt;outputDirectory&gt;${package-name}-${activeProfile}/&lt;/outputDirectory&gt;\n52             &lt;includes&gt;\n53                 &lt;include&gt;*.jar&lt;/include&gt;\n54             &lt;/includes&gt;\n55         &lt;/fileSet&gt;\n56     &lt;/fileSets&gt;\n57 &lt;/assembly&gt;\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重点节点介绍：</p><ul><li>formats节点：把配置文件和jar包等压缩成什么文件格式，这里可以有：zip，tar等</li><li>fileMode节点：指定scripts目录下脚本文件(这里是：shenniu_publish.sh)在linux上文件权限为777</li><li>filtered节点：脚本中参数变量为pom的profiles中properties的值(该配置，是把mvn中属性值映射生成到sh文件中，如：${package-name})</li></ul><p>完成上面配置后，此时我们可以通过idea上勾选切换不同环境来打zip包，如图：</p><p><img src="https://cdn.jsdelivr.net/gh/jiange1236/MyImage/MdImg/348819-20190309170559272-1005982868.png" alt="img"></p><h1 id="分享shenniu-publish-sh程序启动工具" tabindex="-1"><a class="header-anchor" href="#分享shenniu-publish-sh程序启动工具" aria-hidden="true">#</a> 分享shenniu_publish.sh程序启动工具</h1><p>上面步骤完成了zip格式的发布包，我们再分享下启动程序的shell脚本，该脚本具有的功能如：</p><ul><li>解压zip+启动jar包</li><li>启动jar包</li><li>停止对应jar运行</li><li>重启jar程序</li></ul><p>目前该shell中封装了两种启动jar命令的方式：</p><ul><li>java -cp</li><li>java -jar</li></ul><p>如图命令格式：</p><p><img src="https://cdn.jsdelivr.net/gh/jiange1236/MyImage/MdImg/348819-20190309170514140-1638598831.png" alt="img"></p><p>来看全部的shell代码：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>  1 #!/usr/bin/env bash\n  2 #可变参数变量\n  3 languageType=&quot;javac&quot; #支持 java,javac,netcore 发布\n  4 #参数值由pom文件传递\n  5 baseZipName=&quot;${package-name}-${activeProfile}&quot; #压缩包名称  publish-test.zip的publish\n  6 packageName=&quot;${package-name}&quot; #命令启动包名 xx.jar的xx\n  7 mainclass=&quot;${boot-main}&quot; #java -cp启动时，指定main入口类;命令：java -cp conf;lib\\*.jar;${packageName}.jar ${mainclass}\n  8 \n  9 #例子\n 10 # baseZipName=&quot;publish-test&quot; #压缩包名称  publish-test.zip的publish\n 11 # packageName=&quot;publish&quot; #命令启动包名 publish.jar的xx\n 12 \n 13 #固定变量\n 14 basePath=$(cd `dirname $0`/; pwd)\n 15 baseZipPath=&quot;${basePath}/${baseZipName}.zip&quot;  #压缩包路径\n 16 baseDirPath=&quot;${basePath}&quot; #解压部署磁盘路径\n 17 pid= #进程pid\n 18 \n 19 #解压\n 20 function shenniu_unzip()\n 21 {\n 22     echo &quot;解压---------------------------------------------&quot;\n 23     echo &quot;压缩包路径：${baseZipPath}&quot;\n 24     if [ ! `find ${baseZipPath}` ]\n 25     then\n 26         echo &quot;不存在压缩包：${baseZipPath}&quot;\n 27     else\n 28         echo &quot;解压磁盘路径：${baseDirPath}/${baseZipName}&quot;\n 29         echo &quot;开始解压...&quot;\n 30 \n 31         #解压命令\n 32         unzip -od ${baseDirPath}/${baseZipName} ${baseZipPath}\n 33 \n 34         #设置执行权限\n 35         chmod +x ${baseDirPath}/${baseZipName}/${packageName}\n 36 \n 37         echo &quot;解压完成。&quot;  \n 38     fi\n 39 }\n 40 \n 41 #检测pid\n 42 function getPid()\n 43 {\n 44     echo &quot;检测状态---------------------------------------------&quot;\n 45     pid=`ps -ef | grep -n ${packageName} | grep -v grep | awk &#39;{print $2}&#39;`\n 46     if [ ${pid} ] \n 47     then\n 48         echo &quot;运行pid：${pid}&quot;\n 49     else\n 50         echo &quot;未运行&quot;\n 51     fi\n 52 }\n 53 \n 54 #启动程序\n 55 function start()\n 56 {\n 57     #启动前，先停止之前的\n 58     stop\n 59     if [ ${pid} ]\n 60     then\n 61         echo &quot;停止程序失败，无法启动&quot;\n 62     else\n 63         echo &quot;启动程序---------------------------------------------&quot;\n 64         \n 65         #选择语言类型\n 66         read -p &quot;输入程序类型(java,javac,netcore)，下一步按回车键(默认：${languageType})：&quot; read_languageType\n 67         if [ ${read_languageType} ]\n 68         then\n 69             languageType=${read_languageType}\n 70         fi\n 71         echo &quot;选择程序类型：${languageType}&quot;\n 72 \n 73         #进入运行包目录\n 74         cd ${baseDirPath}/${baseZipName}\n 75 \n 76         #分类启动\n 77         if [ &quot;${languageType}&quot; == &quot;javac&quot; ] \n 78         then\n 79             if [ ${mainclass} ] \n 80             then\n 81                 nohup java -cp conf:lib\\*.jar:${packageName}.jar ${mainclass} &gt;${baseDirPath}/${packageName}.out 2&gt;&amp;1 &amp;\n 82                #nohup java -cp conf:lib\\*.jar:${packageName}.jar ${mainclass} &gt;/dev/null 2&gt;&amp;1 &amp;\n 83             fi\n 84         elif [ &quot;${languageType}&quot; == &quot;java&quot; ] \n 85         then\n 86             nohup java -jar ${baseDirPath}/${baseZipName}/${packageName}.jar &gt;/dev/null 2&gt;&amp;1 &amp;\n 87             # java -jar ${baseDirPath}/${baseZipName}/${packageName}.jar\n 88         elif [ &quot;${languageType}&quot; == &quot;netcore&quot; ] \n 89         then\n 90             #nohup dotnet run ${baseDirPath}/${baseZipName}/${packageName} &gt;/dev/null 2&gt;&amp;1 &amp;\n 91             nohup ${baseDirPath}/${baseZipName}/${packageName} &gt;/dev/null 2&gt;&amp;1 &amp;\n 92         fi\n 93 \n 94         #查询是否有启动进程\n 95         getPid\n 96         if [ ${pid} ]\n 97         then\n 98             echo &quot;已启动&quot;\n 99             #nohup日志\n100             tail -n 50 -f ${baseDirPath}/${packageName}.out\n101         else\n102             echo &quot;启动失败&quot;\n103         fi\n104     fi\n105 }\n106 \n107 #停止程序\n108 function stop()\n109 {\n110     getPid\n111     if [ ${pid} ] \n112     then\n113         echo &quot;停止程序---------------------------------------------&quot;\n114         kill -9 ${pid}\n115         \n116         getPid\n117         if [ ${pid} ] \n118         then\n119             #stop\n120             echo &quot;停止失败&quot;\n121         else\n122             echo &quot;停止成功&quot;\n123         fi\n124     fi\n125 }\n126 \n127 #启动时带参数，根据参数执行\n128 if [ ${#} -ge 1 ] \n129 then\n130     case ${1} in\n131         &quot;start&quot;) \n132             start\n133         ;;\n134         &quot;restart&quot;) \n135             start\n136         ;;\n137         &quot;stop&quot;) \n138             stop\n139         ;;\n140         &quot;unzip&quot;) \n141             #执行解压\n142             shenniu_unzip\n143             #执行启动\n144             start\n145         ;;\n146         *) \n147             echo &quot;${1}无任何操作&quot;\n148         ;;\n149     esac\n150 else\n151     echo &quot;\n152     command如下命令：\n153     unzip：解压并启动\n154     start：启动\n155     stop：停止进程\n156     restart：重启\n157 \n158     示例命令如：./shenniu_publish start\n159     &quot;\n160 fi\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>正如上面小节说的，shell中的参数 package-name，activeProfile，boot-main 都是由mvn中profiles的properties中提供，是可变的参数，脚本代码本身不需要人工去修改，只需要变的是mvn的参数即可；其实在我们生成zip包的时候，shell中的参数就被替换了，可以看zip中shell文件内容如：</p><p><img src="https://cdn.jsdelivr.net/gh/jiange1236/MyImage/MdImg/348819-20190309170701655-1208411312.png" alt="img"></p><h1 id="linux上使用shenniu-publish-sh启动程序" tabindex="-1"><a class="header-anchor" href="#linux上使用shenniu-publish-sh启动程序" aria-hidden="true">#</a> linux上使用shenniu_publish.sh启动程序</h1><p>把生成的zip上传到linux上，通过命令解压：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1 unzip -od eureka-server-0.0.1-node eureka-server-0.0.1-node.zip\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其实shell脚本中包含有解压命令，但是我在打包时放在了zip中，所以只能通过手动解压了，当然可以调整；此时进入加压目录如此：</p><p><img src="https://cdn.jsdelivr.net/gh/jiange1236/MyImage/MdImg/348819-20190309170918126-491643739.png" alt="img"></p><p>注：这里第一次执行./shenniu_publish.sh脚本时候，提示了错误信息；是由于我是在windows上编辑的这个脚本，其空格等和linux上不一样，所以运行会有问题，要解决可以使用vim命令在linux把该文件转成linux格式，如下命令：</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>1 vim shenniu_publish.sh\n2 set ff=unix\n3 :wq\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行完后，再来运行脚本./shenniu_publish.sh，此时有如下提示:</p><p><img src="https://cdn.jsdelivr.net/gh/jiange1236/MyImage/MdImg/348819-20190309171107977-1319405631.png" alt="img"></p><p>此刻我们文件是解压状态，因此只需要start命令启动程序即可：</p><p><img src="https://cdn.jsdelivr.net/gh/jiange1236/MyImage/MdImg/348819-20190309171127604-1971799892.png" alt="img"></p><p>到这里shenniu_publish.sh脚本使用就完成了，只要脚本没有提示错误，基本都能启动jar服务；其他restart和stop命令也如此执行就行：</p><p><img src="https://cdn.jsdelivr.net/gh/jiange1236/MyImage/MdImg/348819-20190309171150215-294116419.png" alt="img"></p><p>可以去研究下shell代码，希望该脚本能给你带来效率和好的学习思路，下面是测试用例git地址，脚本在eureka-server项目中：https://github.com/shenniubuxing3/springcloud-Finchley.SR2</p>',46)],a={},t=(0,n(83744).Z)(a,[["render",function(i,e){return(0,l.wg)(),(0,l.iD)("div",null,s)}]])},83744:(i,e)=>{e.Z=(i,e)=>{const n=i.__vccOpts||i;for(const[i,l]of e)n[i]=l;return n}},17070:(i,e,n)=>{n.r(e),n.d(e,{data:()=>l});const l=JSON.parse('{"key":"v-6e2c4560","path":"/others/springboot%E6%89%93%E5%8C%85%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE%E4%B8%8Eshell%E8%84%9A%E6%9C%AC%E9%83%A8%E7%BD%B2.html","title":"SpringBoot打包不同环境配置与shell脚本部署","lang":"zh-CN","frontmatter":{"author":"jiange1236","title":"SpringBoot打包不同环境配置与shell脚本部署","description":"SpringBoot打包不同环境配置与shell脚本部署","date":"2022-01-15T00:00:00.000Z","category":"other","tag":"other","article":true,"timeline":true,"icon":null,"password":null},"excerpt":"","headers":[{"level":1,"title":"SpringBoot打包不同环境配置与shell脚本部署","slug":"springboot打包不同环境配置与shell脚本部署","children":[]},{"level":1,"title":"profiles指定不同环境的配置","slug":"profiles指定不同环境的配置","children":[]},{"level":1,"title":"maven-assembly-plugin打发布压缩包","slug":"maven-assembly-plugin打发布压缩包","children":[]},{"level":1,"title":"分享shenniu_publish.sh程序启动工具","slug":"分享shenniu-publish-sh程序启动工具","children":[]},{"level":1,"title":"linux上使用shenniu_publish.sh启动程序","slug":"linux上使用shenniu-publish-sh启动程序","children":[]}],"git":{"updatedTime":1652532191000,"contributors":[{"name":"jiange1236","email":"183465355@qq.com","commits":4}]},"filePathRelative":"others/springboot打包不同环境配置与shell脚本部署.md"}')}}]);