import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,o as n,a}from"./app-B4HArqit.js";const i={},l=a(`<h1 id="玩客云" tabindex="-1"><a class="header-anchor" href="#玩客云"><span>玩客云</span></a></h1><p>安装包</p><p><a href="https://github.com/hzyitc/armbian-onecloud/releases/download/ci-20240311-162146-UTC/Armbian-unofficial_24.5.0-trunk_Onecloud_bullseye_edge_6.7.9_minimal.img.xz" target="_blank" rel="noopener noreferrer">Armbian-unofficial_24.5.0-trunk_Onecloud_bullseye_edge_6.7.9_minimal.img.xz</a></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>nano /etc/apt/sources.list</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>删除原内容，然后把下面的内容粘贴进入，按CTRL+X 输入Y保存即可</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span># 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释</span></span>
<span class="line"><span>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span></span>
<span class="line"><span># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye main contrib non-free</span></span>
<span class="line"><span>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span></span>
<span class="line"><span># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-updates main contrib non-free</span></span>
<span class="line"><span>deb https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span></span>
<span class="line"><span># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian/ bullseye-backports main contrib non-free</span></span>
<span class="line"><span>deb https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span></span>
<span class="line"><span># deb-src https://mirrors.tuna.tsinghua.edu.cn/debian-security bullseye-security main contrib non-free</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后更新软件源</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>apt update</span></span>
<span class="line"><span>apt upgrade</span></span>
<span class="line"><span>sudo apt-get install  gcc automake autoconf libtool make zip unzip build-essential net-tools iptables</span></span>
<span class="line"><span>sudo apt-get install --fix-missing</span></span>
<span class="line"><span># apt --fix-broken install</span></span>
<span class="line"><span># sudo apt autoclean</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><a href="#Docker%E5%AE%89%E8%A3%85"><strong>Docker安装</strong></a></p><p><strong>Install Home Assistant Supervised</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>apt-get install \\</span></span>
<span class="line"><span>apparmor \\</span></span>
<span class="line"><span>jq \\</span></span>
<span class="line"><span>wget \\</span></span>
<span class="line"><span>curl \\</span></span>
<span class="line"><span>udisks2 \\</span></span>
<span class="line"><span>libglib2.0-bin \\</span></span>
<span class="line"><span>network-manager \\</span></span>
<span class="line"><span>dbus \\</span></span>
<span class="line"><span>lsb-release \\</span></span>
<span class="line"><span>systemd-journal-remote -y</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>OS Agent</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>wget https://github.com/home-assistant/os-agent/releases/download/1.4.1/os-agent_1.4.1_linux_armv7.deb</span></span>
<span class="line"><span>sudo dpkg -i os-agent_1.4.1_linux_armv7.deb</span></span>
<span class="line"><span>sudo apt-get install apparmor</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>grub错误</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>解决方法很简单：</span></span>
<span class="line"><span>sudo nano /etc/default/grub</span></span>
<span class="line"><span>添加：</span></span>
<span class="line"><span>systemd.unified_cgroup_hierarchy=false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Home Assistant Supervised Debian Package</strong></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>wget https://github.com/home-assistant/supervised-installer/releases/latest/download/homeassistant-supervised.deb</span></span>
<span class="line"><span>dpkg -i homeassistant-supervised.deb</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Docker镜像</strong></p><p>直接修改 <code>/etc/docker/daemon.json</code> (docker 版本 &gt;= 1.10 时) 内容为:</p><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#ECEFF4;">{</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#8FBCBB;">registry-mirrors</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">:</span><span style="color:#ECEFF4;"> [</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#A3BE8C;">https://05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com</span><span style="color:#ECEFF4;">&quot;</span><span style="color:#ECEFF4;">]}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>修改后重启服务:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#88C0D0;">systemctl</span><span style="color:#A3BE8C;"> daemon-reload</span></span>
<span class="line"><span style="color:#88C0D0;">systemctl</span><span style="color:#A3BE8C;"> restart</span><span style="color:#A3BE8C;"> docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span># docker pull 05f073ad3c0010ea0f4bc00b7105ec20.mirror.swr.myhuaweicloud.com/homeassistant/armv7-homeassistant</span></span>
<span class="line"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span>docker pull dockerproxy.com/homeassistant/armv7-homeassistant:latest</span></span>
<span class="line"><span>docker tag dockerproxy.com/homeassistant/armv7-homeassistant:latest homeassistant/armv7-homeassistant:latest</span></span>
<span class="line"><span>docker rmi dockerproxy.com/homeassistant/armv7-homeassistant:latest</span></span>
<span class="line"><span>docker run -d --privileged --restart=unless-stopped --name=&quot;homeassistant&quot; -v /data/homeassistant/config:/config --net=host homeassistant/armv7-homeassistant</span></span>
<span class="line"><span># docker run -d --privileged --restart=unless-stopped --name=&quot;homeassistant&quot; -v /data/homeassistant/config:/config --net=host ghcr.io/home-assistant/raspberrypi3-homeassistant</span></span>
<span class="line"><span>=======</span></span>
<span class="line"><span>docker run -d --restart=unless-stopped --name=&quot;homeassistant&quot; -v /data/homeassistant/config:/config --net=host ghcr.io/homeassistant/armv7-homeassistant</span></span>
<span class="line"><span>docker run -d --privileged --restart=unless-stopped --name=&quot;homeassistant&quot; -v /data/homeassistant/config:/config --net=host ghcr.io/home-assistant/raspberrypi3-homeassistant</span></span>
<span class="line"><span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 198c2116c5109f2dc09ab42ad8eb0a95319b83d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="hacs" tabindex="-1"><a class="header-anchor" href="#hacs"><span><strong>HACS</strong></span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker exec -it homeassistant bash</span></span>
<span class="line"><span>wget -O - https://hacs.vip/get | bash -</span></span>
<span class="line"><span>或wget -O - https://hacs.vip/get | HUB_DOMAIN=ghproxy.com/github.com bash -</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="supervisor" tabindex="-1"><a class="header-anchor" href="#supervisor"><span>Supervisor</span></a></h2><p>更新</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>ha supervisor update</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>卸载</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>sudo systemctl disable haos-agent.service</span></span>
<span class="line"><span>sudo systemctl disable hassio-apparmor.service</span></span>
<span class="line"><span>sudo systemctl disable hassio-supervisor.service</span></span>
<span class="line"><span>sudo systemctl stop hassio-supervisor.service</span></span>
<span class="line"><span>sudo systemctl stop haos-agent.service</span></span>
<span class="line"><span>sudo systemctl stop hassio-apparmor.service</span></span>
<span class="line"><span>docker ps | grep -E &#39;hassio&#39;| awk &#39;{print $1}&#39; | xargs docker rm -f</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</p><h2 id="连接wifi" tabindex="-1"><a class="header-anchor" href="#连接wifi"><span>连接WiFi</span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>iw wlo1 scan | grep SSID	#扫描附近的wifi</span></span>
<span class="line"><span>nmcli d wifi connect ZZJ_WiFi password 1111111113 #连接wifi(密码含有空格则用引号括起)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>设置开机启动</p><p><code>cd /etc/init.d/</code><code>nano mywifi</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>#!/bin/sh</span></span>
<span class="line"><span>### BEGIN INIT INFO</span></span>
<span class="line"><span># Default-Start:  2 3 4 5</span></span>
<span class="line"><span># Default-Stop: 0 1 6</span></span>
<span class="line"><span>### END INIT INFO</span></span>
<span class="line"><span>sleep 30s</span></span>
<span class="line"><span></span></span>
<span class="line"><span>nmcli d wifi connect MaLanShanCDong password qaz1234560</span></span>
<span class="line"><span></span></span>
<span class="line"><span>exit 0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>chmod +x /etc/init.d/mywifi</code></p><p><code>update-rc.d mywifi defaults</code></p><p>编辑crontab <code>crontab -e</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>0 * * * * /etc/init.d/mywifi</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>=======</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>198c2116c5109f2dc09ab42ad8eb0a95319b83d1</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h2 id="debian-使用-cron-执行定时任务" tabindex="-1"><a class="header-anchor" href="#debian-使用-cron-执行定时任务"><span><a href="https://www.cnblogs.com/mouseleo/p/8585979.html" target="_blank" rel="noopener noreferrer">Debian 使用 cron 执行定时任务</a></span></a></h2><p>在linux下有两种方法来让一个命令或者脚本执行:</p><ol><li>crontab : 执行一个任务一次或者多次.</li><li>at : 只执行一次.</li></ol><p>crontab是通过读取一个crontab文件来工作，这是一个普通的文本文件，里面列出了要执行的任务。每行都含有要指定的任务的命令、参数与选项，以及要执行任务的时间。（cron 软件在后台运行并且经常检查 /etc/crontab 文件。cron 软件也检查 /var/cron/tabs 目录，搜索新的 crontab 文件。这些 crontab 文件存储一些 cron 在特定时间执行任务的信息。） crontab的基本格式：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span>* * * * * command</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>=======</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>1. \\* * * * * command</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 198c2116c5109f2dc09ab42ad8eb0a95319b83d1</span></span>
<span class="line"><span>几个星号分别为：分 时 日 月 周，最后是要执行的命令。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- 分：0~59</span></span>
<span class="line"><span>- 时：0~23</span></span>
<span class="line"><span>- 日：1~31</span></span>
<span class="line"><span>- 月：1~12</span></span>
<span class="line"><span>- 周：0～6（0表示星期天）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>除了数字还有几个个特殊的符号就是* / - ：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- \\* 代表所有的取值范围内的数字</span></span>
<span class="line"><span>- / 代表每的意思</span></span>
<span class="line"><span>- */5 表示每5个单位</span></span>
<span class="line"><span>- \\- 代表从某个数字到某个数字</span></span>
<span class="line"><span>- , 分开几个离散的数字</span></span>
<span class="line"><span></span></span>
<span class="line"><span>配置文件的一些例子：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- 0 3 * * * /root/test.sh 每天凌晨3点执行test.sh文件</span></span>
<span class="line"><span>- \\* 23-7/1 * * * /root/lnmp restart 晚上11点到早上7点之间，每隔一小时重启lnmp套件</span></span>
<span class="line"><span>- */30 * * * * /usr/sbin/ntpdate 每半小时同步一下时间</span></span>
<span class="line"><span>- 0 23 * * 6 /lnmp restart 每星期六的11 : 00 pm重启重启lnmp套件。</span></span>
<span class="line"><span>- */1 * * * * echo &quot;i am running.&quot;&gt;&gt;/tmp/running.txt 每隔1分钟向/tmp/running.txt写一个&quot;i am running.&quot;字符串。</span></span>
<span class="line"><span></span></span>
<span class="line"><span>运行</span></span>
<span class="line"><span>我以为编辑crontab保存后会自动执行，其实不然，必须通过重启cron才可以，命令如下：</span></span>
<span class="line"><span></span></span>
<span class="line"><span>- 启动/etc/init.d/cron start</span></span>
<span class="line"><span>- 关闭/etc/init.d/cron stop</span></span>
<span class="line"><span>- 重启/etc/init.d/cron restart</span></span>
<span class="line"><span></span></span>
<span class="line"><span># 群晖</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## OPKG</span></span>
<span class="line"><span></span></span>
<span class="line"><span>ssh 进入群晖后, sudo -i 获取管理员权限, 运行下面的命令:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>wget -O - http://bin.entware.net/x64-k3.2/installer/generic.sh | sh</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>脚本运行完毕后, 修改环境文件:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1. /root/.profile:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/syno/sbin:/usr/syno/bin:/usr/local/sbin:/usr/local/bin:/opt/bin:/opt/sbin</span></span>
<span class="line"><span></span></span>
<span class="line"><span>2. /etc/rc:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>/opt/etc/init.d/rc.unslung start</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Docker</span></span>
<span class="line"><span></span></span>
<span class="line"><span>## Docker安装</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**Docker**</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>export DOWNLOAD_URL=&quot;https://mirrors.tuna.tsinghua.edu.cn/docker-ce&quot;</p><h1 id="如您使用-curl" tabindex="-1"><a class="header-anchor" href="#如您使用-curl"><span>如您使用 curl</span></a></h1><p>curl -fsSL https://get.docker.com/ | sh</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>国内镜像</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>mkdir -p /etc/docker tee /etc/docker/daemon.json &lt;&lt;-&#39;EOF&#39; { &quot;registry-mirrors&quot;: [ &quot;https://0b27f0a81a00f3560fbdc00ddd2f99e0.mirror.swr.myhuaweicloud.com&quot;, &quot;https://ypzju6vq.mirror.aliyuncs.com&quot;, &quot;https://registry.docker-cn.com&quot;, &quot;http://hub-mirror.c.163.com&quot;, &quot;https://docker.mirrors.ustc.edu.cn&quot; ] } EOF systemctl daemon-reload systemctl restart docker</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>## Docker基本命令</span></span>
<span class="line"><span></span></span>
<span class="line"><span>启动 Docker 服务</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>systemctl start docker</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>查看 Docker 运行状态</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>systemctl status docker</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>将 Docker 服务加入开机自启动</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>systemctl enable docker</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>查看容器在线状态及大小</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker ps -as</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>查看容器的运行输出日志</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker logs freenom</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>重新启动容器</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker restart freenom</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>停止容器的运行</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker stop freenom</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>移除容器</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker rm -f freenom</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>查看 docker 容器占用 CPU，内存等信息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker stats --no-stream</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>查看 Docker 安装版本等信息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker version</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>重启 Docker（非容器）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>systemctl restart docker</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>清理 Docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker system prune</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>查看 Docker 网络信息</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker network ls</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>检查 bridge 网络状态</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker network inspect bridge</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>修改容器网段IP</span></span>
<span class="line"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span>=======</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 /etc/docker/daemon.json，加入一行 &quot;bip&quot;: &quot;192.168.1.5/24&quot;,，然后再次查看 ifconfig，已经变成了 192 网段了 重启 docker 服务，curl 尝试正常</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>批量停止</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker stop $(docker ps -aq) docker stop $(docker ps -a | grep &quot;hassio&quot; | awk &#39;{print $1}&#39;)</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>批量删除</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker rmi --force <code>docker images | grep hassio | awk &#39;{print $3}&#39;</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 198c2116c5109f2dc09ab42ad8eb0a95319b83d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改 /etc/docker/daemon.json，加入一行 &quot;bip&quot;: &quot;192.168.1.5/24&quot;,，然后再次查看 ifconfig，已经变成了 192 网段了 重启 docker 服务，curl 尝试正常</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>批量停止</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker stop $(docker ps -aq) docker stop $(docker ps -a | grep &quot;hassio&quot; | awk &#39;{print $1}&#39;)</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>批量删除</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker rmi --force <code>docker images | grep hassio | awk &#39;{print $3}&#39;</code></p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>## 清理空间</span></span>
<span class="line"><span></span></span>
<span class="line"><span>查看空间占用</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>df -h</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>查看当前文件夹下占用空间分布</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>du -sh *</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>清理脚本 clean.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>#!/bin/bash echo &quot;======== start clean docker containers logs <mark><mark><mark><mark>&quot; logs=$(find /var/lib/docker/containers/ -name *-json.log) for log in $logs do echo &quot;clean logs : $log&quot; cat /dev/null &gt; $log done echo &quot;</mark></mark></mark></mark> end clean docker containers logs ========&quot;</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>chmod +x clean.sh</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>编辑crontab \`crontab -e\`</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>0 5 * * 1 /var/lib/docker/clean.sh</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>## Docker代理</span></span>
<span class="line"><span></span></span>
<span class="line"><span>1. Create a systemd drop-in directory for the \`docker\` service:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>sudo mkdir -p /etc/systemd/system/docker.service.d</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>2. Create a file named \`/etc/systemd/system/docker.service.d/http-proxy.conf\` that adds the \`HTTP_PROXY\` environment variable:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>[Service] Environment=&quot;HTTP_PROXY=socks5://127.0.0.1:20170&quot; Environment=&quot;HTTPS_PROXY=socks5://127.0.0.1:20170&quot;</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>3. Flush changes and restart Docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>sudo systemctl daemon-reload sudo systemctl restart docker</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>4. Verify that the configuration has been loaded and matches the changes you made, for example:</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>sudo systemctl show --property=Environment docker</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>修改hosts</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>echo &quot;185.199.109.133 raw.githubusercontent.com&quot; &gt;&gt; /etc/hosts docker exec -it homeassistant /bin/bash</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>## 重建Docker网络</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="安装brctl" tabindex="-1"><a class="header-anchor" href="#安装brctl"><span>安装brctl</span></a></h1><p>apt-get install bridge-utils yum install bridge-utils</p><h1 id="停止docker服务" tabindex="-1"><a class="header-anchor" href="#停止docker服务"><span>停止docker服务</span></a></h1><p>systemctl stop docker</p><h1 id="重建-docker-网络" tabindex="-1"><a class="header-anchor" href="#重建-docker-网络"><span>重建 docker 网络</span></a></h1><p>ifconfig docker0 down brctl delbr docker0</p><h1 id="重启docker服务" tabindex="-1"><a class="header-anchor" href="#重启docker服务"><span>重启docker服务</span></a></h1><p>systemctl start docker</p><h1 id="查看ip转发" tabindex="-1"><a class="header-anchor" href="#查看ip转发"><span>查看IP转发</span></a></h1><p>cat /proc/sys/net/ipv4/ip_forward</p><h1 id="ip-转发需要进行开启" tabindex="-1"><a class="header-anchor" href="#ip-转发需要进行开启"><span>IP 转发需要进行开启</span></a></h1><p>echo 1 &gt; /proc/sys/net/ipv4/ip_forward</p><p>使用上述任何一种方法都不会使更改持久。为了确保新设置在重新启动后仍然有效，您需要编辑 /etc/sysctl.conf 文件。</p><h1 id="sudo-nano-etc-sysctl-conf" tabindex="-1"><a class="header-anchor" href="#sudo-nano-etc-sysctl-conf"><span>sudo nano /etc/sysctl.conf</span></a></h1><p>将以下行之一添加到文件底部，具体取决于您想要关闭还是打开 Linux IP 转发。然后，保存对此文件的更改。该设置在重新启动后将是永久的。 net.ipv4.ip_forward 设置控制是否为 IPv4 打开或关闭 IP 转发。 net.ipv4.ip_forward = 0 OR net.ipv4.ip_forward = 1 编辑文件后，您可以运行以下命令以使更改立即生效。</p><h1 id="sysctl-p" tabindex="-1"><a class="header-anchor" href="#sysctl-p"><span>sysctl -p</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>## Watchtower</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker run --rm <br> -v /var/run/docker.sock:/var/run/docker.sock <br> containrrr/watchtower <br> --cleanup <br> --run-once <br> v2raya homeassistant</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span># OpenWrt</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔵打开网卡混杂模式</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ip link set eth0 promisc on</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>🔵创建网络</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker network create -d macvlan --subnet=192.168.30.0/24 --gateway=192.168.30.1 -o parent=eth0 macnet</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>🔘[↑自己根据 玩客云 所在网段修改，如：玩客云IP:10.1.2.11，则10.1.1.0/24 改成 10.1.2.0/24，10.1.1.1改成主路由地址]</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔵拉取 OpenWRT 镜像</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>docker pull wfnb/onecloud:23-01-25-beta</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>🔵创建容器</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker run -d --name=OpenWrt --restart always --network macnet --privileged wfnb/onecloud:23-01-25-beta /sbin/init</p><p>docker import openwrt-01.10.2023-meson-meson8b-thunder-onecloud-rootfs.tar.gz kiddin9_openwrt docker run -d --name=OpenWrt --restart always --network macnet --privileged kiddin9_openwrt /sbin/init</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>🔘--name=OpenWrt 其中OpenWrt是容器名称，可以更改成你想要的，容器名称注意不要和其他容器一样，会冲突</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔘--ip 10.1.1.13 其中10.1.1.13是容器IP，可以更改成你想要的，容器IP不要重复，这一项可删除</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔵修改OpenWrt IP</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>docker exec OpenWrt sed -e &quot;s/10.1.1.13/192.168.30.120/&quot; -i /etc/config/network docker exec -it OpenWrt bash /etc/init.d/network restart</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>🔘OpenWrt 是容器名称，和你创建容器时的一致</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔘镜像设置的默认IP是10.1.1.13，可通过该命令修改</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔵管理密码是 password</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔵LAN口固定IP地址，网关指向主路由IP地址</span></span>
<span class="line"><span></span></span>
<span class="line"><span>iptables -t nat -I POSTROUTING eth0 -j MASQUERADE</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔴设置 容器不自启动 、 停止容器 和 删除容器</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>docker container update --restart=no [容器ID] docker stop [容器ID] docker rm [容器ID]</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>🔴查看所有镜像</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker images</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>🔘记录下 xuanaimai/openwrt 21-09-15 右边的 IMAGE ID（镜像ID，下面用得到）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>🔴删除镜像</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>docker rmi [镜像ID]</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span># Alist</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="headdocker-run-d-restart-unless-stopped-v-data-alist-opt-alist-data-v-tmp-opt-alist-tmp-network-host-name-alist-xhofe-alist-latest" tabindex="-1"><a class="header-anchor" href="#headdocker-run-d-restart-unless-stopped-v-data-alist-opt-alist-data-v-tmp-opt-alist-tmp-network-host-name-alist-xhofe-alist-latest"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD docker run -d --restart=unless-stopped -v /data/alist:/opt/alist/data -v /tmp:/opt/alist/tmp --network=host --name=&quot;alist&quot; xhofe/alist:latest</span></a></h1><p>docker run -d --restart=unless-stopped -v /etc/alist:/opt/alist/data -v /tmp:/opt/alist/tmp --network=host --name=&quot;alist&quot; xhofe/alist:latest</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>198c2116c5109f2dc09ab42ad8eb0a95319b83d1</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>查看密码</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker exec -it alist ./alist admin</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>使用[http://ip:5244](http://ip:5244/)    来登录alist点击下面的管理输入管理员的账号和密码</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Homepage</span></span>
<span class="line"><span></span></span>
<span class="line"><span>**Homepage**</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>docker run -p 3000:3000 -v /etc/homepage:/app/config -v /var/run/docker.sock:/var/run/docker.sock ghcr.io/benphelps/homepage:latest</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>**Homarr**</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker run <br> --name homarr <br> --restart always <br> -p 7575:7575 <br> -v /data/homarr/configs:/app/data/configs <br> -v /data/homarr/icons:/app/public/icons <br> -d ghcr.io/ajnart/homarr:latest</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span>**Flare**</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>docker run -d --name flare --restart=unless-stopped -p 80:5005 -v /data/flare:/app soulteary/flare</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span></span></span>
<span class="line"><span># V2rayA</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span>Docker安装</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="docker-run-d-restart-always-privileged-network-host-name-v2raya-e-v2raya-log-file-tmp-v2raya-log-e-v2raya-v2ray-bin-usr-local-bin-v2ray-e-v2raya-nftables-support-off-e-iptables-mode-legacy" tabindex="-1"><a class="header-anchor" href="#docker-run-d-restart-always-privileged-network-host-name-v2raya-e-v2raya-log-file-tmp-v2raya-log-e-v2raya-v2ray-bin-usr-local-bin-v2ray-e-v2raya-nftables-support-off-e-iptables-mode-legacy"><span>docker run -d <br> --restart=always <br> --privileged <br> --network=host <br> --name v2raya <br> -e V2RAYA_LOG_FILE=/tmp/v2raya.log <br> -e V2RAYA_V2RAY_BIN=/usr/local/bin/v2ray <br> -e V2RAYA_NFTABLES_SUPPORT=off <br> -e IPTABLES_MODE=legacy \\</span></a></h1><p>安装</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker run -d \\</span></span>
<span class="line"><span>  --restart=unless-stopped \\</span></span>
<span class="line"><span>  --privileged \\</span></span>
<span class="line"><span>  --network=host \\</span></span>
<span class="line"><span>  --name v2raya \\</span></span>
<span class="line"><span>  -e V2RAYA_ADDRESS=0.0.0.0:2017 \\</span></span>
<span class="line"><span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 198c2116c5109f2dc09ab42ad8eb0a95319b83d1</span></span>
<span class="line"><span>  -v /lib/modules:/lib/modules:ro \\</span></span>
<span class="line"><span>  -v /etc/resolv.conf:/etc/resolv.conf \\</span></span>
<span class="line"><span>  -v /etc/v2raya:/etc/v2raya \\</span></span>
<span class="line"><span>  mzz2017/v2raya</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD Linux安装</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>sudo sh -c &quot;$(wget -qO- https://github.com/v2rayA/v2rayA-installer/raw/main/installer.sh)&quot; @ --with-v2ray</span></span>
<span class="line"><span>systemctl start v2raya  #启动服务</span></span>
<span class="line"><span>systemctl enable v2raya  #开机启动</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>=======</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>198c2116c5109f2dc09ab42ad8eb0a95319b83d1 开启IP转发</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>echo net.ipv4.ip_forward=1 &gt;&gt; /etc/sysctl.conf &amp;&amp; sysctl -p</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>http://ip:2017</p><h1 id="wireproxy" tabindex="-1"><a class="header-anchor" href="#wireproxy"><span>wireproxy</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker run --expose 20173 -p 0.0.0.0:20173:20173 -v /etc/wireguard:/etc/wireproxy --env wireproxyconfigpath=/etc/wireproxy/wireproxy.conf daycat/wireproxy-docker</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="portainer" tabindex="-1"><a class="header-anchor" href="#portainer"><span>Portainer</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker run -d -p 8000:8000 -p 9000:9000 -p 9443:9443 --name portainer --restart=unless-stopped -v /var/run/docker.sock:/var/run/docker.sock -v /portainer、data:/data portainer/portainer-ce:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="青龙面板" tabindex="-1"><a class="header-anchor" href="#青龙面板"><span>青龙面板</span></a></h1><p>青龙面板:5700</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker run -dit \\</span></span>
<span class="line"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span>  -v /data/ql:/ql/data \\</span></span>
<span class="line"><span>=======</span></span>
<span class="line"><span>  -v /ql/data:/ql/data \\</span></span>
<span class="line"><span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 198c2116c5109f2dc09ab42ad8eb0a95319b83d1</span></span>
<span class="line"><span>  --network=host \\</span></span>
<span class="line"><span>  --name qinglong \\</span></span>
<span class="line"><span>  --hostname qinglong \\</span></span>
<span class="line"><span>  --restart unless-stopped \\</span></span>
<span class="line"><span>  dockerproxy.com/whyour/qinglong:latest</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>检查服务</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker exec -it qinglong /bin/bash ql check</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>安装依赖</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span>docker exec -it qinglong bash -c &quot;$(curl -fsSL https://raw.githubusercontent.com/FlechazoPh/QLDependency/main/Shell/XinQLOneKey.sh | bash)&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>=======</span></span>
<span class="line"><span>docker exec -it qinglong bash -c &quot;$(curl -fsSL https://githubfast.com/FlechazoPh/QLDependency/raw/main/Shell/QLOneKeyDependency.sh | sh)&quot;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>#青龙内更新依赖</span></span>
<span class="line"><span>task KingRan_KR/jd_indeps.sh</span></span>
<span class="line"><span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 198c2116c5109f2dc09ab42ad8eb0a95319b83d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>修改config.sh</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>RepoFileExtensions=&quot;js py sh&quot;</span></span>
<span class="line"><span>export WX_ADDRESS=&quot;周子健@15116155426@@湖南省@长沙市@开福区@珠江郦城@430105@410000&quot;</span></span>
<span class="line"><span>export jd_jinggeng_address=&quot;周子健@15116155426@湖南省@长沙市@开福区@珠江郦城&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="京东脚本" tabindex="-1"><a class="header-anchor" href="#京东脚本"><span>京东脚本</span></a></h2><p>1</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker exec -it qinglong ql repo https://ghproxy.com/https://github.com/zero205/JD_tencent_scf.git &quot;jd_|jx_|jdCookie&quot;  &quot;backUp|icon&quot; &quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign|ql&quot; &quot;main&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker exec -it qinglong ql repo https://github.com/smiek2221/scripts.git &quot;jd_|gua_&quot; &quot;&quot; &quot;ZooFaker_Necklace.js|JDJRValidator_Pure.js|sign_graphics_validate.js&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol><li>KingRan库【推荐❤❤❤❤❤】</li></ol><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https:</span><span style="color:#616E88;">//github.com/KingRan/KR.git &quot;jd_|jx_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|function|sign|sendNotify|ql|JDJR&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>2.Faker3【集合库（很多重复任务，自己禁用）❤❤❤❤】</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//git.metauniverse-cn.com/https://github.com/shufflewzc/faker3.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator|magic|depend|h5sts&quot; &quot;main&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>yyds【集合库❤❤❤】</li></ol><p>YYDS</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//github.com/okyyds/yyds.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator&quot; &quot;master&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>YYDS_Pure</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//github.com/okyyds/yydspure.git &quot;jd_|jx_|gua_|jddj_|jdCookie&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|function|utils|sendNotify|ZooFaker_Necklace.js|JDJRValidator_|sign_graphics_validate|ql|JDSignValidator&quot; &quot;master&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>【注意】拉库前请打开青龙面板-配置文件 第18行 GithubProxyUrl=&quot;&quot; 双引号中的内容删除。</p><ol start="4"><li>环境保护【推荐❤❤❤❤】</li></ol><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//github.com/feverrun/my_scripts.git &quot;jd_|jx_|jddj_|getCookie|getJDCookie&quot; &quot;backUp/activity|backUp/card|backUp/py|backUp/utils/|backUp/test|jd_fruits.js|jd_pet.js|jd_factory.js|jd_health.js|jd_sgmh.js|jd_dreamFactory.js|jd_plantBean.js&quot; &quot;^(jd|JD|JS)[^_]|USER|sendNotify|utils&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="5"><li>ccwav大佬的通知增强版和CK检测</li></ol><p>//不包含sendNotify:</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//github.com/ccwav/QLScript2.git &quot;jd_&quot; &quot;sendNotify|NoUsed&quot; &quot;ql&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>//包含sendNotify:</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//github.com/ccwav/QLScript2.git &quot;jd_&quot; &quot;NoUsed&quot; &quot;ql|sendNotify&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>6.【619】【集合库，可选】</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//github.com/gys619/jdd.git &quot;jd_|jx_|jddj_|gua_|getJDCookie|wskey&quot; &quot;activity|backUp&quot; &quot;^jd[^_]|USER|utils|ZooFaker_Necklace|JDJRValidator_|sign_graphics_validate|jddj_cookie|function|ql|magic|JDJR|JD&quot; &quot;main&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>7 .【zero205】【集合库，推荐拉KR即可】</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//github.com/zero205/JD_tencent_scf.git &quot;jd_|jx_|jdCookie&quot; &quot;backUp|icon&quot; &quot;^jd[^_]|USER|sendNotify|sign_graphics_validate|JDJR|JDSign|ql&quot; &quot;main&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>8 .【6dylan6/jdpro】</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//git.so2.link/6dylan6/jdpro.git &quot;jd_|jx_|jddj_&quot; &quot;backUp&quot; &quot;^jd[^_]|USER|JD|function|sendNotify&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>9 .【青蛙/smiek2121】</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//github.com/smiek2121/scripts.git &quot;jd_|gua_&quot; &quot;&quot; &quot;^jd[^_]|USER|utils|sendNotify|ZooFaker|JDJRValidator_|^sign|cleancart_&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>10 .【船长】</p><div class="language-php line-numbers-mode" data-highlighter="shiki" data-ext="php" data-title="php" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span style="color:#D8DEE9FF;">ql repo https</span><span style="color:#81A1C1;">:</span><span style="color:#616E88;">//github.com/HarbourJ/HarbourToulu.git &quot;jd_&quot; &quot;activity|backUp|jd_sign&quot; &quot;^jd[^_]|USER|utils|ZooFaker_Necklace|JDJR</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="dailycheckin" tabindex="-1"><a class="header-anchor" href="#dailycheckin"><span>DailyCheckIn</span></a></h2><h1 id="headhttps-sitoi-github-io-dailycheckin" tabindex="-1"><a class="header-anchor" href="#headhttps-sitoi-github-io-dailycheckin"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD https://sitoi.github.io/dailycheckin/</span></a></h1><p>https://sitoi.gitee.io/dailycheckin/</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>198c2116c5109f2dc09ab42ad8eb0a95319b83d1</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h2 id="bilioutils" tabindex="-1"><a class="header-anchor" href="#bilioutils"><span>BiliOutils</span></a></h2><p>https://bilioutils.js.org/</p><h1 id="wol" tabindex="-1"><a class="header-anchor" href="#wol"><span>WOL</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker run -d --net=host --restart=unless-stopped chishin/wol-go-web</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h1 id="ddns-go" tabindex="-1"><a class="header-anchor" href="#ddns-go"><span>DDNS-GO</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span>docker run -d --name ddns-go --restart=unless-stopped --net=host -v /data/ddns-go:/root jeessy/ddns-go</span></span>
<span class="line"><span>=======</span></span>
<span class="line"><span>docker run -d --name ddns-go --restart=unless-stopped --net=host -v /opt/ddns-go:/root jeessy/ddns-go</span></span>
<span class="line"><span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 198c2116c5109f2dc09ab42ad8eb0a95319b83d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="lucky" tabindex="-1"><a class="header-anchor" href="#lucky"><span>Lucky</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span></span>
<span class="line"><span>docker run -d --name lucky --restart=unless-stopped --net=host -v /data/lucky:/goodluck gdy666/lucky</span></span>
<span class="line"><span>=======</span></span>
<span class="line"><span>docker run -d --name lucky --restart=unless-stopped --net=host -v /opt/luckyconf:/goodluck gdy666/lucky</span></span>
<span class="line"><span>&gt;&gt;&gt;&gt;&gt;&gt;&gt; 198c2116c5109f2dc09ab42ad8eb0a95319b83d1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>http://ip:16601</p><h1 id="cron" tabindex="-1"><a class="header-anchor" href="#cron"><span>Cron</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>apt-get install cron</span></span>
<span class="line"><span>/etc/init.d/cron restart</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>编辑定时自动脚本</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>crontab -e</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在ssh中执行脚本，然后编辑文件。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>0 4 * * * /sbin/reboot</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>丢进去这个脚本，表示每天凌晨1点重启服务器。编辑完毕之后:wq保存退出。</p><p>保存退出重启生效</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>/etc/init.d/cron stop</span></span>
<span class="line"><span>/etc/init.d/cron start</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h1 id="cloudflare-tunnel" tabindex="-1"><a class="header-anchor" href="#cloudflare-tunnel"><span>Cloudflare Tunnel</span></a></h1><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>添加架构：</span></span>
<span class="line"><span>sudo dpkg --add-architecture arm64</span></span>
<span class="line"><span>移除架构：</span></span>
<span class="line"><span>sudo dpkg --remove-architecture xxx</span></span>
<span class="line"><span></span></span>
<span class="line"><span>curl -L --output cloudflared.deb https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-arm64.deb &amp;&amp; </span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo dpkg -i cloudflared.deb &amp;&amp; </span></span>
<span class="line"><span></span></span>
<span class="line"><span>sudo cloudflared service install xxx</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>docker版</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker run --name cloudflared -d --restart=unless-stopped --net=host zoeyvid/cloudflared:latest tunnel --no-autoupdate run --token eyJhIjoiZjAxNzExNGYyYTQ0YzI4NmVmZjNkZmVkMTIyNWIzZmUiLCJ0IjoiMTliM2E0MTctMGRiYy00ZDE2LWI2YTctM2I3M2UyMmNkMjYyIiwicyI6Ik1qSXlZekUzTVdNdE9USTFZeTAwWTJVNExUbGpNekV0T1RnMk5EVTBNREJpWWpjdyJ9 </span></span>
<span class="line"><span></span></span>
<span class="line"><span>docker run cloudflare/cloudflared:latest tunnel --no-autoupdate run --token</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>蒲公英</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="background-color:#2e3440ff;color:#d8dee9ff;"><pre class="shiki nord vp-code"><code><span class="line"><span>docker run -d --device=/dev/net/tun --net=host --cap-add=NET_ADMIN --env PGY_USERNAME=&quot;xxx&quot; --env PGY_PASSWORD=&quot;xxx&quot; bestoray/pgyvpn</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,247),d=[l];function t(r,c){return n(),e("div",null,d)}const u=s(i,[["render",t],["__file","玩客云_群晖.html.vue"]]),v=JSON.parse('{"path":"/tech/%E7%8E%A9%E5%AE%A2%E4%BA%91_%E7%BE%A4%E6%99%96.html","title":"玩客云","lang":"zh-CN","frontmatter":{"date":"2023-03-17T00:00:00.000Z","description":"玩客云 安装包 Armbian-unofficial_24.5.0-trunk_Onecloud_bullseye_edge_6.7.9_minimal.img.xz 删除原内容，然后把下面的内容粘贴进入，按CTRL+X 输入Y保存即可 然后更新软件源 Docker安装 Install Home Assistant Supervised OS Agen...","head":[["meta",{"property":"og:url","content":"https://jiange1236.github.io/tech/%E7%8E%A9%E5%AE%A2%E4%BA%91_%E7%BE%A4%E6%99%96.html"}],["meta",{"property":"og:site_name","content":"Zeblog"}],["meta",{"property":"og:title","content":"玩客云"}],["meta",{"property":"og:description","content":"玩客云 安装包 Armbian-unofficial_24.5.0-trunk_Onecloud_bullseye_edge_6.7.9_minimal.img.xz 删除原内容，然后把下面的内容粘贴进入，按CTRL+X 输入Y保存即可 然后更新软件源 Docker安装 Install Home Assistant Supervised OS Agen..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-09T09:47:21.000Z"}],["meta",{"property":"article:author","content":"Zine⁶"}],["meta",{"property":"article:published_time","content":"2023-03-17T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-09T09:47:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"玩客云\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-17T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-09T09:47:21.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zine⁶\\",\\"url\\":\\"https://zecdn.top\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://jiange1236.github.io/atom.xml","title":"Zeblog Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://jiange1236.github.io/feed.json","title":"Zeblog JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://jiange1236.github.io/rss.xml","title":"Zeblog RSS Feed"}]]},"headers":[{"level":1,"title":"玩客云","slug":"玩客云","link":"#玩客云","children":[{"level":2,"title":"HACS","slug":"hacs","link":"#hacs","children":[]},{"level":2,"title":"Supervisor","slug":"supervisor","link":"#supervisor","children":[]},{"level":2,"title":"连接WiFi","slug":"连接wifi","link":"#连接wifi","children":[]},{"level":2,"title":"Debian 使用 cron 执行定时任务","slug":"debian-使用-cron-执行定时任务","link":"#debian-使用-cron-执行定时任务","children":[]}]},{"level":1,"title":"如您使用 curl","slug":"如您使用-curl","link":"#如您使用-curl","children":[]},{"level":1,"title":"安装brctl","slug":"安装brctl","link":"#安装brctl","children":[]},{"level":1,"title":"停止docker服务","slug":"停止docker服务","link":"#停止docker服务","children":[]},{"level":1,"title":"重建 docker 网络","slug":"重建-docker-网络","link":"#重建-docker-网络","children":[]},{"level":1,"title":"重启docker服务","slug":"重启docker服务","link":"#重启docker服务","children":[]},{"level":1,"title":"查看IP转发","slug":"查看ip转发","link":"#查看ip转发","children":[]},{"level":1,"title":"IP 转发需要进行开启","slug":"ip-转发需要进行开启","link":"#ip-转发需要进行开启","children":[]},{"level":1,"title":"sudo nano /etc/sysctl.conf","slug":"sudo-nano-etc-sysctl-conf","link":"#sudo-nano-etc-sysctl-conf","children":[]},{"level":1,"title":"sysctl -p","slug":"sysctl-p","link":"#sysctl-p","children":[]},{"level":1,"title":"<<<<<<< HEADdocker run -d --restart=unless-stopped -v /data/alist:/opt/alist/data -v /tmp:/opt/alist/tmp --network=host --name=\\"alist\\" xhofe/alist:latest","slug":"headdocker-run-d-restart-unless-stopped-v-data-alist-opt-alist-data-v-tmp-opt-alist-tmp-network-host-name-alist-xhofe-alist-latest","link":"#headdocker-run-d-restart-unless-stopped-v-data-alist-opt-alist-data-v-tmp-opt-alist-tmp-network-host-name-alist-xhofe-alist-latest","children":[]},{"level":1,"title":"docker run -d --restart=always --privileged --network=host --name v2raya -e V2RAYA_LOG_FILE=/tmp/v2raya.log -e V2RAYA_V2RAY_BIN=/usr/local/bin/v2ray -e V2RAYA_NFTABLES_SUPPORT=off -e IPTABLES_MODE=legacy \\\\","slug":"docker-run-d-restart-always-privileged-network-host-name-v2raya-e-v2raya-log-file-tmp-v2raya-log-e-v2raya-v2ray-bin-usr-local-bin-v2ray-e-v2raya-nftables-support-off-e-iptables-mode-legacy","link":"#docker-run-d-restart-always-privileged-network-host-name-v2raya-e-v2raya-log-file-tmp-v2raya-log-e-v2raya-v2ray-bin-usr-local-bin-v2ray-e-v2raya-nftables-support-off-e-iptables-mode-legacy","children":[]},{"level":1,"title":"wireproxy","slug":"wireproxy","link":"#wireproxy","children":[]},{"level":1,"title":"Portainer","slug":"portainer","link":"#portainer","children":[]},{"level":1,"title":"青龙面板","slug":"青龙面板","link":"#青龙面板","children":[{"level":2,"title":"京东脚本","slug":"京东脚本","link":"#京东脚本","children":[]},{"level":2,"title":"DailyCheckIn","slug":"dailycheckin","link":"#dailycheckin","children":[]}]},{"level":1,"title":"<<<<<<< HEADhttps://sitoi.github.io/dailycheckin/","slug":"headhttps-sitoi-github-io-dailycheckin","link":"#headhttps-sitoi-github-io-dailycheckin","children":[{"level":2,"title":"BiliOutils","slug":"bilioutils","link":"#bilioutils","children":[]}]},{"level":1,"title":"WOL","slug":"wol","link":"#wol","children":[]},{"level":1,"title":"DDNS-GO","slug":"ddns-go","link":"#ddns-go","children":[]},{"level":1,"title":"Lucky","slug":"lucky","link":"#lucky","children":[]},{"level":1,"title":"Cron","slug":"cron","link":"#cron","children":[]},{"level":1,"title":"Cloudflare Tunnel","slug":"cloudflare-tunnel","link":"#cloudflare-tunnel","children":[]}],"git":{"createdTime":1679025004000,"updatedTime":1717926441000,"contributors":[{"name":"周子健","email":"183465355@qq.com","commits":4},{"name":"jiange1236","email":"183465355@qq.com","commits":1}]},"readingTime":{"minutes":10.66,"words":3198},"filePathRelative":"tech/玩客云&群晖.md","localizedDate":"2023年3月17日","excerpt":"","autoDesc":true}');export{u as comp,v as data};
