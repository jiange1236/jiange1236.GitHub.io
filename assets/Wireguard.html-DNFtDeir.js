import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{e,f as a,o as n}from"./app-DuyuJ6on.js";const r={};function t(l,i){return n(),e("div",null,i[0]||(i[0]=[a(`<h2 id="如何在debian-11安装wireguard-vpn" tabindex="-1"><a class="header-anchor" href="#如何在debian-11安装wireguard-vpn"><span>如何在Debian 11安装WireGuard VPN</span></a></h2><p>WireGuard是一种现代VPN虚拟私有网络技术，它利用最新的加密技术。</p><p>与其他流行的VPN解决方案，例如IPsec和<a href="https://www.myfreax.com/how-to-set-up-an-openvpn-server-on-ubuntu-18-04/" target="_blank" rel="noopener noreferrer">OpenVPN</a>相比，<a href="https://www.wireguard.com/" target="_blank" rel="noopener noreferrer">WireGuard</a>更快，更易于配置并且占用空间更小。</p><p>它是跨平台的，几乎可以在任何操作系统运行，包括Linux，Windows，Android和macOS。</p><p>Wireguard是对等VPN，它不使用C/S客户端/服务器模型。根据配置，对等方可以充当传统的服务器或客户端。</p><p>它充当隧道，在每个对等设备上创建虚拟网络接口来工作。对等方通过交换和验证公钥，类似于使用SSH公钥模式来相互认证。</p><p>公钥与隧道中允许的IP地址列表进行映射。VPN流量封装在UDP中。</p><blockquote><p>在本教程中，所有&quot;接口&quot;都表示为网卡，网卡是中国术语，接口通用的名词。</p></blockquote><p>Wireguard可用于防御中间人攻击，匿名浏览网络，绕过受地域限制的内容或允许在家工作的同事安全地连接到公司网络。</p><p>要遵循本教程，您登录的用户必须具有<a href="https://www.myfreax.com/how-to-create-a-sudo-user-on-debian/" target="_blank" rel="noopener noreferrer">sudo权限</a>。我们将首先在Debian 11安装WireGuard，然后将其设置为服务器。</p><p>我们还将说明如何配置WireGuard作为客户端的配置。WireGuard可从默认的Debian 11软件源中获得。</p><p>要安装它，请运行<a href="https://www.myfreax.com/how-to-use-apt-command/" target="_blank" rel="noopener noreferrer">apt</a>命令 <code>sudo apt update &amp;&amp; sudo apt install wireguard</code>。这将安装WireGuard模块和工具。WireGuard作为内核模块运行。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> update</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> apt</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wireguard</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="配置wireguard" tabindex="-1"><a class="header-anchor" href="#配置wireguard"><span>配置WireGuard</span></a></h3><p><code>wg</code>和<code>wg-quick</code>命令行工具可帮助您配置和管理WireGuard接口，WireGuard接口是虚拟网卡。WireGuard VPN网络中的每个设备都需要具有私钥和公钥。</p><p>我们可以使用wiregurad的工具<code>wg genkey</code>和<code>wg pubkey</code>在<code>/etc/wireguard/</code>目录中生成私钥<code>/etc/wireguard/privatekey</code>和公钥<code>/etc/wireguard/publickey</code>。</p><p>以下命令将使用<code>wg genkey</code>和<code>wg pubkey</code>，<a href="https://www.myfreax.com/linux-tee-command/" target="_blank" rel="noopener noreferrer">tee命令</a>以及管道同时生成私钥和公钥并存储在<code>/etc/wireguard/</code>目录。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> genkey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/wireguard/privatekey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pubkey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/wireguard/publickey</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>您可以使用<a href="https://www.myfreax.com/linux-cat-command/" target="_blank" rel="noopener noreferrer"><code>cat</code>命令</a>或<a href="https://www.myfreax.com/linux-cat-command/" target="_blank" rel="noopener noreferrer"></a><a href="https://www.myfreax.com/linux-cat-command/" target="_blank" rel="noopener noreferrer"><code>less</code></a>命令查看私钥和公钥文件的内容。请不要把私钥与任何人共享，并且应始终保证私钥的安全。</p><p>Wireguard还支持预共享密钥，这增加了对称密钥加密的附加层。预共享密钥是可选的，并且对于每个对等设备都必须是唯一的。</p><p>下一步是配置虚拟接口。可以使用<code>[](https://www.myfreax.com/linux-ip-command/)[ip](https://www.myfreax.com/linux-ip-command/)</code><a href="https://www.myfreax.com/linux-ip-command/" target="_blank" rel="noopener noreferrer">命令</a>和<code>wg</code>命令配置接口。</p><p>使用你喜欢的<a href="https://www.myfreax.com/tag/vim/" target="_blank" rel="noopener noreferrer">文本编辑器</a>创建配置文件<code>/etc/wireguard/wg0.conf</code>，在本教程中我们将<a href="https://www.myfreax.com/the-basis-of-the-linux-vim-command/" target="_blank" rel="noopener noreferrer">使用vim创建文件</a>。</p><p><a href="https://www.myfreax.com/how-to-copy-cut-paste-in-vim/" target="_blank" rel="noopener noreferrer">复制黏贴</a>以下内容到<code>/etc/wireguard/wg0.conf</code>文件中，然后<a href="https://www.myfreax.com/how-to-save-file-in-vim-quit-editor/" target="_blank" rel="noopener noreferrer">保存并退出vim编辑器</a>。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/wireguard/wg0.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[Interface]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 10.0.0.1/24</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">SaveConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> true</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">ListenPort</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 51820</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PrivateKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> SERVER_PRIVATE_KEY</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PostUp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> iptables -A FORWARD -i %i -j ACCEPT</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">; iptables -t nat -A POSTROUTING -o ens3 -j MASQUERADE</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PostDown</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> iptables -D FORWARD -i %i -j ACCEPT</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">; iptables -t nat -D POSTROUTING -o ens3 -j MASQUERADE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/etc/wireguard/wg0.conf</p><p>接口的命名可以是任何你喜欢的名称，但是建议使用诸如<code>wg0</code>或<code>wgvpn0</code>之类的名称。可以让我们能快速分清是物理接口还是虚拟接口即可。</p><p>这里说明一下<code>/etc/wireguard/wg0.conf</code>配置文件定义接口的每个字段含义。</p><p><strong>Address</strong> <code>wg0</code>接口的IP v4或IP v6的地址。请使用保留给私有网络范围内的IP地址，比如10.0.0.0/8、172.16.0.0/12或192.168.0.0/16。</p><p><strong>ListenPort</strong> 是接口监听的端口。<strong>PrivateKey</strong> 由<code>wg genkey</code>命令生成的私钥。你可以使用<code>sudo cat /etc/wireguard/privatekey</code>命令要查看私钥文件的内容。</p><p><strong>SaveConfig</strong> 设置为true时，当关闭接口时将当前配置将保存到配置文件中。<strong>PostUp</strong> 在启动接口之前执行的命令或脚本。</p><p>在此示例中，在<strong>PostUp</strong>钩子启用iptables伪装。这允许流量离开服务器，使VPN客户端可以访问互联网。</p><p>请记得使用您可访问网络的接口名称替换<code>-A POSTROUTING</code>后面的<code>ens3</code>。您可以通过以下ip命令方式轻松找到可访问网络的接口。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -o</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -4</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> route</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> to</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> default</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">awk</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;{print $5}&#39;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>在<strong>PostDown</strong>钩子，我们在关闭接口之前删除iptables伪装。一旦接口关闭，iptablesnat转发规则将被删除。</p><p>为了保证私钥的安全，请将<code>wg0.conf</code>和<code>privatekey</code>文件对普通用户不可读。运行<a href="https://www.myfreax.com/chmod-command-in-linux/" target="_blank" rel="noopener noreferrer">chmod</a>命令<code>sudo chmod 600 /etc/wireguard/{privatekey,wg0.conf}</code>。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> chmod</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 600</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/wireguard/{privatekey,wg0.conf}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="启用wireguard接口" tabindex="-1"><a class="header-anchor" href="#启用wireguard接口"><span>启用Wireguard接口</span></a></h3><p>完成以上步骤后，我们可以通过<code>wg-quick</code>启动wireguard服务器。这在wireguard中就是将接口状态设置为开启，运行<code>wg-quick up</code>命令将启用<code>wg0</code>接口。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg-quick</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>[#] ip link add wg0 type wireguard</span></span>
<span class="line"><span>[#] wg setconf wg0 /dev/fd/63</span></span>
<span class="line"><span>[#] ip -4 address add 10.0.0.1/24 dev wg0</span></span>
<span class="line"><span>[#] ip link set mtu 1420 up dev wg0</span></span>
<span class="line"><span>[#] iptables -A FORWARD -i wg0 -j ACCEPT; iptables -t nat -A POSTROUTING -o ens3 -j MASQUERADE</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>要检查接口状态和配置，请运行<code>wg show</code>命令。因为<code>wg0</code>是一个虚拟网卡，因此您也可以运行<code>ip a show wg0</code>来验证<code>wg0</code>接口状态。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ip</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> a</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> show</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>interface: wg0</span></span>
<span class="line"><span>  public key: r3imyh3MCYggaZACmkx+CxlD6uAmICI8pe/PGq8+qCg=</span></span>
<span class="line"><span>  private key: (hidden)</span></span>
<span class="line"><span>  listening port: 51820</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>wireguard作为内核模块运行，默认情况wireguard会自动启动，但接口<code>wg0</code>虚拟网卡不会自动启动。</p><p>你可以通过systemctl命令将<code>wg0</code>设置为自动启动。要在启动时启用WireGuard的<code>wg0</code>接口。请运行<code>sudo systemctl enable wg-quick@wg0</code>命令。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg-quick@wg0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="配置防火墙" tabindex="-1"><a class="header-anchor" href="#配置防火墙"><span>配置防火墙</span></a></h3><p>在之前的步骤中我们在启动<code>wg0</code>接口<code>postup</code>前配置了一条iptables的NAT路由。为使NAT路由可正常工作，必须启用IP转发。</p><p>使用你喜欢的<a href="https://www.myfreax.com/tag/vim/" target="_blank" rel="noopener noreferrer">编辑器</a>打开文件<code>/etc/sysctl.conf</code>。在本教程中我们将<a href="https://www.myfreax.com/the-basis-of-the-linux-vim-command/" target="_blank" rel="noopener noreferrer">使用vim打开文件</a>。然后添加或取消注释行<code>net.ipv4.ip_forward</code>。</p><p><a href="https://www.myfreax.com/how-to-save-file-in-vim-quit-editor/" target="_blank" rel="noopener noreferrer">退出vim并保存文件</a>。修改完成后，运行<code>sudo sysctl -p</code>命令启用新的内核属性配置。</p><p>如果您正在使用<a href="https://www.myfreax.com/how-to-setup-a-firewall-with-ufw-on-debian-11/" target="_blank" rel="noopener noreferrer">UFW</a>管理<a href="https://www.myfreax.com/how-to-setup-a-firewall-with-ufw-on-debian-11/" target="_blank" rel="noopener noreferrer">防火墙</a>，则需要允许端口<code>51820</code>的UDP连接。至此，你已部署并配置wireguard Debian服务器的对等方。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/sysctl.conf</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> sysctl</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ufw</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> allow</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 51820/udp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">net.ipv4.ip_forward</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>/etc/sysctl.conf</p><h3 id="配置linux和macos客户端" tabindex="-1"><a class="header-anchor" href="#配置linux和macos客户端"><span>配置Linux和macOS客户端</span></a></h3><p>你可在<a href="https://wireguard.com/install/" target="_blank" rel="noopener noreferrer">wireguard</a>官网上找到所有受支持的平台安装说明。在Linux系统，您可以使用<a href="https://www.myfreax.com/how-to-use-apt-command/" target="_blank" rel="noopener noreferrer">Apt</a>/<a href="https://www.myfreax.com/how-to-install-rpm-packages-on-centos/" target="_blank" rel="noopener noreferrer">Yum软件包管理器</a>来安装软件wireguard。</p><p>macOS用户可以使用<code>brew</code>安装wireguard。安装完成后，请按照以下步骤配置客户端设备。</p><p>设置Linux和macOS客户端的过程几乎与服务器相同，这是因为两端之间是对等。</p><p>首先使用wiregurad的工具<code>wg genkey</code>和<code>wg pubkey</code>生成公钥和私钥并保存在<code>/etc/wireguard/</code>目录。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> genkey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/wireguard/privatekey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">wg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pubkey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/wireguard/publickey</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>使用你喜欢的<a href="https://www.myfreax.com/tag/vim/" target="_blank" rel="noopener noreferrer">文本编辑器</a>创建配置文件<code>/etc/wireguard/wg0.conf</code>，在本教程中我们将<a href="https://www.myfreax.com/the-basis-of-the-linux-vim-command/" target="_blank" rel="noopener noreferrer">使用vim创建文件</a>。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> vim</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/wireguard/wg0.conf</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[Interface]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PrivateKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> CLIENT_PRIVATE_KEY </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#客户端生成的私钥</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 10.0.0.2/24</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[Peer]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PublicKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> SERVER_PUBLIC_KEY  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#服务器端生成的公钥</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">Endpoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> SERVER_IP_ADDRESS:51820</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">AllowedIPs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 0.0.0.0/0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>/etc/wireguard/wg0.conf</p><h4 id="interface" tabindex="-1"><a class="header-anchor" href="#interface"><span>Interface</span></a></h4><p><strong>PrivateKey</strong> 客户端生成的私有密钥，可以使用<code>cat</code>命令<code>sudo cat /etc/wireguard/privatekey</code>查看客户端计算机的私有密钥文件的内容。</p><p><strong>Address</strong> <code>wg0</code>接口的IPv4或IP v6地址。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/wireguard/privatekey</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="peer" tabindex="-1"><a class="header-anchor" href="#peer"><span>Peer</span></a></h4><p><strong>PublicKey</strong> 您要连接的对等方的公钥。也就是服务器端的<code>/etc/wireguard/publickey</code>文件内容。</p><p><strong>Endpoint</strong> 您要连接的对等方的IP地址或主机名，后跟冒号，然后是远程对等方监听的端口号，默认是51820。注意：这个IP地址是公网可访问的IP地址。</p><p><strong>AllowedIPs</strong> 是使用逗号分隔的IPv4或IP v6地址列表，如果数据包与IP列表匹配，这些数据包将走wireguard通道。</p><p>我们使用0.0.0.0/0表示将所有流量都转发到wireguard服务器端。如果您需要配置其他客户端，只需重复相同的步骤即可。</p><h3 id="配置windows客户端" tabindex="-1"><a class="header-anchor" href="#配置windows客户端"><span>配置Windows客户端</span></a></h3><p>从<a href="https://wireguard.com/install/" target="_blank" rel="noopener noreferrer">WireGuard网站</a>下载并安装Windows msi软件包。安装后，打开WireGuard应用程序，然后单击<code>添加隧道</code>。</p><p>将自动创建公钥与私钥，并将其显示在屏幕上。输入接口的名称，该接口的名称，可以使用你喜欢的任何名称。并按如下方式编辑配置。</p><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[Interface]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PrivateKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> CLIENT_PRIVATE_KEY </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#客户端生成的私钥</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">Address</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 10.0.0.2/24</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[Peer]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">PublicKey</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> SERVER_PUBLIC_KEY  </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">#服务器端生成的公钥</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">Endpoint</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> SERVER_IP_ADDRESS:51820</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">AllowedIPs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> 0.0.0.0/0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="interface-1" tabindex="-1"><a class="header-anchor" href="#interface-1"><span>Interface</span></a></h4><p><strong>PrivateKey</strong> 客户端生成的私有密钥，可以使用<code>cat</code>命令<code>sudo cat /etc/wireguard/privatekey</code>查看客户端计算机的私有密钥文件的内容。</p><p><strong>Address</strong> <code>wg0</code>接口的IPv4或IP v6地址。</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cat</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /etc/wireguard/privatekey</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="peer-1" tabindex="-1"><a class="header-anchor" href="#peer-1"><span>Peer</span></a></h4><p><strong>PublicKey</strong> 您要连接的对等方的公钥。也就是服务器端的<code>/etc/wireguard/publickey</code>文件内容。</p><p><strong>Endpoint</strong> 您要连接的对等方的IP地址或主机名，后跟冒号，然后是远程对等方监听的端口号，默认是51820。注意：这个IP地址是公网可访问的IP地址。</p><p><strong>AllowedIPs</strong> 是使用逗号分隔的IPv4或IP v6地址列表，如果数据包与IP列表匹配，这些数据包将走wireguard通道。</p><p>我们使用0.0.0.0/0表示将所有流量都转发到wireguard服务器端。如果您需要配置其他客户端，只需重复相同的步骤即可。</p><h3 id="将客户端添加到服务器" tabindex="-1"><a class="header-anchor" href="#将客户端添加到服务器"><span>将客户端添加到服务器</span></a></h3><p>最后一步是将客户端的公钥和IP地址添加到对等方，也就是服务器端口。要将客户端添加到服务器，非常简单。</p><p>你只需要在Debian 11服务器运行命令<code>sudo wg set wg0 peer CLIENT_PUBLIC_KEY allowed-ips 10.0.0.2</code>。</p><p>请使用在客户端计算机生成的公钥替换<code>CLIENT_PUBLIC_KEY</code>，可以通过<code>sudo cat /etc/wireguard/publickey</code>命令查看客户端的公钥。</p><p>Windows用户可以从WireGuard应用程序复制公钥。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> set</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg0</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> peer</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CLIENT_PUBLIC_KEY</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> allowed-ips</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10.0.0.2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="linux-macos客户端" tabindex="-1"><a class="header-anchor" href="#linux-macos客户端"><span>Linux/macOS客户端</span></a></h4><p>Linux和macOS客户端运行命令<code>sudo wg-quick up wg0</code>启用客户端<code>wg0</code>接口。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg-quick</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> up</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>现在，您应该已连接到Debian 11服务器，并且来自客户端计算机的流量应通过该服务器。 您可以运行<code>sudo wg</code>命令检查连接。</p><p>如果一切正常，你应该看到wg0接口，transfer和received的数据大小。</p><p>您也可以打开浏览器，搜索<code>what is my ip</code>，然后您应该会看到您的Debian 11服务器IP地址。</p><p>要停止使用wiregurad，请关闭<code>wg0</code>接口，运行命令<code>sudo wg-quick down wg0</code>。</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg-quick</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> down</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>interface: wg0</span></span>
<span class="line"><span>  public key: gFeK6A16ncnT1FG6fJhOCMPMeY4hZa97cZCNWis7cSo=</span></span>
<span class="line"><span>  private key: (hidden)</span></span>
<span class="line"><span>  listening port: 53527</span></span>
<span class="line"><span>  fwmark: 0xca6c</span></span>
<span class="line"><span></span></span>
<span class="line"><span>peer: r3imyh3MCYggaZACmkx+CxlD6uAmICI8pe/PGq8+qCg=</span></span>
<span class="line"><span>  endpoint: XXX.XXX.XXX.XXX:51820</span></span>
<span class="line"><span>  allowed ips: 0.0.0.0/0</span></span>
<span class="line"><span>  latest handshake: 53 seconds ago</span></span>
<span class="line"><span>  transfer: 3.23 KiB received, 3.50 KiB sent</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="windows客户端" tabindex="-1"><a class="header-anchor" href="#windows客户端"><span>Windows客户端</span></a></h4><p>如果您在Windows安装了WireGuard，请单击<code>激活</code>按钮。 连接到对等方后，隧道状态将更改为<code>活动</code>。</p><h3 id="结论" tabindex="-1"><a class="header-anchor" href="#结论"><span>结论</span></a></h3><p>我们已向您展示了如何在Debian 11安装WireGuard并将其配置为VPN服务器。通过此设置，</p><p>您可以通过保持数据不公开来匿名浏览网络。如果您遇到任何问题，请随时发表评论。</p><h2 id="在wireguard中排除部分ip-段" tabindex="-1"><a class="header-anchor" href="#在wireguard中排除部分ip-段"><span><a href="https://lxnchan.cn/wireguard-exclude-ips.html" target="_blank" rel="noopener noreferrer">在Wireguard中排除部分IP（段）</a></span></a></h2><p>众所周知，在Wireguard中只能设置允许的IP（<code>AllowedIPs</code>），没办法设置排除部分IP段。但是可以通过一个Python脚本来计算排除掉某个IP或IP段之后的<code>AllowedIPs</code>。</p><p>改一下下面的参数，然后直接丢Python运行一下，输出结果填在<code>AllowedIPs</code>即可。</p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>1 <br>2 <br>3 <br>4 <br>5 <br>6 <br>7 <br>8 <br>9 <br>10 <br>11 <br>12 <br>13 <br>14 <br>15 <br>16 <br>17 <br>18 <br>19 <br>20</td><td>复制<br><br>#!/usr/bin/python3 <br> <br>from ipaddress import ip_network <br> <br>start = &#39;0.0.0.0/0&#39; <br>#需要排除的ip或者ip段 <br>exclude = [&#39;10.0.0.0/8&#39;, &#39;172.16.0.0/12&#39;, &#39;192.168.0.0/16&#39;, &#39;6.6.6.6&#39;, &#39;8.8.8.8&#39;] <br> <br>result = [ip_network(start)] <br>for x in exclude: <br> n = ip_network(x) <br> new = [] <br> for y in result: <br> if y.overlaps(n): <br> new.extend(y.address_exclude(n)) <br> else: <br> new.append(y) <br> result = new <br> <br>print(&#39;,&#39;.join(str(x) for x in sorted(result)))</td></tr></tbody></table><p>可以直接在<a href="https://www.runoob.com/try/runcode.php?filename=HelloWorld&amp;type=python3" target="_blank" rel="noopener noreferrer">菜鸟教程在线编辑器</a>里面运行。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>0.0.0.0/6,4.0.0.0/7,6.0.0.0/14,6.4.0.0/15,6.6.0.0/22,6.6.4.0/23,6.6.6.0/30,6.6.6.4/31,6.6.6.7/32,6.6.6.8/29,6.6.6.16/28,6.6.6.32/27,6.6.6.64/26,6.6.6.128/25,6.6.7.0/24,6.6.8.0/21,6.6.16.0/20,6.6.32.0/19,6.6.64.0/18,6.6.128.0/17,6.7.0.0/16,6.8.0.0/13,6.16.0.0/12,6.32.0.0/11,6.64.0.0/10,6.128.0.0/9,7.0.0.0/8,8.0.0.0/13,8.8.0.0/21,8.8.8.0/29,8.8.8.9/32,8.8.8.10/31,8.8.8.12/30,8.8.8.16/28,8.8.8.32/27,8.8.8.64/26,8.8.8.128/25,8.8.9.0/24,8.8.10.0/23,8.8.12.0/22,8.8.16.0/20,8.8.32.0/19,8.8.64.0/18,8.8.128.0/17,8.9.0.0/16,8.10.0.0/15,8.12.0.0/14,8.16.0.0/12,8.32.0.0/11,8.64.0.0/10,8.128.0.0/9,9.0.0.0/8,11.0.0.0/8,12.0.0.0/6,16.0.0.0/4,32.0.0.0/3,64.0.0.0/2,128.0.0.0/3,160.0.0.0/5,168.0.0.0/6,172.0.0.0/12,172.32.0.0/11,172.64.0.0/10,172.128.0.0/9,173.0.0.0/8,174.0.0.0/7,176.0.0.0/4,192.0.0.0/9,192.128.0.0/11,192.160.0.0/13,192.169.0.0/16,192.170.0.0/15,192.172.0.0/14,192.176.0.0/12,192.192.0.0/10,193.0.0.0/8,194.0.0.0/7,196.0.0.0/6,200.0.0.0/5,208.0.0.0/4,224.0.0.0/3</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="开机自启动" tabindex="-1"><a class="header-anchor" href="#开机自启动"><span>开机自启动</span></a></h2><ul><li>使用 <code>systemctl</code> 命令启用 WireGuard 服务的自启动：</li></ul><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 先停止原服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg-quick</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> down</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 创建服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> enable</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg-quick@wg0</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">## 启动服务</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> systemctl</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> start</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> wg-quick@wg0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,116)]))}const p=s(r,[["render",t],["__file","Wireguard.html.vue"]]),k=JSON.parse('{"path":"/tech/Wireguard.html","title":"","lang":"zh-CN","frontmatter":{"date":"2025-01-23T00:00:00.000Z","description":"如何在Debian 11安装WireGuard VPN WireGuard是一种现代VPN虚拟私有网络技术，它利用最新的加密技术。 与其他流行的VPN解决方案，例如IPsec和OpenVPN相比，WireGuard更快，更易于配置并且占用空间更小。 它是跨平台的，几乎可以在任何操作系统运行，包括Linux，Windows，Android和macOS。 ...","head":[["meta",{"property":"og:url","content":"https://jiange1236.github.io/tech/Wireguard.html"}],["meta",{"property":"og:site_name","content":"Zeblog"}],["meta",{"property":"og:description","content":"如何在Debian 11安装WireGuard VPN WireGuard是一种现代VPN虚拟私有网络技术，它利用最新的加密技术。 与其他流行的VPN解决方案，例如IPsec和OpenVPN相比，WireGuard更快，更易于配置并且占用空间更小。 它是跨平台的，几乎可以在任何操作系统运行，包括Linux，Windows，Android和macOS。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-16T12:40:42.000Z"}],["meta",{"property":"article:published_time","content":"2025-01-23T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-16T12:40:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-23T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-16T12:40:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zine⁶\\",\\"url\\":\\"https://zecdn.top\\"}]}"],["link",{"rel":"alternate","type":"application/atom+xml","href":"https://jiange1236.github.io/atom.xml","title":"Zeblog Atom Feed"}],["link",{"rel":"alternate","type":"application/json","href":"https://jiange1236.github.io/feed.json","title":"Zeblog JSON Feed"}],["link",{"rel":"alternate","type":"application/rss+xml","href":"https://jiange1236.github.io/rss.xml","title":"Zeblog RSS Feed"}]]},"git":{"createdTime":1737622768000,"updatedTime":1742128842000,"contributors":[{"name":"周子健","username":"周子健","email":"1384621+jiange1236@users.noreply.github.com","commits":3,"url":"https://github.com/周子健"}]},"readingTime":{"minutes":11.01,"words":3303},"filePathRelative":"tech/Wireguard.md","localizedDate":"2025年1月23日","excerpt":"","autoDesc":true}');export{p as comp,k as data};
