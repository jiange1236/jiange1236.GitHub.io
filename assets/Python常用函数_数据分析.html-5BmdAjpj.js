const t=JSON.parse('{"key":"v-5ac10378","path":"/study/Python/Python%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90.html","title":"Python常用函数&数据分析","lang":"zh-CN","frontmatter":{"title":"Python常用函数&数据分析","date":"2022-05-13T00:00:00.000Z","category":["学习"],"tag":["学习","Python"],"article":true,"description":"[toc] 内置函数 函数 说明 abs(x) 返回一个数的绝对值 all(iterable) 如果 iterable 所有元素均为真值(或可迭代对象为空)则返回 True any(iterable) 如果 iterable 的任一元素为真值则返回 True bool([x]) 返回一个布尔值，True 或者 False callable(object) 如果参数 object 是可调用的就返回 True，否则返回 False ascii(object) 就像函数 repr()，返回一个对象可打印的字符串 bin(x) 将一个整数转变为一个前缀为“0b”的二进制字符串 chr(i) 返回 Unicode 码位为整数 i 的字符的字符串格式 complex([real[, imag]]) 返回值为 real + imag*1j 的复数，或将字符串或数字转换为复数 divmod(a, b) 它将两个（非复数）数字作为实参，并在执行整数除法时返回一对商和余数 float([x]) 返回从数字或字符串 x 生成的浮点数 hex(x) 将整数转换为以“0x”为前缀的小写十六进制字符串 int(x, base=10) 返回一个基于数字或字符串 x 构造的整数对象，或者在未给出参数时返回 0 breakpoint(*args, **kws) 此函数会在调用时将你陷入调试器中 bytearray([source[, encoding[, errors]]]) 返回一个新的 bytes 数组 bytes([source[, encoding[, errors]]]) 返回一个新的“bytes”对象， 是一个不可变序列，包含范围为 0 &lt;= x &lt; 256 的整数 compile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1) 将 source 编译成代码或 AST 对象 hash(object) 返回该对象的哈希值（如果它有的话） id(object) 返回对象的“标识值” eval(expression[, globals[, locals]]) 实参是一个字符串，以及可选的 globals 和 locals。globals 实参必须是一个字典。locals 可以是任何映射对象。 exec(object[, globals[, locals]]) 这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）。 help([object]) 启动内置的帮助系统（此函数主要在交互式中使用） @classmethod 把一个方法封装成类方法 dir([object]) 如果没有实参，则返回当前本地作用域中的名称列表 globals() 返回表示当前全局符号表的字典 getattr(object, name[, default]) 返回对象命名属性的值 delattr(object, name) setattr() 相关的函数，如果对象允许，该函数将删除指定的属性 hasattr(object, name) 如果字符串是对象的属性之一的名称，则返回 True，否则返回 False","head":[["meta",{"property":"og:url","content":"https://jiange1236.github.io/study/Python/Python%E5%B8%B8%E7%94%A8%E5%87%BD%E6%95%B0_%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"Zeblog"}],["meta",{"property":"og:title","content":"Python常用函数&数据分析"}],["meta",{"property":"og:description","content":"[toc] 内置函数 函数 说明 abs(x) 返回一个数的绝对值 all(iterable) 如果 iterable 所有元素均为真值(或可迭代对象为空)则返回 True any(iterable) 如果 iterable 的任一元素为真值则返回 True bool([x]) 返回一个布尔值，True 或者 False callable(object) 如果参数 object 是可调用的就返回 True，否则返回 False ascii(object) 就像函数 repr()，返回一个对象可打印的字符串 bin(x) 将一个整数转变为一个前缀为“0b”的二进制字符串 chr(i) 返回 Unicode 码位为整数 i 的字符的字符串格式 complex([real[, imag]]) 返回值为 real + imag*1j 的复数，或将字符串或数字转换为复数 divmod(a, b) 它将两个（非复数）数字作为实参，并在执行整数除法时返回一对商和余数 float([x]) 返回从数字或字符串 x 生成的浮点数 hex(x) 将整数转换为以“0x”为前缀的小写十六进制字符串 int(x, base=10) 返回一个基于数字或字符串 x 构造的整数对象，或者在未给出参数时返回 0 breakpoint(*args, **kws) 此函数会在调用时将你陷入调试器中 bytearray([source[, encoding[, errors]]]) 返回一个新的 bytes 数组 bytes([source[, encoding[, errors]]]) 返回一个新的“bytes”对象， 是一个不可变序列，包含范围为 0 &lt;= x &lt; 256 的整数 compile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1) 将 source 编译成代码或 AST 对象 hash(object) 返回该对象的哈希值（如果它有的话） id(object) 返回对象的“标识值” eval(expression[, globals[, locals]]) 实参是一个字符串，以及可选的 globals 和 locals。globals 实参必须是一个字典。locals 可以是任何映射对象。 exec(object[, globals[, locals]]) 这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）。 help([object]) 启动内置的帮助系统（此函数主要在交互式中使用） @classmethod 把一个方法封装成类方法 dir([object]) 如果没有实参，则返回当前本地作用域中的名称列表 globals() 返回表示当前全局符号表的字典 getattr(object, name[, default]) 返回对象命名属性的值 delattr(object, name) setattr() 相关的函数，如果对象允许，该函数将删除指定的属性 hasattr(object, name) 如果字符串是对象的属性之一的名称，则返回 True，否则返回 False"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-06-07T05:03:50.000Z"}],["meta",{"property":"article:author","content":"Zine"}],["meta",{"property":"article:tag","content":"学习"}],["meta",{"property":"article:tag","content":"Python"}],["meta",{"property":"article:published_time","content":"2022-05-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-07T05:03:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python常用函数&数据分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-13T00:00:00.000Z\\",\\"dateModified\\":\\"2024-06-07T05:03:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zine\\",\\"url\\":\\"https://jiange1236.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Enumerate(iterable, start=0) --返回一个枚举对象","slug":"enumerate-iterable-start-0-返回一个枚举对象","link":"#enumerate-iterable-start-0-返回一个枚举对象","children":[]},{"level":2,"title":"Filter、Map、Reduce和Enumerate函数  --筛选、代换、单个计算、累计计算","slug":"filter、map、reduce和enumerate函数-筛选、代换、单个计算、累计计算","link":"#filter、map、reduce和enumerate函数-筛选、代换、单个计算、累计计算","children":[]},{"level":2,"title":"Format(value[, format_spec]) --格式化字符串","slug":"format-value-format-spec-格式化字符串","link":"#format-value-format-spec-格式化字符串","children":[]},{"level":2,"title":"Collections --容器数据类型","slug":"collections-容器数据类型","link":"#collections-容器数据类型","children":[]},{"level":2,"title":"Decimal、Fractions --十进制定点和浮点运算、分数运算","slug":"decimal、fractions-十进制定点和浮点运算、分数运算","link":"#decimal、fractions-十进制定点和浮点运算、分数运算","children":[]},{"level":2,"title":"Hashlib --哈希函数模块","slug":"hashlib-哈希函数模块","link":"#hashlib-哈希函数模块","children":[]},{"level":2,"title":"Heapq --堆排序模块","slug":"heapq-堆排序模块","link":"#heapq-堆排序模块","children":[]},{"level":2,"title":"Lambda函数 --表达式","slug":"lambda函数-表达式","link":"#lambda函数-表达式","children":[]},{"level":2,"title":"Itertools函数 --迭代","slug":"itertools函数-迭代","link":"#itertools函数-迭代","children":[]},{"level":2,"title":"Operator函数 --表达式","slug":"operator函数-表达式","link":"#operator函数-表达式","children":[]},{"level":2,"title":"Random - 随机数和随机抽样模块","slug":"random-随机数和随机抽样模块","link":"#random-随机数和随机抽样模块","children":[]},{"level":2,"title":"Sorted函数 --排序","slug":"sorted函数-排序","link":"#sorted函数-排序","children":[]},{"level":2,"title":"Zip函数 --按序合并成组，返回列表","slug":"zip函数-按序合并成组-返回列表","link":"#zip函数-按序合并成组-返回列表","children":[]},{"level":2,"title":"NumPy","slug":"numpy","link":"#numpy","children":[]},{"level":2,"title":"Pandas","slug":"pandas","link":"#pandas","children":[]}],"git":{"createdTime":1652841805000,"updatedTime":1717736630000,"contributors":[{"name":"周子健","email":"183465355@qq.com","commits":2},{"name":"jiange1236","email":"183465355@qq.com","commits":1}]},"readingTime":{"minutes":16.49,"words":4947},"filePathRelative":"study/Python/Python常用函数&数据分析.md","localizedDate":"2022年5月13日","excerpt":"<p>[toc]</p>\\n<h1> 内置函数</h1>\\n<table>\\n<thead>\\n<tr>\\n<th><strong>函数</strong></th>\\n<th><strong>说明</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td>abs(x)</td>\\n<td>返回一个数的绝对值</td>\\n</tr>\\n<tr>\\n<td>all(iterable)</td>\\n<td>如果 iterable 所有元素均为真值(或可迭代对象为空)则返回 True</td>\\n</tr>\\n<tr>\\n<td>any(iterable)</td>\\n<td>如果 iterable 的任一元素为真值则返回 True</td>\\n</tr>\\n<tr>\\n<td>bool([x])</td>\\n<td>返回一个布尔值，True 或者 False</td>\\n</tr>\\n<tr>\\n<td>callable(object)</td>\\n<td>如果参数 object 是可调用的就返回 True，否则返回 False</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>ascii(object)</td>\\n<td>就像函数 repr()，返回一个对象可打印的字符串</td>\\n</tr>\\n<tr>\\n<td>bin(x)</td>\\n<td>将一个整数转变为一个前缀为“0b”的二进制字符串</td>\\n</tr>\\n<tr>\\n<td>chr(i)</td>\\n<td>返回 Unicode 码位为整数 i 的字符的字符串格式</td>\\n</tr>\\n<tr>\\n<td>complex([real[, imag]])</td>\\n<td>返回值为 real + imag*1j 的复数，或将字符串或数字转换为复数</td>\\n</tr>\\n<tr>\\n<td>divmod(a, b)</td>\\n<td>它将两个（非复数）数字作为实参，并在执行整数除法时返回一对商和余数</td>\\n</tr>\\n<tr>\\n<td>float([x])</td>\\n<td>返回从数字或字符串 x 生成的浮点数</td>\\n</tr>\\n<tr>\\n<td>hex(x)</td>\\n<td>将整数转换为以“0x”为前缀的小写十六进制字符串</td>\\n</tr>\\n<tr>\\n<td>int(x, base=10)</td>\\n<td>返回一个基于数字或字符串 x 构造的整数对象，或者在未给出参数时返回 0</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>breakpoint(*args, **kws)</td>\\n<td>此函数会在调用时将你陷入调试器中</td>\\n</tr>\\n<tr>\\n<td>bytearray([source[, encoding[, errors]]])</td>\\n<td>返回一个新的 bytes 数组</td>\\n</tr>\\n<tr>\\n<td>bytes([source[, encoding[, errors]]])</td>\\n<td>返回一个新的“bytes”对象， 是一个不可变序列，包含范围为 0 &lt;= x &lt; 256 的整数</td>\\n</tr>\\n<tr>\\n<td>compile(source, filename, mode, flags=0, dont_inherit=False, optimize=-1)</td>\\n<td>将 source 编译成代码或 AST 对象</td>\\n</tr>\\n<tr>\\n<td>hash(object)</td>\\n<td>返回该对象的哈希值（如果它有的话）</td>\\n</tr>\\n<tr>\\n<td>id(object)</td>\\n<td>返回对象的“标识值”</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>eval(expression[, globals[, locals]])</td>\\n<td>实参是一个字符串，以及可选的 globals 和 locals。globals 实参必须是一个字典。locals 可以是任何映射对象。</td>\\n</tr>\\n<tr>\\n<td>exec(object[, globals[, locals]])</td>\\n<td>这个函数支持动态执行 Python 代码。object 必须是字符串或者代码对象。如果是字符串，那么该字符串将被解析为一系列 Python 语句并执行（除非发生语法错误）。</td>\\n</tr>\\n<tr>\\n<td>help([object])</td>\\n<td>启动内置的帮助系统（此函数主要在交互式中使用）</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>@classmethod</td>\\n<td>把一个方法封装成类方法</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>dir([object])</td>\\n<td>如果没有实参，则返回当前本地作用域中的名称列表</td>\\n</tr>\\n<tr>\\n<td>globals()</td>\\n<td>返回表示当前全局符号表的字典</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n<tr>\\n<td>getattr(object, name[, default])</td>\\n<td>返回对象命名属性的值</td>\\n</tr>\\n<tr>\\n<td>delattr(object, name)</td>\\n<td>setattr() 相关的函数，如果对象允许，该函数将删除指定的属性</td>\\n</tr>\\n<tr>\\n<td>hasattr(object, name)</td>\\n<td>如果字符串是对象的属性之一的名称，则返回 True，否则返回 False</td>\\n</tr>\\n<tr>\\n<td></td>\\n<td></td>\\n</tr>\\n</tbody>\\n</table>","autoDesc":true}');export{t as data};
