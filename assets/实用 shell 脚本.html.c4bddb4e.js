import{d as s}from"./app.3efe92fe.js";import{_ as n}from"./plugin-vue_export-helper.21dcd24c.js";const a={},p=s(`<h1 id="\u5B9E\u7528-shell-\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u7528-shell-\u811A\u672C" aria-hidden="true">#</a> \u5B9E\u7528 shell \u811A\u672C</h1><h2 id="_1\u3001\u670D\u52A1\u5668\u7CFB\u7EDF\u914D\u7F6E\u521D\u59CB\u5316" tabindex="-1"><a class="header-anchor" href="#_1\u3001\u670D\u52A1\u5668\u7CFB\u7EDF\u914D\u7F6E\u521D\u59CB\u5316" aria-hidden="true">#</a> 1\u3001\u670D\u52A1\u5668\u7CFB\u7EDF\u914D\u7F6E\u521D\u59CB\u5316</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#/bin/bash</span>
<span class="token comment"># \u5B89\u88C5\u7CFB\u7EDF\u6027\u80FD\u5206\u6790\u5DE5\u5177\u53CA\u5176\u4ED6</span>
yum <span class="token function">install</span> gcc <span class="token function">make</span> autoconf <span class="token function">vim</span> sysstat net-tools iostat iftop iotp <span class="token function">wget</span> lrzsz <span class="token function">lsof</span> <span class="token function">unzip</span> openssh-clients net-tool <span class="token function">vim</span> ntpdate -y
<span class="token comment"># \u8BBE\u7F6E\u65F6\u533A\u5E76\u540C\u6B65\u65F6\u95F4</span>
<span class="token function">ln</span> -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">crontab</span> -l <span class="token operator">|</span><span class="token function">grep</span> ntpdate <span class="token operator">&amp;&gt;</span>/dev/null <span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token punctuation">(</span>echo <span class="token string">&quot;* 1 * * * ntpdate time.windows.com &gt;/dev/null 2&gt;&amp;1&quot;</span><span class="token punctuation">;</span><span class="token function">crontab</span> -l<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token function">crontab</span> 
<span class="token keyword">fi</span>
 
<span class="token comment"># \u7981\u7528selinux</span>
<span class="token function">sed</span> -i <span class="token string">&#39;/SELINUX/{s/permissive/disabled/}&#39;</span> /etc/selinux/config
 
<span class="token comment"># \u5173\u95ED\u9632\u706B\u5899</span>
<span class="token keyword">if</span> <span class="token function">egrep</span> <span class="token string">&quot;7.[0-9]&quot;</span> /etc/redhat-release <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    systemctl stop firewalld
    systemctl disable firewalld
<span class="token keyword">elif</span> <span class="token function">egrep</span> <span class="token string">&quot;6.[0-9]&quot;</span> /etc/redhat-release <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">service</span> iptables stop
    <span class="token function">chkconfig</span> iptables off
<span class="token keyword">fi</span>
 
<span class="token comment"># \u5386\u53F2\u547D\u4EE4\u663E\u793A\u64CD\u4F5C\u65F6\u95F4</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> HISTTIMEFORMAT /etc/bashrc<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;export HISTTIMEFORMAT=&quot;%Y-%m-%d %H:%M:%S  \`whoami\` &quot;&#39;</span> <span class="token operator">&gt;&gt;</span> /etc/bashrc
<span class="token keyword">fi</span>
 
<span class="token comment"># SSH\u8D85\u65F6\u65F6\u95F4</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> <span class="token string">&quot;TMOUT=600&quot;</span> /etc/profile <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;export TMOUT=600&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/profile
<span class="token keyword">fi</span>
 
<span class="token comment"># \u7981\u6B62root\u8FDC\u7A0B\u767B\u5F55 \u5207\u8BB0\u7ED9\u7CFB\u7EDF\u6DFB\u52A0\u666E\u901A\u7528\u6237\uFF0C\u7ED9su\u5230root\u7684\u6743\u9650</span>
<span class="token function">sed</span> -i <span class="token string">&#39;s/#PermitRootLogin yes/PermitRootLogin no/&#39;</span> /etc/ssh/sshd_config
 
<span class="token comment"># \u7981\u6B62\u5B9A\u65F6\u4EFB\u52A1\u5411\u53D1\u9001\u90AE\u4EF6</span>
<span class="token function">sed</span> -i <span class="token string">&#39;s/^MAILTO=root/MAILTO=&quot;&quot;/&#39;</span> /etc/crontab 
 
<span class="token comment"># \u8BBE\u7F6E\u6700\u5927\u6253\u5F00\u6587\u4EF6\u6570</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> <span class="token string">&quot;* soft nofile 65535&quot;</span> /etc/security/limits.conf <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
<span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
    * soft nofile 65535
    * hard nofile 65535
EOF</span>
<span class="token keyword">fi</span>
 
<span class="token comment"># \u7CFB\u7EDF\u5185\u6838\u4F18\u5316</span>
<span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_tw_buckets = 20480
net.ipv4.tcp_max_syn_backlog = 20480
net.core.netdev_max_backlog = 262144
net.ipv4.tcp_fin_timeout = 20  
EOF</span>
 
<span class="token comment"># \u51CF\u5C11SWAP\u4F7F\u7528</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">&gt;</span> /proc/sys/vm/swappiness
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br></div></div><h2 id="_2\u3001\u6279\u91CF\u521B\u5EFA\u591A\u4E2A\u7528\u6237\u5E76\u8BBE\u7F6E\u5BC6\u7801" tabindex="-1"><a class="header-anchor" href="#_2\u3001\u6279\u91CF\u521B\u5EFA\u591A\u4E2A\u7528\u6237\u5E76\u8BBE\u7F6E\u5BC6\u7801" aria-hidden="true">#</a> 2\u3001\u6279\u91CF\u521B\u5EFA\u591A\u4E2A\u7528\u6237\u5E76\u8BBE\u7F6E\u5BC6\u7801</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">USER_LIST</span><span class="token operator">=</span><span class="token variable">$@</span>
<span class="token assign-left variable">USER_FILE</span><span class="token operator">=</span>./user.info
<span class="token keyword">for</span> <span class="token for-or-select variable">USER</span> <span class="token keyword">in</span> <span class="token variable">$USER_LIST</span><span class="token punctuation">;</span><span class="token keyword">do</span>
 <span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">id</span> <span class="token environment constant">$USER</span> <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$RANDOM</span> <span class="token operator">|</span>md5sum <span class="token operator">|</span><span class="token function">cut</span> -c <span class="token number">1</span>-8<span class="token variable">)</span></span>
  <span class="token function">useradd</span> <span class="token environment constant">$USER</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$PASS</span> <span class="token operator">|</span> <span class="token function">passwd</span> --stdin <span class="token environment constant">$USER</span> <span class="token operator">&amp;&gt;</span>/dev/null
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span>   <span class="token variable">$PASS</span>&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$USER_FILE</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span> User create successful.&quot;</span>
 <span class="token keyword">else</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span> User already exists!&quot;</span>
 <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="_3\u3001\u4E00\u952E\u67E5\u770B\u670D\u52A1\u5668\u5229\u7528\u7387" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u4E00\u952E\u67E5\u770B\u670D\u52A1\u5668\u5229\u7528\u7387" aria-hidden="true">#</a> 3\u3001\u4E00\u952E\u67E5\u770B\u670D\u52A1\u5668\u5229\u7528\u7387</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token keyword">function</span> <span class="token function-name function">cpu</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 
 <span class="token assign-left variable">util</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">vmstat</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $13+$14}&#39;</span><span class="token variable">)</span></span>
 <span class="token assign-left variable">iowait</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">vmstat</span> <span class="token operator">|</span> <span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $16}&#39;</span><span class="token variable">)</span></span>
 <span class="token builtin class-name">echo</span> <span class="token string">&quot;CPU -\u4F7F\u7528\u7387\uFF1A<span class="token variable">\${util}</span>% ,\u7B49\u5F85\u78C1\u76D8IO\u76F8\u5E94\u4F7F\u7528\u7387\uFF1A<span class="token variable">\${iowait}</span>:<span class="token variable">\${iowait}</span>%&quot;</span>
 
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function-name function">memory</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 
 <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> -m <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2)printf &quot;%.1f&quot;,$2/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> -m <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2) printf &quot;%.1f&quot;,($2-$NF)/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> -m <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2) printf &quot;%.1f&quot;,$NF/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;\u5185\u5B58 - \u603B\u5927\u5C0F: <span class="token variable">\${total}</span>G , \u4F7F\u7528: <span class="token variable">\${used}</span>G , \u5269\u4F59: <span class="token variable">\${available}</span>G&quot;</span>
<span class="token punctuation">}</span>
<span class="token function-name function">disk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 
 <span class="token assign-left variable">fs</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;/^\\/dev/{print $1}&#39;</span><span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">p</span> <span class="token keyword">in</span> <span class="token variable">$fs</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">mounted</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $NF}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $2}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $3}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">used_percent</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $5}&#39;</span><span class="token variable">)</span></span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;\u786C\u76D8 - \u6302\u8F7D\u70B9: <span class="token variable">$mounted</span> , \u603B\u5927\u5C0F: <span class="token variable">$size</span> , \u4F7F\u7528: <span class="token variable">$used</span> , \u4F7F\u7528\u7387: <span class="token variable">$used_percent</span>&quot;</span>
    <span class="token keyword">done</span>
 
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function-name function">tcp_status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">summary</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>ss -antp <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{status[$1]++}END{for(i in status) printf i&quot;:&quot;status[i]&quot; &quot;}&#39;</span><span class="token variable">)</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;TCP\u8FDE\u63A5\u72B6\u6001 - <span class="token variable">$summary</span>&quot;</span>
<span class="token punctuation">}</span>
cpu
memory
disk
tcp_status
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br></div></div><h2 id="_4\u3001\u627E\u51FA\u5360\u7528cpu-\u5185\u5B58\u8FC7\u9AD8\u7684\u8FDB\u7A0B" tabindex="-1"><a class="header-anchor" href="#_4\u3001\u627E\u51FA\u5360\u7528cpu-\u5185\u5B58\u8FC7\u9AD8\u7684\u8FDB\u7A0B" aria-hidden="true">#</a> 4\u3001\u627E\u51FA\u5360\u7528CPU \u5185\u5B58\u8FC7\u9AD8\u7684\u8FDB\u7A0B</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;-------------------CUP\u5360\u7528\u524D10\u6392\u5E8F--------------------------------&quot;</span>
<span class="token function">ps</span> -eo user,pid,pcpu,pmem,args --sort<span class="token operator">=</span>-pcpu  <span class="token operator">|</span><span class="token function">head</span> -n <span class="token number">10</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;-------------------\u5185\u5B58\u5360\u7528\u524D10\u6392\u5E8F--------------------------------&quot;</span>
<span class="token function">ps</span> -eo user,pid,pcpu,pmem,args --sort<span class="token operator">=</span>-pmem  <span class="token operator">|</span><span class="token function">head</span> -n <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_5\u3001\u67E5\u770B\u7F51\u5361\u7684\u5B9E\u65F6\u6D41\u91CF" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u67E5\u770B\u7F51\u5361\u7684\u5B9E\u65F6\u6D41\u91CF" aria-hidden="true">#</a> 5\u3001\u67E5\u770B\u7F51\u5361\u7684\u5B9E\u65F6\u6D41\u91CF</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">eth0</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token builtin class-name">echo</span>  -e    <span class="token string">&quot;\u6D41\u91CF\u8FDB\u5165--\u6D41\u91CF\u4F20\u51FA    &quot;</span>
<span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
 <span class="token assign-left variable">old_in</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/net/dev <span class="token operator">|</span><span class="token function">grep</span> $eth0 <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
 <span class="token assign-left variable">old_out</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/net/dev <span class="token operator">|</span><span class="token function">grep</span> $eth0 <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $10}&#39;</span><span class="token variable">)</span></span>
 <span class="token function">sleep</span> <span class="token number">1</span>
 <span class="token assign-left variable">new_in</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/net/dev <span class="token operator">|</span><span class="token function">grep</span> $eth0 <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $2}&#39;</span><span class="token variable">)</span></span>
 <span class="token assign-left variable">new_out</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /proc/net/dev <span class="token operator">|</span><span class="token function">grep</span> $eth0 <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{print $10}&#39;</span><span class="token variable">)</span></span>
 <span class="token assign-left variable">in</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%.1f%s&quot;</span> &quot;<span class="token punctuation">$((</span><span class="token punctuation">(</span>$new_in-$old_in<span class="token punctuation">)</span>/1024<span class="token variable">)</span></span><span class="token punctuation">)</span><span class="token string">&quot; &quot;</span>KB/s<span class="token string">&quot;)
 out=<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%.1f%s&quot;</span> &quot;<span class="token punctuation">$((</span><span class="token punctuation">(</span>$new_out-$old_out<span class="token punctuation">)</span>/1024<span class="token variable">)</span></span>)&quot;</span> <span class="token string">&quot;KB/s&quot;</span><span class="token punctuation">)</span>
 <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$in</span> <span class="token variable">$out</span>&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><h2 id="_6\u3001\u76D1\u63A7\u591A\u53F0\u670D\u52A1\u5668\u78C1\u76D8\u5229\u7528\u7387\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u76D1\u63A7\u591A\u53F0\u670D\u52A1\u5668\u78C1\u76D8\u5229\u7528\u7387\u811A\u672C" aria-hidden="true">#</a> 6\u3001\u76D1\u63A7\u591A\u53F0\u670D\u52A1\u5668\u78C1\u76D8\u5229\u7528\u7387\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">HOST_INFO</span><span class="token operator">=</span>host.info
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^[^#]/{print $1}&#39;</span> $HOST_INFO<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
 <span class="token comment">#\u53D6\u51FA\u7528\u6237\u540D\u548C\u7AEF\u53E3</span>
    <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $2}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $3}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
 <span class="token comment">#\u521B\u5EFA\u4E34\u65F6\u6587\u4EF6\uFF0C\u4FDD\u5B58\u4FE1\u606F</span>
    <span class="token assign-left variable">TMP_FILE</span><span class="token operator">=</span>/tmp/disk.tmp
 <span class="token comment">#\u901A\u8FC7\u516C\u94A5\u767B\u5F55\u83B7\u53D6\u4E3B\u673A\u78C1\u76D8\u4FE1\u606F</span>
    <span class="token function">ssh</span> -p <span class="token variable">$PORT</span> <span class="token environment constant">$USER</span>@<span class="token variable">$IP</span> <span class="token string">&#39;df -h&#39;</span> <span class="token operator">&gt;</span> <span class="token variable">$TMP_FILE</span>
 <span class="token comment">#\u5206\u6790\u78C1\u76D8\u5360\u7528\u7A7A\u95F4</span>
    <span class="token assign-left variable">USE_RATE_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;BEGIN{OFS=&quot;=&quot;}/^\\/dev/{print $NF,int($5)}&#39;</span> $TMP_FILE<span class="token variable">)</span></span>
 <span class="token comment">#\u5FAA\u73AF\u78C1\u76D8\u5217\u8868\uFF0C\u8FDB\u884C\u5224\u65AD</span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">USE_RATE</span> <span class="token keyword">in</span> <span class="token variable">$USE_RATE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
  <span class="token comment">#\u53D6\u51FA\u7B49\u53F7\uFF08=\uFF09\u53F3\u8FB9\u7684\u503C \u6302\u8F7D\u70B9\u540D\u79F0</span>
        <span class="token assign-left variable">PART_NAME</span><span class="token operator">=</span><span class="token variable">\${USE_RATE<span class="token operator">%</span>=*}</span>  
  <span class="token comment">#\u53D6\u51FA\u7B49\u53F7\uFF08=\uFF09\u5DE6\u8FB9\u7684\u503C  \u78C1\u76D8\u5229\u7528\u7387</span>
        <span class="token assign-left variable">USE_RATE</span><span class="token operator">=</span><span class="token variable">\${USE_RATE<span class="token operator">#</span>*=}</span>
  <span class="token comment">#\u8FDB\u884C\u5224\u65AD</span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$USE_RATE</span> -ge <span class="token number">80</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;Warning: <span class="token variable">$PART_NAME</span> Partition usage <span class="token variable">$USE_RATE</span>%!&quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;\u670D\u52A1\u5668<span class="token variable">$IP</span>\u7684\u78C1\u76D8\u7A7A\u95F4\u5360\u7528\u8FC7\u9AD8\uFF0C\u8BF7\u53CA\u65F6\u5904\u7406&quot;</span> <span class="token operator">|</span> mail -s <span class="token string">&quot;\u7A7A\u95F4\u4E0D\u8DB3\u8B66\u544A&quot;</span> \u4F60\u7684qq@qq.com
  <span class="token keyword">else</span>
   <span class="token builtin class-name">echo</span> <span class="token string">&quot;\u670D\u52A1\u5668<span class="token variable">$IP</span>\u7684<span class="token variable">$PART_NAME</span>\u76EE\u5F55\u7A7A\u95F4\u826F\u597D&quot;</span>
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div><h2 id="_7\u3001\u6279\u91CF\u68C0\u6D4B\u7F51\u7AD9\u662F\u5426\u5F02\u5E38\u5E76\u90AE\u4EF6\u901A\u77E5" tabindex="-1"><a class="header-anchor" href="#_7\u3001\u6279\u91CF\u68C0\u6D4B\u7F51\u7AD9\u662F\u5426\u5F02\u5E38\u5E76\u90AE\u4EF6\u901A\u77E5" aria-hidden="true">#</a> 7\u3001\u6279\u91CF\u68C0\u6D4B\u7F51\u7AD9\u662F\u5426\u5F02\u5E38\u5E76\u90AE\u4EF6\u901A\u77E5</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash  </span>
<span class="token assign-left variable">URL_LIST</span><span class="token operator">=</span><span class="token string">&quot;www.baidu.com www.ctnrs.com www.der-matech.net.cn www.der-matech.com.cn www.der-matech.cn www.der-matech.top www.der-matech.org&quot;</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">URL</span> <span class="token keyword">in</span> <span class="token variable">$URL_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">FAIL_COUNT</span><span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">HTTP_CODE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -o /dev/null --connect-timeout <span class="token number">3</span> -s -w <span class="token string">&quot;%{http_code}&quot;</span> $URL<span class="token variable">)</span></span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$HTTP_CODE</span> -eq <span class="token number">200</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$URL</span> OK&quot;</span>
            <span class="token builtin class-name">break</span>
        <span class="token keyword">else</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$URL</span> retry <span class="token variable">$FAIL_COUNT</span>&quot;</span>
            <span class="token builtin class-name">let</span> FAIL_COUNT++
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$FAIL_COUNT</span> -eq <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Warning: <span class="token variable">$URL</span> Access failure!&quot;</span>
  <span class="token builtin class-name">echo</span> <span class="token string">&quot;\u7F51\u7AD9<span class="token variable">$URL</span>\u574F\u6389\uFF0C\u8BF7\u53CA\u65F6\u5904\u7406&quot;</span> <span class="token operator">|</span> mail -s <span class="token string">&quot;<span class="token variable">$URL</span>\u7F51\u7AD9\u9AD8\u5371&quot;</span> <span class="token number">1794748404</span>@qq.com
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_8\u3001\u6279\u91CF\u4E3B\u673A\u8FDC\u7A0B\u6267\u884C\u547D\u4EE4\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_8\u3001\u6279\u91CF\u4E3B\u673A\u8FDC\u7A0B\u6267\u884C\u547D\u4EE4\u811A\u672C" aria-hidden="true">#</a> 8\u3001\u6279\u91CF\u4E3B\u673A\u8FDC\u7A0B\u6267\u884C\u547D\u4EE4\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">COMMAND</span><span class="token operator">=</span><span class="token variable">$*</span>
<span class="token assign-left variable">HOST_INFO</span><span class="token operator">=</span>host.info
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^[^#]/{print $1}&#39;</span> $HOST_INFO<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $2}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $3}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $4}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token function">expect</span> -c <span class="token string">&quot;
       spawn ssh -p <span class="token variable">$PORT</span> <span class="token environment constant">$USER</span>@<span class="token variable">$IP</span>
       expect {
          <span class="token entity" title="\\&quot;">\\&quot;</span>(yes/no)<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span>yes<span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
          <span class="token entity" title="\\&quot;">\\&quot;</span>password:<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$PASS</span><span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
          <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token environment constant">$USER</span>@*<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$COMMAND</span><span class="token entity" title="\\r">\\r</span> exit<span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
       }
    &quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;-------------------&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_9\u3001\u4E00\u952E\u90E8\u7F72lnmp\u7F51\u7AD9\u5E73\u53F0\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_9\u3001\u4E00\u952E\u90E8\u7F72lnmp\u7F51\u7AD9\u5E73\u53F0\u811A\u672C" aria-hidden="true">#</a> 9\u3001\u4E00\u952E\u90E8\u7F72LNMP\u7F51\u7AD9\u5E73\u53F0\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">NGINX_V</span><span class="token operator">=</span><span class="token number">1.15</span>.6
<span class="token assign-left variable">PHP_V</span><span class="token operator">=</span><span class="token number">5.6</span>.36
<span class="token assign-left variable">TMP_DIR</span><span class="token operator">=</span>/tmp
 
<span class="token assign-left variable">INSTALL_DIR</span><span class="token operator">=</span>/usr/local
 
<span class="token assign-left variable">PWD_C</span><span class="token operator">=</span><span class="token environment constant">$PWD</span>
 
<span class="token builtin class-name">echo</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span>Menu<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;1. Install Nginx&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;2. Install PHP&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;3. Install MySQL&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;4. Deploy LNMP&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;9. Quit&quot;</span>
 
<span class="token keyword">function</span> <span class="token function-name function">command_status_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
  <span class="token builtin class-name">echo</span> <span class="token variable">$1</span>
  <span class="token builtin class-name">exit</span>
 <span class="token keyword">fi</span> 
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">install_nginx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin class-name">cd</span> <span class="token variable">$TMP_DIR</span>
    yum <span class="token function">install</span> -y gcc gcc-c++ <span class="token function">make</span> openssl-devel pcre-devel <span class="token function">wget</span>
    <span class="token function">wget</span> http://nginx.org/download/nginx-<span class="token variable">\${NGINX_V}</span>.tar.gz
    <span class="token function">tar</span> zxf nginx-<span class="token variable">\${NGINX_V}</span>.tar.gz
    <span class="token builtin class-name">cd</span> nginx-<span class="token variable">\${NGINX_V}</span>
    ./configure --prefix<span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/nginx <span class="token punctuation">\\</span>
    --with-http_ssl_module <span class="token punctuation">\\</span>
    --with-http_stub_status_module <span class="token punctuation">\\</span>
    --with-stream
    command_status_check <span class="token string">&quot;Nginx - \u5E73\u53F0\u73AF\u5883\u68C0\u67E5\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">make</span> -j <span class="token number">4</span> 
    command_status_check <span class="token string">&quot;Nginx - \u7F16\u8BD1\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">make</span> <span class="token function">install</span>
    command_status_check <span class="token string">&quot;Nginx - \u5B89\u88C5\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">mkdir</span> -p <span class="token variable">$INSTALL_DIR</span>/nginx/conf/vhost
    <span class="token builtin class-name">alias</span> <span class="token assign-left variable">cp</span><span class="token operator">=</span>cp <span class="token punctuation">;</span> <span class="token function">cp</span> -rf <span class="token variable">$PWD_C</span>/nginx.conf <span class="token variable">$INSTALL_DIR</span>/nginx/conf
    <span class="token function">rm</span> -rf <span class="token variable">$INSTALL_DIR</span>/nginx/html/*
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;ok&quot;</span> <span class="token operator">&gt;</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/status.html
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;&lt;?php echo &quot;ok&quot;?&gt;&#39;</span> <span class="token operator">&gt;</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/status.php
    <span class="token variable">$INSTALL_DIR</span>/nginx/sbin/nginx
    command_status_check <span class="token string">&quot;Nginx - \u542F\u52A8\u5931\u8D25\uFF01&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">install_php</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token builtin class-name">cd</span> <span class="token variable">$TMP_DIR</span>
    yum <span class="token function">install</span> -y gcc gcc-c++ <span class="token function">make</span> gd-devel libxml2-devel <span class="token punctuation">\\</span>
        libcurl-devel libjpeg-devel libpng-devel openssl-devel <span class="token punctuation">\\</span>
        libmcrypt-devel libxslt-devel libtidy-devel
    <span class="token function">wget</span> http://docs.php.net/distributions/php-<span class="token variable">\${PHP_V}</span>.tar.gz
    <span class="token function">tar</span> zxf php-<span class="token variable">\${PHP_V}</span>.tar.gz
    <span class="token builtin class-name">cd</span> php-<span class="token variable">\${PHP_V}</span>
    ./configure --prefix<span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/php <span class="token punctuation">\\</span>
    --with-config-file-path<span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/php/etc <span class="token punctuation">\\</span>
    --enable-fpm --enable-opcache <span class="token punctuation">\\</span>
    --with-mysql --with-mysqli --with-pdo-mysql <span class="token punctuation">\\</span>
    --with-openssl --with-zlib --with-curl --with-gd <span class="token punctuation">\\</span>
    --with-jpeg-dir --with-png-dir --with-freetype-dir <span class="token punctuation">\\</span>
    --enable-mbstring --enable-hash
    command_status_check <span class="token string">&quot;PHP - \u5E73\u53F0\u73AF\u5883\u68C0\u67E5\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">make</span> -j <span class="token number">4</span> 
    command_status_check <span class="token string">&quot;PHP - \u7F16\u8BD1\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">make</span> <span class="token function">install</span>
    command_status_check <span class="token string">&quot;PHP - \u5B89\u88C5\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">cp</span> php.ini-production <span class="token variable">$INSTALL_DIR</span>/php/etc/php.ini
    <span class="token function">cp</span> sapi/fpm/php-fpm.conf <span class="token variable">$INSTALL_DIR</span>/php/etc/php-fpm.conf
    <span class="token function">cp</span> sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
    <span class="token function">chmod</span> +x /etc/init.d/php-fpm
    /etc/init.d/php-fpm start
    command_status_check <span class="token string">&quot;PHP - \u542F\u52A8\u5931\u8D25\uFF01&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token builtin class-name">read</span> -p <span class="token string">&quot;\u8BF7\u8F93\u5165\u7F16\u53F7\uFF1A&quot;</span> number
<span class="token keyword">case</span> <span class="token variable">$number</span> <span class="token keyword">in</span>
    <span class="token number">1</span><span class="token punctuation">)</span>
        install_nginx<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">2</span><span class="token punctuation">)</span>
        install_php<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">3</span><span class="token punctuation">)</span>
        install_mysql<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">4</span><span class="token punctuation">)</span>
        install_nginx
        install_php
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">9</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div><h2 id="_10\u3001\u76D1\u63A7mysql\u4E3B\u4ECE\u540C\u6B65\u72B6\u6001\u662F\u5426\u5F02\u5E38\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_10\u3001\u76D1\u63A7mysql\u4E3B\u4ECE\u540C\u6B65\u72B6\u6001\u662F\u5426\u5F02\u5E38\u811A\u672C" aria-hidden="true">#</a> 10\u3001\u76D1\u63A7MySQL\u4E3B\u4ECE\u540C\u6B65\u72B6\u6001\u662F\u5426\u5F02\u5E38\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash  </span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>root
<span class="token assign-left variable">PASSWD</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">IO_SQL_STATUS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASSWD -e <span class="token string">&#39;show slave status\\G&#39;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;/Slave_.*_Running:/{print $1$2}&#39;</span><span class="token variable">)</span></span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable">$IO_SQL_STATUS</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">THREAD_STATUS_NAME</span><span class="token operator">=</span><span class="token variable">\${i<span class="token operator">%</span><span class="token operator">:</span>*}</span>
    <span class="token assign-left variable">THREAD_STATUS</span><span class="token operator">=</span><span class="token variable">\${i<span class="token operator">#</span>*<span class="token operator">:</span>}</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$THREAD_STATUS</span>&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;Yes&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Error: MySQL Master-Slave <span class="token variable">$THREAD_STATUS_NAME</span> status is <span class="token variable">$THREAD_STATUS</span>!&quot;</span> <span class="token operator">|</span>mail -s <span class="token string">&quot;Master-Slave Staus&quot;</span> xxx@163.com
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_11\u3001mysql\u6570\u636E\u5E93\u5907\u4EFD\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_11\u3001mysql\u6570\u636E\u5E93\u5907\u4EFD\u811A\u672C" aria-hidden="true">#</a> 11\u3001MySql\u6570\u636E\u5E93\u5907\u4EFD\u811A\u672C</h2><h6 id="\u5206\u5E93\u5907\u4EFD" tabindex="-1"><a class="header-anchor" href="#\u5206\u5E93\u5907\u4EFD" aria-hidden="true">#</a> \u5206\u5E93\u5907\u4EFD</h6><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mysqldump -uroot -pxxx -B A <span class="token operator">&gt;</span> A.sql
<span class="token comment">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%H-%M-%S<span class="token variable">)</span></span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>backup
<span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/db_backup
<span class="token assign-left variable">DB_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS -s -e <span class="token string">&quot;show databases;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">egrep</span> -v <span class="token string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span><span class="token variable">)</span></span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">DB</span> <span class="token keyword">in</span> <span class="token variable">$DB_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">BACKUP_NAME</span><span class="token operator">=</span><span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${DB}</span>_<span class="token variable">\${DATE}</span>.sql
    <span class="token keyword">if</span> <span class="token operator">!</span> mysqldump -h<span class="token variable">$HOST</span> -u<span class="token environment constant">$USER</span> -p<span class="token variable">$PASS</span> -B <span class="token variable">$DB</span> <span class="token operator">&gt;</span> <span class="token variable">$BACKUP_NAME</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$BACKUP_NAME</span> \u5907\u4EFD\u5931\u8D25!&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><h6 id="\u5206\u8868\u5907\u4EFD" tabindex="-1"><a class="header-anchor" href="#\u5206\u8868\u5907\u4EFD" aria-hidden="true">#</a> \u5206\u8868\u5907\u4EFD</h6><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code>mysqldump -uroot -pxxx -A t <span class="token operator">&gt;</span> t.sql
<span class="token comment">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%H-%M-%S<span class="token variable">)</span></span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>backup
<span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/db_backup
<span class="token assign-left variable">DB_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS -s -e <span class="token string">&quot;show databases;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">egrep</span> -v <span class="token string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span><span class="token variable">)</span></span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">DB</span> <span class="token keyword">in</span> <span class="token variable">$DB_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">BACKUP_DB_DIR</span><span class="token operator">=</span><span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${DB}</span>_<span class="token variable">\${DATE}</span>
    <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$BACKUP_DB_DIR</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> -p <span class="token variable">$BACKUP_DB_DIR</span> <span class="token operator">&amp;&gt;</span>/dev/null
    <span class="token assign-left variable">TABLE_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS -s -e <span class="token string">&quot;use <span class="token variable">$DB</span>;show tables;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">TABLE</span> <span class="token keyword">in</span> <span class="token variable">$TABLE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">BACKUP_NAME</span><span class="token operator">=</span><span class="token variable">$BACKUP_DB_DIR</span>/<span class="token variable">\${TABLE}</span>.sql 
        <span class="token keyword">if</span> <span class="token operator">!</span> mysqldump -h<span class="token variable">$HOST</span> -u<span class="token environment constant">$USER</span> -p<span class="token variable">$PASS</span> <span class="token variable">$DB</span> <span class="token variable">$TABLE</span> <span class="token operator">&gt;</span> <span class="token variable">$BACKUP_NAME</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$BACKUP_NAME</span> \u5907\u4EFD\u5931\u8D25!&quot;</span>
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br></div></div><h2 id="_12\u3001nginx\u8BBF\u95EE\u65E5\u5FD7\u5206\u6790" tabindex="-1"><a class="header-anchor" href="#_12\u3001nginx\u8BBF\u95EE\u65E5\u5FD7\u5206\u6790" aria-hidden="true">#</a> 12\u3001Nginx\u8BBF\u95EE\u65E5\u5FD7\u5206\u6790</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># \u65E5\u5FD7\u683C\u5F0F: $remote_addr - $remote_user [$time_local] &quot;$request&quot; $status $body_bytes_sent &quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;</span>
<span class="token assign-left variable">LOG_FILE</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;\u7EDF\u8BA1\u8BBF\u95EE\u6700\u591A\u768410\u4E2AIP&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$1]++}END{print &quot;UV:&quot;,length(a);for(v in a)print v,a[v]}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> -k2 -nr <span class="token operator">|</span><span class="token function">head</span> -10
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;\u7EDF\u8BA1\u65F6\u95F4\u6BB5\u8BBF\u95EE\u6700\u591A\u7684IP&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;$4&gt;=&quot;[01/Dec/2018:13:20:25&quot; &amp;&amp; $4&lt;=&quot;[27/Nov/2018:16:20:49&quot;{a[$1]++}END{for(v in a)print v,a[v]}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> -k2 -nr<span class="token operator">|</span><span class="token function">head</span> -10
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;\u7EDF\u8BA1\u8BBF\u95EE\u6700\u591A\u768410\u4E2A\u9875\u9762&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$7]++}END{print &quot;PV:&quot;,length(a);for(v in a){if(a[v]&gt;10)print v,a[v]}}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> -k2 -nr
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;\u7EDF\u8BA1\u8BBF\u95EE\u9875\u9762\u72B6\u6001\u7801\u6570\u91CF&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$7&quot; &quot;$9]++}END{for(v in a){if(a[v]&gt;5)print v,a[v]}}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> -k3 -nr
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_13\u3001nginx\u8BBF\u95EE\u65E5\u5FD7\u81EA\u52A8\u6309\u5929-\u5468\u3001\u6708-\u5207\u5272" tabindex="-1"><a class="header-anchor" href="#_13\u3001nginx\u8BBF\u95EE\u65E5\u5FD7\u81EA\u52A8\u6309\u5929-\u5468\u3001\u6708-\u5207\u5272" aria-hidden="true">#</a> 13\u3001Nginx\u8BBF\u95EE\u65E5\u5FD7\u81EA\u52A8\u6309\u5929\uFF08\u5468\u3001\u6708\uFF09\u5207\u5272</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment">#nginx\u65E5\u5FD7\u76EE\u5F55</span>
<span class="token assign-left variable">LOG_DIR</span><span class="token operator">=</span>/www/server/nginx/logs
<span class="token comment">#\u83B7\u53D6\u5230\u4E0A\u4E00\u5929\u7684\u65F6\u95F4</span>
<span class="token assign-left variable">YESTERDAY_TIME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> -d <span class="token string">&quot;yesterday&quot;</span> +%F<span class="token variable">)</span></span>
<span class="token comment">#\u5F52\u6863\u65E5\u5FD7\u53D6\u65F6\u95F4</span>
<span class="token assign-left variable">LOG_MONTH_DIR</span><span class="token operator">=</span><span class="token variable">$LOG_DIR</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&quot;%Y-%m&quot;</span><span class="token variable">)</span></span>
<span class="token comment">#\u5F52\u6863\u65E5\u5FD7\u7684\u540D\u79F0</span>
<span class="token assign-left variable">LOG_FILE_LIST</span><span class="token operator">=</span><span class="token string">&quot;access.log&quot;</span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">LOG_FILE</span> <span class="token keyword">in</span> <span class="token variable">$LOG_FILE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$LOG_MONTH_DIR</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> -p <span class="token variable">$LOG_MONTH_DIR</span>
    <span class="token function">mv</span> <span class="token variable">$LOG_DIR</span>/<span class="token variable">$LOG_FILE</span> <span class="token variable">$LOG_MONTH_DIR</span>/<span class="token variable">\${LOG_FILE}</span>_<span class="token variable">\${YESTERDAY_TIME}</span>
<span class="token keyword">done</span>
 
<span class="token function">kill</span> -USR1 <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> $LOG_DIR/nginx.pid<span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="_14\u3001\u81EA\u52A8\u53D1\u5E03java\u9879\u76EE-tomcat" tabindex="-1"><a class="header-anchor" href="#_14\u3001\u81EA\u52A8\u53D1\u5E03java\u9879\u76EE-tomcat" aria-hidden="true">#</a> 14\u3001\u81EA\u52A8\u53D1\u5E03Java\u9879\u76EE\uFF08Tomcat\uFF09</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
 
<span class="token assign-left variable">TOMCAT_NAME</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token assign-left variable">TOMCAT_DIR</span><span class="token operator">=</span>/usr/local/<span class="token variable">$TOMCAT_NAME</span>
<span class="token assign-left variable">ROOT</span><span class="token operator">=</span><span class="token variable">$TOMCAT_DIR</span>/webapps/ROOT
 
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/backup
<span class="token assign-left variable">WORK_DIR</span><span class="token operator">=</span>/tmp
<span class="token assign-left variable">PROJECT_NAME</span><span class="token operator">=</span>tomcat-java-demo
 
<span class="token comment"># \u62C9\u53D6\u4EE3\u7801</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$WORK_DIR</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$PROJECT_NAME</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">git</span> clone https://github.com/lizhenliang/tomcat-java-demo
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
<span class="token keyword">else</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
   <span class="token function">git</span> pull
<span class="token keyword">fi</span>
 
<span class="token comment"># \u6784\u5EFA</span>
mvn clean package -Dmaven.test.skip<span class="token operator">=</span>true
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token builtin class-name">echo</span> <span class="token string">&quot;maven build failure!&quot;</span>
   <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
 
<span class="token comment"># \u90E8\u7F72</span>
<span class="token assign-left variable">TOMCAT_PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> -ef <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">&quot;<span class="token variable">$TOMCAT_NAME</span>&quot;</span> <span class="token operator">|</span><span class="token function">egrep</span> -v <span class="token string">&quot;grep|<span class="token variable">$$</span>&quot;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;NR==1{print $2}&#39;</span><span class="token variable">)</span></span>
<span class="token punctuation">[</span> -n <span class="token string">&quot;<span class="token variable">$TOMCAT_PID</span>&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">kill</span> -9 <span class="token variable">$TOMCAT_PID</span>
<span class="token punctuation">[</span> -d <span class="token variable">$ROOT</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> <span class="token variable">$ROOT</span> <span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${TOMCAT_NAME}</span>_ROOT<span class="token variable">$DATE</span>
<span class="token function">unzip</span> <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/target/*.war -d <span class="token variable">$ROOT</span>
<span class="token variable">$TOMCAT_DIR</span>/bin/startup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="_15\u3001\u81EA\u52A8\u53D1\u5E03php\u9879\u76EE" tabindex="-1"><a class="header-anchor" href="#_15\u3001\u81EA\u52A8\u53D1\u5E03php\u9879\u76EE" aria-hidden="true">#</a> 15\u3001\u81EA\u52A8\u53D1\u5E03PHP\u9879\u76EE</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
 
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
 
<span class="token assign-left variable">WWWROOT</span><span class="token operator">=</span>/usr/local/nginx/html/<span class="token variable">$1</span>
 
 
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/backup
<span class="token assign-left variable">WORK_DIR</span><span class="token operator">=</span>/tmp
<span class="token assign-left variable">PROJECT_NAME</span><span class="token operator">=</span>php-demo
 
 
<span class="token comment"># \u62C9\u53D6\u4EE3\u7801</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$WORK_DIR</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$PROJECT_NAME</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">git</span> clone https://github.com/lizhenliang/php-demo
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
<span class="token keyword">else</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
   <span class="token function">git</span> pull
<span class="token keyword">fi</span>
 
 
<span class="token comment"># \u90E8\u7F72</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$WWWROOT</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">mkdir</span> -p <span class="token variable">$WWWROOT</span>
   <span class="token function">rsync</span> -avz --exclude<span class="token operator">=</span>.git <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/* <span class="token variable">$WWWROOT</span>
<span class="token keyword">else</span>
   <span class="token function">rsync</span> -avz --exclude<span class="token operator">=</span>.git <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/* <span class="token variable">$WWWROOT</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br></div></div><h2 id="_16\u3001dos\u653B\u51FB\u9632\u8303-\u81EA\u52A8\u5C4F\u853D\u653B\u51FBip" tabindex="-1"><a class="header-anchor" href="#_16\u3001dos\u653B\u51FB\u9632\u8303-\u81EA\u52A8\u5C4F\u853D\u653B\u51FBip" aria-hidden="true">#</a> 16\u3001DOS\u653B\u51FB\u9632\u8303\uFF08\u81EA\u52A8\u5C4F\u853D\u653B\u51FBIP\uFF09</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%d/%b/%Y:%H:%M<span class="token variable">)</span></span>
<span class="token comment">#nginx\u65E5\u5FD7</span>
<span class="token assign-left variable">LOG_FILE</span><span class="token operator">=</span>/usr/local/nginx/logs/demo2.access.log
<span class="token comment">#\u5206\u6790ip\u7684\u8BBF\u95EE\u60C5\u51B5</span>
<span class="token assign-left variable">ABNORMAL_IP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">tail</span> -n5000 $LOG_FILE <span class="token operator">|</span><span class="token function">grep</span> $DATE <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{a[$1]++}END{for(i in a)if(a[i]&gt;10)print i}&#39;</span><span class="token variable">)</span></span>
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable">$ABNORMAL_IP</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span>iptables -vnL <span class="token operator">|</span><span class="token function">grep</span> -c <span class="token string">&quot;<span class="token variable">$IP</span>&quot;</span><span class="token variable">)</span></span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        iptables -I INPUT -s <span class="token variable">$IP</span> -j DROP
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&#39;%F_%T&#39;</span><span class="token variable">)</span></span> <span class="token variable">$IP</span>&quot;</span> <span class="token operator">&gt;&gt;</span> /tmp/drop_ip.log
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_17\u3001\u76EE\u5F55\u5165\u4FB5\u68C0\u6D4B\u4E0E\u544A\u8B66" tabindex="-1"><a class="header-anchor" href="#_17\u3001\u76EE\u5F55\u5165\u4FB5\u68C0\u6D4B\u4E0E\u544A\u8B66" aria-hidden="true">#</a> 17\u3001\u76EE\u5F55\u5165\u4FB5\u68C0\u6D4B\u4E0E\u544A\u8B66</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
 
<span class="token assign-left variable">MON_DIR</span><span class="token operator">=</span>/opt
inotifywait -mqr --format %f -e create <span class="token variable">$MON_DIR</span> <span class="token operator">|</span><span class="token punctuation">\\</span>
<span class="token keyword">while</span> <span class="token builtin class-name">read</span> files<span class="token punctuation">;</span> <span class="token keyword">do</span>
   <span class="token comment">#\u540C\u6B65\u6587\u4EF6</span>
   <span class="token function">rsync</span> -avz /opt /tmp/opt
  <span class="token comment">#\u68C0\u6D4B\u6587\u4EF6\u662F\u5426\u88AB\u4FEE\u6539</span>
   <span class="token comment">#echo &quot;$(date +&#39;%F %T&#39;) create $files&quot; | mail -s &quot;dir monitor&quot; xxx@163.com</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="_18\u3001dos\u653B\u51FB\u9632\u8303-\u81EA\u52A8\u5C4F\u853D\u653B\u51FBip" tabindex="-1"><a class="header-anchor" href="#_18\u3001dos\u653B\u51FB\u9632\u8303-\u81EA\u52A8\u5C4F\u853D\u653B\u51FBip" aria-hidden="true">#</a> 18\u3001Dos\u653B\u51FB\u9632\u8303\uFF08\u81EA\u52A8\u5C4F\u853D\u653B\u51FBIP\uFF09</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%d/%b/%Y:%H:%M<span class="token variable">)</span></span>
<span class="token assign-left variable">LOG_FILE</span><span class="token operator">=</span>/usr/local/nginx/logs/demo2.access.log
<span class="token assign-left variable">ABNORMAL_IP</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">tail</span> -n5000 $LOG_FILE <span class="token operator">|</span><span class="token function">grep</span> $DATE <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{a[$1]++}END{for(i in a)if(a[i]&gt;10)print i}&#39;</span><span class="token variable">)</span></span>
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable">$ABNORMAL_IP</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable"><span class="token variable">$(</span>iptables -vnL <span class="token operator">|</span><span class="token function">grep</span> -c <span class="token string">&quot;<span class="token variable">$IP</span>&quot;</span><span class="token variable">)</span></span> -eq <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        iptables -I INPUT -s <span class="token variable">$IP</span> -j DROP
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&#39;%F_%T&#39;</span><span class="token variable">)</span></span> <span class="token variable">$IP</span>&quot;</span> <span class="token operator">&gt;&gt;</span> /tmp/drop_ip.log
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><h2 id="_19\u3001linux\u7CFB\u7EDF\u53D1\u9001\u544A\u8B66\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_19\u3001linux\u7CFB\u7EDF\u53D1\u9001\u544A\u8B66\u811A\u672C" aria-hidden="true">#</a> 19\u3001Linux\u7CFB\u7EDF\u53D1\u9001\u544A\u8B66\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment"># yum install mailx</span>
<span class="token comment"># vi /etc/mail.rc  </span>
<span class="token builtin class-name">set</span> <span class="token assign-left variable">from</span><span class="token operator">=</span>baojingtongzhi@163.com <span class="token assign-left variable">smtp</span><span class="token operator">=</span>smtp.163.com
<span class="token builtin class-name">set</span> smtp-auth-user<span class="token operator">=</span>baojingtongzhi@163.com smtp-auth-password<span class="token operator">=</span><span class="token number">123456</span>
<span class="token builtin class-name">set</span> smtp-auth<span class="token operator">=</span>login
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="_20\u3001mysql\u6570\u636E\u5E93\u5907\u4EFD\u5355\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#_20\u3001mysql\u6570\u636E\u5E93\u5907\u4EFD\u5355\u5FAA\u73AF" aria-hidden="true">#</a> 20\u3001MySQL\u6570\u636E\u5E93\u5907\u4EFD\u5355\u5FAA\u73AF</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%H-%M-%S<span class="token variable">)</span></span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>backup
<span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/db_backup
<span class="token assign-left variable">DB_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS -s -e <span class="token string">&quot;show databases;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">egrep</span> -v <span class="token string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span><span class="token variable">)</span></span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">DB</span> <span class="token keyword">in</span> <span class="token variable">$DB_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">BACKUP_NAME</span><span class="token operator">=</span><span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${DB}</span>_<span class="token variable">\${DATE}</span>.sql
    <span class="token keyword">if</span> <span class="token operator">!</span> mysqldump -h<span class="token variable">$HOST</span> -u<span class="token environment constant">$USER</span> -p<span class="token variable">$PASS</span> -B <span class="token variable">$DB</span> <span class="token operator">&gt;</span> <span class="token variable">$BACKUP_NAME</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$BACKUP_NAME</span> \u5907\u4EFD\u5931\u8D25!&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="_21\u3001mysql\u6570\u636E\u5E93\u5907\u4EFD\u591A\u5FAA\u73AF" tabindex="-1"><a class="header-anchor" href="#_21\u3001mysql\u6570\u636E\u5E93\u5907\u4EFD\u591A\u5FAA\u73AF" aria-hidden="true">#</a> 21\u3001MySQL\u6570\u636E\u5E93\u5907\u4EFD\u591A\u5FAA\u73AF</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%H-%M-%S<span class="token variable">)</span></span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>backup
<span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/db_backup
<span class="token assign-left variable">DB_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS -s -e <span class="token string">&quot;show databases;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">egrep</span> -v <span class="token string">&quot;Database|information_schema|mysql|performance_schema|sys&quot;</span><span class="token variable">)</span></span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">DB</span> <span class="token keyword">in</span> <span class="token variable">$DB_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">BACKUP_DB_DIR</span><span class="token operator">=</span><span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${DB}</span>_<span class="token variable">\${DATE}</span>
    <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$BACKUP_DB_DIR</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> -p <span class="token variable">$BACKUP_DB_DIR</span> <span class="token operator">&amp;&gt;</span>/dev/null
    <span class="token assign-left variable">TABLE_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASS -s -e <span class="token string">&quot;use <span class="token variable">$DB</span>;show tables;&quot;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">TABLE</span> <span class="token keyword">in</span> <span class="token variable">$TABLE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">BACKUP_NAME</span><span class="token operator">=</span><span class="token variable">$BACKUP_DB_DIR</span>/<span class="token variable">\${TABLE}</span>.sql 
        <span class="token keyword">if</span> <span class="token operator">!</span> mysqldump -h<span class="token variable">$HOST</span> -u<span class="token environment constant">$USER</span> -p<span class="token variable">$PASS</span> <span class="token variable">$DB</span> <span class="token variable">$TABLE</span> <span class="token operator">&gt;</span> <span class="token variable">$BACKUP_NAME</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$BACKUP_NAME</span> \u5907\u4EFD\u5931\u8D25!&quot;</span>
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><h2 id="_22\u3001nginx-\u8BBF\u95EE\u8BBF\u95EE\u65E5\u5FD7\u6309\u5929\u5207\u5272" tabindex="-1"><a class="header-anchor" href="#_22\u3001nginx-\u8BBF\u95EE\u8BBF\u95EE\u65E5\u5FD7\u6309\u5929\u5207\u5272" aria-hidden="true">#</a> 22\u3001Nginx \u8BBF\u95EE\u8BBF\u95EE\u65E5\u5FD7\u6309\u5929\u5207\u5272</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">LOG_DIR</span><span class="token operator">=</span>/usr/local/nginx/logs
<span class="token assign-left variable">YESTERDAY_TIME</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> -d <span class="token string">&quot;yesterday&quot;</span> +%F<span class="token variable">)</span></span>
<span class="token assign-left variable">LOG_MONTH_DIR</span><span class="token operator">=</span><span class="token variable">$LOG_DIR</span>/<span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +<span class="token string">&quot;%Y-%m&quot;</span><span class="token variable">)</span></span>
<span class="token assign-left variable">LOG_FILE_LIST</span><span class="token operator">=</span><span class="token string">&quot;default.access.log&quot;</span>
 
<span class="token keyword">for</span> <span class="token for-or-select variable">LOG_FILE</span> <span class="token keyword">in</span> <span class="token variable">$LOG_FILE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$LOG_MONTH_DIR</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mkdir</span> -p <span class="token variable">$LOG_MONTH_DIR</span>
    <span class="token function">mv</span> <span class="token variable">$LOG_DIR</span>/<span class="token variable">$LOG_FILE</span> <span class="token variable">$LOG_MONTH_DIR</span>/<span class="token variable">\${LOG_FILE}</span>_<span class="token variable">\${YESTERDAY_TIME}</span>
<span class="token keyword">done</span>
 
<span class="token function">kill</span> -USR1 <span class="token variable"><span class="token variable">$(</span><span class="token function">cat</span> /var/run/nginx.pid<span class="token variable">)</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_23\u3001nginx\u8BBF\u95EE\u65E5\u5FD7\u5206\u6790\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_23\u3001nginx\u8BBF\u95EE\u65E5\u5FD7\u5206\u6790\u811A\u672C" aria-hidden="true">#</a> 23\u3001Nginx\u8BBF\u95EE\u65E5\u5FD7\u5206\u6790\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># \u65E5\u5FD7\u683C\u5F0F: $remote_addr - $remote_user [$time_local] &quot;$request&quot; $status $body_bytes_sent &quot;$http_referer&quot; &quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;</span>
<span class="token assign-left variable">LOG_FILE</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;\u7EDF\u8BA1\u8BBF\u95EE\u6700\u591A\u768410\u4E2AIP&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$1]++}END{print &quot;UV:&quot;,length(a);for(v in a)print v,a[v]}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> -k2 -nr <span class="token operator">|</span><span class="token function">head</span> -10
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;\u7EDF\u8BA1\u65F6\u95F4\u6BB5\u8BBF\u95EE\u6700\u591A\u7684IP&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;$4&gt;=&quot;[01/Dec/2018:13:20:25&quot; &amp;&amp; $4&lt;=&quot;[27/Nov/2018:16:20:49&quot;{a[$1]++}END{for(v in a)print v,a[v]}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> -k2 -nr<span class="token operator">|</span><span class="token function">head</span> -10
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;\u7EDF\u8BA1\u8BBF\u95EE\u6700\u591A\u768410\u4E2A\u9875\u9762&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$7]++}END{print &quot;PV:&quot;,length(a);for(v in a){if(a[v]&gt;10)print v,a[v]}}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> -k2 -nr
<span class="token builtin class-name">echo</span> <span class="token string">&quot;----------------------&quot;</span>
 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;\u7EDF\u8BA1\u8BBF\u95EE\u9875\u9762\u72B6\u6001\u7801\u6570\u91CF&quot;</span>
<span class="token function">awk</span> <span class="token string">&#39;{a[$7&quot; &quot;$9]++}END{for(v in a){if(a[v]&gt;5)print v,a[v]}}&#39;</span> <span class="token variable">$LOG_FILE</span> <span class="token operator">|</span><span class="token function">sort</span> -k3 -nr
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_24\u3001\u67E5\u770B\u7F51\u5361\u5B9E\u65F6\u6D41\u91CF\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_24\u3001\u67E5\u770B\u7F51\u5361\u5B9E\u65F6\u6D41\u91CF\u811A\u672C" aria-hidden="true">#</a> 24\u3001\u67E5\u770B\u7F51\u5361\u5B9E\u65F6\u6D41\u91CF\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">NIC</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot; In ------ Out&quot;</span>
<span class="token keyword">while</span> <span class="token boolean">true</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">OLD_IN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;$0~&quot;&#39;</span>$NIC<span class="token string">&#39;&quot;{print $2}&#39;</span> /proc/net/dev<span class="token variable">)</span></span>
    <span class="token assign-left variable">OLD_OUT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;$0~&quot;&#39;</span>$NIC<span class="token string">&#39;&quot;{print $10}&#39;</span> /proc/net/dev<span class="token variable">)</span></span>
    <span class="token function">sleep</span> <span class="token number">1</span>
    <span class="token assign-left variable">NEW_IN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span>  <span class="token string">&#39;$0~&quot;&#39;</span>$NIC<span class="token string">&#39;&quot;{print $2}&#39;</span> /proc/net/dev<span class="token variable">)</span></span>
    <span class="token assign-left variable">NEW_OUT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;$0~&quot;&#39;</span>$NIC<span class="token string">&#39;&quot;{print $10}&#39;</span> /proc/net/dev<span class="token variable">)</span></span>
    <span class="token assign-left variable">IN</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%.1f%s&quot;</span> &quot;<span class="token punctuation">$((</span><span class="token punctuation">(</span>$NEW_IN-$OLD_IN<span class="token punctuation">)</span>/1024<span class="token variable">)</span></span><span class="token punctuation">)</span><span class="token string">&quot; &quot;</span>KB/s<span class="token string">&quot;)
    OUT=<span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">printf</span> <span class="token string">&quot;%.1f%s&quot;</span> &quot;<span class="token punctuation">$((</span><span class="token punctuation">(</span>$NEW_OUT-$OLD_OUT<span class="token punctuation">)</span>/1024<span class="token variable">)</span></span>)&quot;</span> <span class="token string">&quot;KB/s&quot;</span><span class="token punctuation">)</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$IN</span> <span class="token variable">$OUT</span>&quot;</span>
    <span class="token function">sleep</span> <span class="token number">1</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="_25\u3001\u670D\u52A1\u5668\u7CFB\u7EDF\u914D\u7F6E\u521D\u59CB\u5316\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_25\u3001\u670D\u52A1\u5668\u7CFB\u7EDF\u914D\u7F6E\u521D\u59CB\u5316\u811A\u672C" aria-hidden="true">#</a> 25\u3001\u670D\u52A1\u5668\u7CFB\u7EDF\u914D\u7F6E\u521D\u59CB\u5316\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token comment">#/bin/bash</span>
<span class="token comment"># \u8BBE\u7F6E\u65F6\u533A\u5E76\u540C\u6B65\u65F6\u95F4</span>
<span class="token function">ln</span> -s /usr/share/zoneinfo/Asia/Shanghai /etc/localtime
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">crontab</span> -l <span class="token operator">|</span><span class="token function">grep</span> ntpdate <span class="token operator">&amp;&gt;</span>/dev/null <span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token punctuation">(</span>echo <span class="token string">&quot;* 1 * * * ntpdate time.windows.com &gt;/dev/null 2&gt;&amp;1&quot;</span><span class="token punctuation">;</span><span class="token function">crontab</span> -l<span class="token punctuation">)</span> <span class="token operator">|</span><span class="token function">crontab</span>
<span class="token keyword">fi</span>
 
<span class="token comment"># \u7981\u7528selinux</span>
<span class="token function">sed</span> -i <span class="token string">&#39;/SELINUX/{s/permissive/disabled/}&#39;</span> /etc/selinux/config
 
<span class="token comment"># \u5173\u95ED\u9632\u706B\u5899</span>
<span class="token keyword">if</span> <span class="token function">egrep</span> <span class="token string">&quot;7.[0-9]&quot;</span> /etc/redhat-release <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    systemctl stop firewalld
    systemctl disable firewalld
<span class="token keyword">elif</span> <span class="token function">egrep</span> <span class="token string">&quot;6.[0-9]&quot;</span> /etc/redhat-release <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">service</span> iptables stop
    <span class="token function">chkconfig</span> iptables off
<span class="token keyword">fi</span>
 
<span class="token comment"># \u5386\u53F2\u547D\u4EE4\u663E\u793A\u64CD\u4F5C\u65F6\u95F4</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> HISTTIMEFORMAT /etc/bashrc<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;export HISTTIMEFORMAT=&quot;%F %T \`whoami\` &quot;&#39;</span> <span class="token operator">&gt;&gt;</span> /etc/bashrc
<span class="token keyword">fi</span>
 
<span class="token comment"># SSH\u8D85\u65F6\u65F6\u95F4</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> <span class="token string">&quot;TMOUT=600&quot;</span> /etc/profile <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;export TMOUT=600&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/profile
<span class="token keyword">fi</span>
 
<span class="token comment"># \u7981\u6B62root\u8FDC\u7A0B\u767B\u5F55</span>
<span class="token function">sed</span> -i <span class="token string">&#39;s/#PermitRootLogin yes/PermitRootLogin no/&#39;</span> /etc/ssh/sshd_config
 
<span class="token comment"># \u7981\u6B62\u5B9A\u65F6\u4EFB\u52A1\u5411\u53D1\u9001\u90AE\u4EF6</span>
<span class="token function">sed</span> -i <span class="token string">&#39;s/^MAILTO=root/MAILTO=&quot;&quot;/&#39;</span> /etc/crontab
 
<span class="token comment"># \u8BBE\u7F6E\u6700\u5927\u6253\u5F00\u6587\u4EF6\u6570</span>
<span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">grep</span> <span class="token string">&quot;* soft nofile 65535&quot;</span> /etc/security/limits.conf <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
    <span class="token function">cat</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf <span class="token operator">&lt;&lt;</span> <span class="token string">EOF
    * soft nofile 65535
    * hard nofile 65535
    EOF
fi
 
# \u7CFB\u7EDF\u5185\u6838\u4F18\u5316
cat &gt;&gt; /etc/sysctl.conf &lt;&lt; EOF
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_max_tw_buckets = 20480
net.ipv4.tcp_max_syn_backlog = 20480
net.core.netdev_max_backlog = 262144
net.ipv4.tcp_fin_timeout = 20  
EOF</span>
 
<span class="token comment"># \u51CF\u5C11SWAP\u4F7F\u7528</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">&gt;</span> /proc/sys/vm/swappiness
 
<span class="token comment"># \u5B89\u88C5\u7CFB\u7EDF\u6027\u80FD\u5206\u6790\u5DE5\u5177\u53CA\u5176\u4ED6</span>
yum <span class="token function">install</span> gcc <span class="token function">make</span> autoconf <span class="token function">vim</span> sysstat net-tools iostat iftop iotp lrzsz -y
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br></div></div><h2 id="_26\u3001\u76D1\u63A7100\u53F0\u670D\u52A1\u5668\u78C1\u76D8\u5229\u7528\u7387\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_26\u3001\u76D1\u63A7100\u53F0\u670D\u52A1\u5668\u78C1\u76D8\u5229\u7528\u7387\u811A\u672C" aria-hidden="true">#</a> 26\u3001\u76D1\u63A7100\u53F0\u670D\u52A1\u5668\u78C1\u76D8\u5229\u7528\u7387\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">HOST_INFO</span><span class="token operator">=</span>host.info
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^[^#]/{print $1}&#39;</span> $HOST_INFO<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $2}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $3}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">TMP_FILE</span><span class="token operator">=</span>/tmp/disk.tmp
    <span class="token function">ssh</span> -p <span class="token variable">$PORT</span> <span class="token environment constant">$USER</span>@<span class="token variable">$IP</span> <span class="token string">&#39;df -h&#39;</span> <span class="token operator">&gt;</span> <span class="token variable">$TMP_FILE</span>
    <span class="token assign-left variable">USE_RATE_LIST</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;BEGIN{OFS=&quot;=&quot;}/^\\/dev/{print $NF,int($5)}&#39;</span> $TMP_FILE<span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">USE_RATE</span> <span class="token keyword">in</span> <span class="token variable">$USE_RATE_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">PART_NAME</span><span class="token operator">=</span><span class="token variable">\${USE_RATE<span class="token operator">%</span>=*}</span>
        <span class="token assign-left variable">USE_RATE</span><span class="token operator">=</span><span class="token variable">\${USE_RATE<span class="token operator">#</span>*=}</span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$USE_RATE</span> -ge <span class="token number">80</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;Warning: <span class="token variable">$PART_NAME</span> Partition usage <span class="token variable">$USE_RATE</span>%!&quot;</span>
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br></div></div><h2 id="_27\u3001\u76D1\u63A7mysql\u4E3B\u4ECE\u540C\u6B65\u72B6\u6001\u662F\u5426\u5F02\u5E38\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_27\u3001\u76D1\u63A7mysql\u4E3B\u4ECE\u540C\u6B65\u72B6\u6001\u662F\u5426\u5F02\u5E38\u811A\u672C" aria-hidden="true">#</a> 27\u3001\u76D1\u63A7MySQL\u4E3B\u4ECE\u540C\u6B65\u72B6\u6001\u662F\u5426\u5F02\u5E38\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash  </span>
<span class="token assign-left variable">HOST</span><span class="token operator">=</span>localhost
<span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span>root
<span class="token assign-left variable">PASSWD</span><span class="token operator">=</span><span class="token number">123</span>.com
<span class="token assign-left variable">IO_SQL_STATUS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>mysql -h$HOST -u<span class="token environment constant">$USER</span> -p$PASSWD -e <span class="token string">&#39;show slave status\\G&#39;</span> <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span>/dev/null <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;/Slave_.*_Running:/{print $1$2}&#39;</span><span class="token variable">)</span></span>
<span class="token keyword">for</span> <span class="token for-or-select variable">i</span> <span class="token keyword">in</span> <span class="token variable">$IO_SQL_STATUS</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">THREAD_STATUS_NAME</span><span class="token operator">=</span><span class="token variable">\${i<span class="token operator">%</span><span class="token operator">:</span>*}</span>
    <span class="token assign-left variable">THREAD_STATUS</span><span class="token operator">=</span><span class="token variable">\${i<span class="token operator">#</span>*<span class="token operator">:</span>}</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">&quot;<span class="token variable">$THREAD_STATUS</span>&quot;</span> <span class="token operator">!=</span> <span class="token string">&quot;Yes&quot;</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Error: MySQL Master-Slave <span class="token variable">$THREAD_STATUS_NAME</span> status is <span class="token variable">$THREAD_STATUS</span>!&quot;</span> <span class="token operator">|</span>mail -s <span class="token string">&quot;Master-Slave Staus&quot;</span> <span class="token punctuation">[</span>url<span class="token operator">=</span>mailto:xxx@163.com<span class="token punctuation">]</span>xxx@163.com<span class="token punctuation">[</span>/url<span class="token punctuation">]</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><h2 id="_28\u3001\u76EE\u5F55\u6587\u4EF6\u53D8\u5316\u76D1\u63A7\u548C\u5B9E\u65F6\u6587\u4EF6\u540C\u6B65" tabindex="-1"><a class="header-anchor" href="#_28\u3001\u76EE\u5F55\u6587\u4EF6\u53D8\u5316\u76D1\u63A7\u548C\u5B9E\u65F6\u6587\u4EF6\u540C\u6B65" aria-hidden="true">#</a> 28\u3001\u76EE\u5F55\u6587\u4EF6\u53D8\u5316\u76D1\u63A7\u548C\u5B9E\u65F6\u6587\u4EF6\u540C\u6B65</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
 
<span class="token assign-left variable">MON_DIR</span><span class="token operator">=</span>/opt
inotifywait -mqr --format %f -e create <span class="token variable">$MON_DIR</span> <span class="token operator">|</span><span class="token punctuation">\\</span>
<span class="token keyword">while</span> <span class="token builtin class-name">read</span> files<span class="token punctuation">;</span> <span class="token keyword">do</span>
   <span class="token function">rsync</span> -avz /opt /tmp/opt
   <span class="token comment">#echo &quot;$(date +&#39;%F %T&#39;) create $files&quot; | mail -s &quot;dir monitor&quot; [url=mailto:xxx@163.com]xxx@163.com[/url]</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="_29\u3001\u6279\u91CF\u521B\u5EFA100\u7528\u6237\u5E76\u8BBE\u7F6E\u5BC6\u7801\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_29\u3001\u6279\u91CF\u521B\u5EFA100\u7528\u6237\u5E76\u8BBE\u7F6E\u5BC6\u7801\u811A\u672C" aria-hidden="true">#</a> 29\u3001\u6279\u91CF\u521B\u5EFA100\u7528\u6237\u5E76\u8BBE\u7F6E\u5BC6\u7801\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable">$@</span>
<span class="token assign-left variable">USER_FILE</span><span class="token operator">=</span>user.txt
<span class="token keyword">for</span> <span class="token for-or-select variable">USER</span> <span class="token keyword">in</span> <span class="token variable">$USER_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token keyword">if</span> <span class="token operator">!</span> <span class="token function">id</span> <span class="token environment constant">$USER</span> <span class="token operator">&amp;&gt;</span>/dev/null<span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token builtin class-name">echo</span> <span class="token environment constant">$RANDOM</span> <span class="token operator">|</span>md5sum <span class="token operator">|</span><span class="token function">cut</span> -c <span class="token number">1</span>-8<span class="token variable">)</span></span>
        <span class="token function">useradd</span> <span class="token environment constant">$USER</span>
        <span class="token builtin class-name">echo</span> <span class="token variable">$PASS</span> <span class="token operator">|</span><span class="token function">passwd</span> --stdin <span class="token environment constant">$USER</span> <span class="token operator">&amp;&gt;</span>/dev/null
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span>   <span class="token variable">$PASS</span>&quot;</span> <span class="token operator">&gt;&gt;</span> <span class="token variable">$USER_FILE</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span> User create successful.&quot;</span>
    <span class="token keyword">else</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token environment constant">$USER</span> User already exists!&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="_30\u3001\u6279\u91CF\u68C0\u6D4B\u7F51\u7AD9\u662F\u5426\u5F02\u5E38\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_30\u3001\u6279\u91CF\u68C0\u6D4B\u7F51\u7AD9\u662F\u5426\u5F02\u5E38\u811A\u672C" aria-hidden="true">#</a> 30\u3001\u6279\u91CF\u68C0\u6D4B\u7F51\u7AD9\u662F\u5426\u5F02\u5E38\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash  </span>
<span class="token assign-left variable">URL_LIST</span><span class="token operator">=</span><span class="token string">&quot;www.baidu.com [url=http://www.ctnrs.com]www.ctnrs.com[/url]&quot;</span>
<span class="token keyword">for</span> <span class="token for-or-select variable">URL</span> <span class="token keyword">in</span> <span class="token variable">$URL_LIST</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable">FAIL_COUNT</span><span class="token operator">=</span><span class="token number">0</span>
    <span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span><span class="token number">3</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">))</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">HTTP_CODE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">curl</span> -o /dev/null --connect-timeout <span class="token number">3</span> -s -w <span class="token string">&quot;%{http_code}&quot;</span> $URL<span class="token variable">)</span></span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$HTTP_CODE</span> -eq <span class="token number">200</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$URL</span> OK&quot;</span>
            <span class="token builtin class-name">break</span>
        <span class="token keyword">else</span>
            <span class="token builtin class-name">echo</span> <span class="token string">&quot;<span class="token variable">$URL</span> retry <span class="token variable">$FAIL_COUNT</span>&quot;</span>
            <span class="token builtin class-name">let</span> FAIL_COUNT++
        <span class="token keyword">fi</span>
    <span class="token keyword">done</span>
    <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$FAIL_COUNT</span> -eq <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;Warning: <span class="token variable">$URL</span> Access failure!&quot;</span>
    <span class="token keyword">fi</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br></div></div><h2 id="_31\u3001\u6279\u91CF\u4E3B\u673A\u8FDC\u7A0B\u6267\u884C\u547D\u4EE4\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_31\u3001\u6279\u91CF\u4E3B\u673A\u8FDC\u7A0B\u6267\u884C\u547D\u4EE4\u811A\u672C" aria-hidden="true">#</a> 31\u3001\u6279\u91CF\u4E3B\u673A\u8FDC\u7A0B\u6267\u884C\u547D\u4EE4\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">COMMAND</span><span class="token operator">=</span><span class="token variable">$*</span>
<span class="token assign-left variable">HOST_INFO</span><span class="token operator">=</span>host.info
<span class="token keyword">for</span> <span class="token for-or-select variable">IP</span> <span class="token keyword">in</span> <span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> <span class="token string">&#39;/^[^#]/{print $1}&#39;</span> $HOST_INFO<span class="token variable">)</span></span><span class="token punctuation">;</span> <span class="token keyword">do</span>
    <span class="token assign-left variable"><span class="token environment constant">USER</span></span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $2}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PORT</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $3}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token assign-left variable">PASS</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">awk</span> -v <span class="token assign-left variable">ip</span><span class="token operator">=</span>$IP <span class="token string">&#39;ip==$1{print $4}&#39;</span> $HOST_INFO<span class="token variable">)</span></span>
    <span class="token function">expect</span> -c <span class="token string">&quot;
       spawn ssh -p <span class="token variable">$PORT</span> <span class="token environment constant">$USER</span>@<span class="token variable">$IP</span>
       expect {
          <span class="token entity" title="\\&quot;">\\&quot;</span>(yes/no)<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span>yes<span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
          <span class="token entity" title="\\&quot;">\\&quot;</span>password:<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$PASS</span><span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
          <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token environment constant">$USER</span>@*<span class="token entity" title="\\&quot;">\\&quot;</span> {send <span class="token entity" title="\\&quot;">\\&quot;</span><span class="token variable">$COMMAND</span><span class="token entity" title="\\r">\\r</span> exit<span class="token entity" title="\\r">\\r</span><span class="token entity" title="\\&quot;">\\&quot;</span>; exp_continue}
       }
    &quot;</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;-------------------&quot;</span>
<span class="token keyword">done</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br></div></div><h2 id="_32\u3001\u4E00\u952E\u90E8\u7F72lnmp\u7F51\u7AD9\u5E73\u53F0\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_32\u3001\u4E00\u952E\u90E8\u7F72lnmp\u7F51\u7AD9\u5E73\u53F0\u811A\u672C" aria-hidden="true">#</a> 32\u3001\u4E00\u952E\u90E8\u7F72LNMP\u7F51\u7AD9\u5E73\u53F0\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">NGINX_V</span><span class="token operator">=</span><span class="token number">1.15</span>.6
<span class="token assign-left variable">PHP_V</span><span class="token operator">=</span><span class="token number">5.6</span>.36
<span class="token assign-left variable">TMP_DIR</span><span class="token operator">=</span>/tmp
 
<span class="token assign-left variable">INSTALL_DIR</span><span class="token operator">=</span>/usr/local
 
<span class="token assign-left variable">PWD_C</span><span class="token operator">=</span><span class="token environment constant">$PWD</span>
 
<span class="token builtin class-name">echo</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;<span class="token entity" title="\\t">\\t</span>Menu<span class="token entity" title="\\n">\\n</span>&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;1. Install Nginx&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;2. Install PHP&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;3. Install MySQL&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;4. Deploy LNMP&quot;</span>
<span class="token builtin class-name">echo</span> -e <span class="token string">&quot;9. Quit&quot;</span>
 
<span class="token keyword">function</span> <span class="token function-name function">command_status_check</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
                <span class="token builtin class-name">echo</span> <span class="token variable">$1</span>
                <span class="token builtin class-name">exit</span>
        <span class="token keyword">fi</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">install_nginx</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token builtin class-name">cd</span> <span class="token variable">$TMP_DIR</span>
    yum <span class="token function">install</span> -y gcc gcc-c++ <span class="token function">make</span> openssl-devel pcre-devel <span class="token function">wget</span>
    <span class="token function">wget</span> <span class="token punctuation">[</span>url<span class="token operator">=</span>http://nginx.org/download/nginx-<span class="token punctuation">]</span>http://nginx.org/download/nginx-<span class="token punctuation">[</span>/url<span class="token punctuation">]</span><span class="token variable">\${NGINX_V}</span>.tar.gz
    <span class="token function">tar</span> zxf nginx-<span class="token variable">\${NGINX_V}</span>.tar.gz
    <span class="token builtin class-name">cd</span> nginx-<span class="token variable">\${NGINX_V}</span>
    ./configure --prefix<span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/nginx <span class="token punctuation">\\</span>
    --with-http_ssl_module <span class="token punctuation">\\</span>
    --with-http_stub_status_module <span class="token punctuation">\\</span>
    --with-stream
    command_status_check <span class="token string">&quot;Nginx - \u5E73\u53F0\u73AF\u5883\u68C0\u67E5\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">make</span> -j <span class="token number">4</span> 
    command_status_check <span class="token string">&quot;Nginx - \u7F16\u8BD1\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">make</span> <span class="token function">install</span>
    command_status_check <span class="token string">&quot;Nginx - \u5B89\u88C5\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">mkdir</span> -p <span class="token variable">$INSTALL_DIR</span>/nginx/conf/vhost
    <span class="token builtin class-name">alias</span> <span class="token assign-left variable">cp</span><span class="token operator">=</span>cp <span class="token punctuation">;</span> <span class="token function">cp</span> -rf <span class="token variable">$PWD_C</span>/nginx.conf <span class="token variable">$INSTALL_DIR</span>/nginx/conf
    <span class="token function">rm</span> -rf <span class="token variable">$INSTALL_DIR</span>/nginx/html/*
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;ok&quot;</span> <span class="token operator">&gt;</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/status.html
    <span class="token builtin class-name">echo</span> <span class="token string">&#39;&lt;?php echo &quot;ok&quot;?&gt;&#39;</span> <span class="token operator">&gt;</span> <span class="token variable">$INSTALL_DIR</span>/nginx/html/status.php
    <span class="token variable">$INSTALL_DIR</span>/nginx/sbin/nginx
    command_status_check <span class="token string">&quot;Nginx - \u542F\u52A8\u5931\u8D25\uFF01&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">install_php</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token builtin class-name">cd</span> <span class="token variable">$TMP_DIR</span>
    yum <span class="token function">install</span> -y gcc gcc-c++ <span class="token function">make</span> gd-devel libxml2-devel <span class="token punctuation">\\</span>
        libcurl-devel libjpeg-devel libpng-devel openssl-devel <span class="token punctuation">\\</span>
        libmcrypt-devel libxslt-devel libtidy-devel
    <span class="token function">wget</span> <span class="token punctuation">[</span>url<span class="token operator">=</span>http://docs.php.net/distributions/php-<span class="token punctuation">]</span>http://docs.php.net/distributions/php-<span class="token punctuation">[</span>/url<span class="token punctuation">]</span><span class="token variable">\${PHP_V}</span>.tar.gz
    <span class="token function">tar</span> zxf php-<span class="token variable">\${PHP_V}</span>.tar.gz
    <span class="token builtin class-name">cd</span> php-<span class="token variable">\${PHP_V}</span>
    ./configure --prefix<span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/php <span class="token punctuation">\\</span>
    --with-config-file-path<span class="token operator">=</span><span class="token variable">$INSTALL_DIR</span>/php/etc <span class="token punctuation">\\</span>
    --enable-fpm --enable-opcache <span class="token punctuation">\\</span>
    --with-mysql --with-mysqli --with-pdo-mysql <span class="token punctuation">\\</span>
    --with-openssl --with-zlib --with-curl --with-gd <span class="token punctuation">\\</span>
    --with-jpeg-dir --with-png-dir --with-freetype-dir <span class="token punctuation">\\</span>
    --enable-mbstring --enable-hash
    command_status_check <span class="token string">&quot;PHP - \u5E73\u53F0\u73AF\u5883\u68C0\u67E5\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">make</span> -j <span class="token number">4</span> 
    command_status_check <span class="token string">&quot;PHP - \u7F16\u8BD1\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">make</span> <span class="token function">install</span>
    command_status_check <span class="token string">&quot;PHP - \u5B89\u88C5\u5931\u8D25\uFF01&quot;</span>
    <span class="token function">cp</span> php.ini-production <span class="token variable">$INSTALL_DIR</span>/php/etc/php.ini
    <span class="token function">cp</span> sapi/fpm/php-fpm.conf <span class="token variable">$INSTALL_DIR</span>/php/etc/php-fpm.conf
    <span class="token function">cp</span> sapi/fpm/init.d.php-fpm /etc/init.d/php-fpm
    <span class="token function">chmod</span> +x /etc/init.d/php-fpm
    /etc/init.d/php-fpm start
    command_status_check <span class="token string">&quot;PHP - \u542F\u52A8\u5931\u8D25\uFF01&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token builtin class-name">read</span> -p <span class="token string">&quot;\u8BF7\u8F93\u5165\u7F16\u53F7\uFF1A&quot;</span> number
<span class="token keyword">case</span> <span class="token variable">$number</span> <span class="token keyword">in</span>
    <span class="token number">1</span><span class="token punctuation">)</span>
        install_nginx<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">2</span><span class="token punctuation">)</span>
        install_php<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">3</span><span class="token punctuation">)</span>
        install_mysql<span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">4</span><span class="token punctuation">)</span>
        install_nginx
        install_php
        <span class="token punctuation">;</span><span class="token punctuation">;</span>
    <span class="token number">9</span><span class="token punctuation">)</span>
        <span class="token builtin class-name">exit</span><span class="token punctuation">;</span><span class="token punctuation">;</span>
<span class="token keyword">esac</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br><span class="line-number">49</span><br><span class="line-number">50</span><br><span class="line-number">51</span><br><span class="line-number">52</span><br><span class="line-number">53</span><br><span class="line-number">54</span><br><span class="line-number">55</span><br><span class="line-number">56</span><br><span class="line-number">57</span><br><span class="line-number">58</span><br><span class="line-number">59</span><br><span class="line-number">60</span><br><span class="line-number">61</span><br><span class="line-number">62</span><br><span class="line-number">63</span><br><span class="line-number">64</span><br><span class="line-number">65</span><br><span class="line-number">66</span><br><span class="line-number">67</span><br><span class="line-number">68</span><br><span class="line-number">69</span><br><span class="line-number">70</span><br><span class="line-number">71</span><br><span class="line-number">72</span><br><span class="line-number">73</span><br><span class="line-number">74</span><br><span class="line-number">75</span><br><span class="line-number">76</span><br><span class="line-number">77</span><br><span class="line-number">78</span><br><span class="line-number">79</span><br><span class="line-number">80</span><br><span class="line-number">81</span><br><span class="line-number">82</span><br><span class="line-number">83</span><br><span class="line-number">84</span><br><span class="line-number">85</span><br><span class="line-number">86</span><br><span class="line-number">87</span><br><span class="line-number">88</span><br><span class="line-number">89</span><br><span class="line-number">90</span><br><span class="line-number">91</span><br></div></div><h2 id="_33\u3001\u4E00\u952E\u67E5\u770B\u670D\u52A1\u5668\u8D44\u6E90\u5229\u7528\u7387" tabindex="-1"><a class="header-anchor" href="#_33\u3001\u4E00\u952E\u67E5\u770B\u670D\u52A1\u5668\u8D44\u6E90\u5229\u7528\u7387" aria-hidden="true">#</a> 33\u3001\u4E00\u952E\u67E5\u770B\u670D\u52A1\u5668\u8D44\u6E90\u5229\u7528\u7387</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token keyword">function</span> <span class="token function-name function">cpu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">NUM</span><span class="token operator">=</span><span class="token number">1</span>
    <span class="token keyword">while</span> <span class="token punctuation">[</span> <span class="token variable">$NUM</span> -le <span class="token number">3</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">util</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">vmstat</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print 100-$15&quot;%&quot;}&#39;</span><span class="token variable">\`</span></span>
        <span class="token assign-left variable">user</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">vmstat</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $13&quot;%&quot;}&#39;</span><span class="token variable">\`</span></span>
        <span class="token assign-left variable">sys</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">vmstat</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $14&quot;%&quot;}&#39;</span><span class="token variable">\`</span></span>
        <span class="token assign-left variable">iowait</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">vmstat</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==3)print $16&quot;%&quot;}&#39;</span><span class="token variable">\`</span></span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;CPU - \u4F7F\u7528\u7387: <span class="token variable">$util</span> , \u7B49\u5F85\u78C1\u76D8IO\u54CD\u5E94\u4F7F\u7528\u7387: <span class="token variable">$iowait</span>&quot;</span>
        <span class="token builtin class-name">let</span> NUM++
        <span class="token function">sleep</span> <span class="token number">1</span>
    <span class="token keyword">done</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">memory</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">total</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> -m <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2)printf &quot;%.1f&quot;,$2/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> -m <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2) printf &quot;%.1f&quot;,($2-$NF)/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token assign-left variable">available</span><span class="token operator">=</span><span class="token variable"><span class="token variable">\`</span><span class="token function">free</span> -m <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{if(NR==2) printf &quot;%.1f&quot;,$NF/1024}&#39;</span><span class="token variable">\`</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;\u5185\u5B58 - \u603B\u5927\u5C0F: <span class="token variable">\${total}</span>G , \u4F7F\u7528: <span class="token variable">\${used}</span>G , \u5269\u4F59: <span class="token variable">\${available}</span>G&quot;</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">disk</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">fs</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;/^\\/dev/{print $1}&#39;</span><span class="token variable">)</span></span>
    <span class="token keyword">for</span> <span class="token for-or-select variable">p</span> <span class="token keyword">in</span> <span class="token variable">$fs</span><span class="token punctuation">;</span> <span class="token keyword">do</span>
        <span class="token assign-left variable">mounted</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $NF}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">size</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $2}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">used</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $3}&#39;</span><span class="token variable">)</span></span>
        <span class="token assign-left variable">used_percent</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">df</span> -h <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;$1==&quot;&#39;</span>$p<span class="token string">&#39;&quot;{print $5}&#39;</span><span class="token variable">)</span></span>
        <span class="token builtin class-name">echo</span> <span class="token string">&quot;\u786C\u76D8 - \u6302\u8F7D\u70B9: <span class="token variable">$mounted</span> , \u603B\u5927\u5C0F: <span class="token variable">$size</span> , \u4F7F\u7528: <span class="token variable">$used</span> , \u4F7F\u7528\u7387: <span class="token variable">$used_percent</span>&quot;</span>
    <span class="token keyword">done</span>
<span class="token punctuation">}</span>
 
<span class="token keyword">function</span> <span class="token function-name function">tcp_status</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token assign-left variable">summary</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span>ss -antp <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;{status[$1]++}END{for(i in status) printf i&quot;:&quot;status[i]&quot; &quot;}&#39;</span><span class="token variable">)</span></span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;TCP\u8FDE\u63A5\u72B6\u6001 - <span class="token variable">$summary</span>&quot;</span>
<span class="token punctuation">}</span>
 
cpu
memory
disk
tcp_status
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br></div></div><h2 id="_34\u3001\u627E\u51FA\u5360\u7528cpu-\u5185\u5B58\u8FC7\u9AD8\u7684\u8FDB\u7A0B\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_34\u3001\u627E\u51FA\u5360\u7528cpu-\u5185\u5B58\u8FC7\u9AD8\u7684\u8FDB\u7A0B\u811A\u672C" aria-hidden="true">#</a> 34\u3001\u627E\u51FA\u5360\u7528CPU \u5185\u5B58\u8FC7\u9AD8\u7684\u8FDB\u7A0B\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token function">ps</span> -eo user,pid,pcpu,pmem,args --sort<span class="token operator">=</span>-pcpu  <span class="token operator">|</span><span class="token function">head</span> -n <span class="token number">10</span>
 
<span class="token function">ps</span> -eo user,pid,pcpu,pmem,args --sort<span class="token operator">=</span>-pmem  <span class="token operator">|</span><span class="token function">head</span> -n <span class="token number">10</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="_35\u3001\u81EA\u52A8\u53D1\u5E03java\u9879\u76EE-tomcat" tabindex="-1"><a class="header-anchor" href="#_35\u3001\u81EA\u52A8\u53D1\u5E03java\u9879\u76EE-tomcat" aria-hidden="true">#</a> 35\u3001\u81EA\u52A8\u53D1\u5E03Java\u9879\u76EE\uFF08Tomcat\uFF09</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
 
<span class="token assign-left variable">TOMCAT_NAME</span><span class="token operator">=</span><span class="token variable">$1</span>
<span class="token assign-left variable">TOMCAT_DIR</span><span class="token operator">=</span>/usr/local/<span class="token variable">$TOMCAT_NAME</span>
<span class="token assign-left variable">ROOT</span><span class="token operator">=</span><span class="token variable">$TOMCAT_DIR</span>/webapps/ROOT
 
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/backup
<span class="token assign-left variable">WORK_DIR</span><span class="token operator">=</span>/tmp
<span class="token assign-left variable">PROJECT_NAME</span><span class="token operator">=</span>tomcat-java-demo
 
<span class="token comment"># \u62C9\u53D6\u4EE3\u7801</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$WORK_DIR</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$PROJECT_NAME</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">git</span> clone <span class="token punctuation">[</span>url<span class="token operator">=</span>https://github.com/lizhenliang/tomcat-java-demo<span class="token punctuation">]</span>https://github.com/lizhenliang/tomcat-java-demo<span class="token punctuation">[</span>/url<span class="token punctuation">]</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
<span class="token keyword">else</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
   <span class="token function">git</span> pull
<span class="token keyword">fi</span>
 
<span class="token comment"># \u6784\u5EFA</span>
mvn clean package -Dmaven.test.skip<span class="token operator">=</span>true
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token variable">$?</span> -ne <span class="token number">0</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token builtin class-name">echo</span> <span class="token string">&quot;maven build failure!&quot;</span>
   <span class="token builtin class-name">exit</span> <span class="token number">1</span>
<span class="token keyword">fi</span>
 
<span class="token comment"># \u90E8\u7F72</span>
<span class="token assign-left variable">TOMCAT_PID</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">ps</span> -ef <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">&quot;<span class="token variable">$TOMCAT_NAME</span>&quot;</span> <span class="token operator">|</span><span class="token function">egrep</span> -v <span class="token string">&quot;grep|<span class="token variable">$$</span>&quot;</span> <span class="token operator">|</span><span class="token function">awk</span> <span class="token string">&#39;NR==1{print $2}&#39;</span><span class="token variable">)</span></span>
<span class="token punctuation">[</span> -n <span class="token string">&quot;<span class="token variable">$TOMCAT_PID</span>&quot;</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">kill</span> -9 <span class="token variable">$TOMCAT_PID</span>
<span class="token punctuation">[</span> -d <span class="token variable">$ROOT</span> <span class="token punctuation">]</span> <span class="token operator">&amp;&amp;</span> <span class="token function">mv</span> <span class="token variable">$ROOT</span> <span class="token variable">$BACKUP_DIR</span>/<span class="token variable">\${TOMCAT_NAME}</span>_ROOT<span class="token variable">$DATE</span>
<span class="token function">unzip</span> <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/target/*.war -d <span class="token variable">$ROOT</span>
<span class="token variable">$TOMCAT_DIR</span>/bin/startup.sh
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br></div></div><h2 id="_36\u3001\u81EA\u52A8\u53D1\u5E03php\u9879\u76EE\u811A\u672C" tabindex="-1"><a class="header-anchor" href="#_36\u3001\u81EA\u52A8\u53D1\u5E03php\u9879\u76EE\u811A\u672C" aria-hidden="true">#</a> 36\u3001\u81EA\u52A8\u53D1\u5E03PHP\u9879\u76EE\u811A\u672C</h2><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token assign-left variable">DATE</span><span class="token operator">=</span><span class="token variable"><span class="token variable">$(</span><span class="token function">date</span> +%F_%T<span class="token variable">)</span></span>
 
<span class="token assign-left variable">WWWROOT</span><span class="token operator">=</span>/usr/local/nginx/html/<span class="token variable">$1</span>
 
 
<span class="token assign-left variable">BACKUP_DIR</span><span class="token operator">=</span>/data/backup
<span class="token assign-left variable">WORK_DIR</span><span class="token operator">=</span>/tmp
<span class="token assign-left variable">PROJECT_NAME</span><span class="token operator">=</span>php-demo
 
 
<span class="token comment"># \u62C9\u53D6\u4EE3\u7801</span>
<span class="token builtin class-name">cd</span> <span class="token variable">$WORK_DIR</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$PROJECT_NAME</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">git</span> clone <span class="token punctuation">[</span>url<span class="token operator">=</span>https://github.com/lizhenliang/php-demo<span class="token punctuation">]</span>https://github.com/lizhenliang/php-demo<span class="token punctuation">[</span>/url<span class="token punctuation">]</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
<span class="token keyword">else</span>
   <span class="token builtin class-name">cd</span> <span class="token variable">$PROJECT_NAME</span>
   <span class="token function">git</span> pull
<span class="token keyword">fi</span>
 
 
<span class="token comment"># \u90E8\u7F72</span>
<span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token operator">!</span> -d <span class="token variable">$WWWROOT</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>
   <span class="token function">mkdir</span> -p <span class="token variable">$WWWROOT</span>
   <span class="token function">rsync</span> -avz --exclude<span class="token operator">=</span>.git <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/* <span class="token variable">$WWWROOT</span>
<span class="token keyword">else</span>
   <span class="token function">rsync</span> -avz --exclude<span class="token operator">=</span>.git <span class="token variable">$WORK_DIR</span>/<span class="token variable">$PROJECT_NAME</span>/* <span class="token variable">$WWWROOT</span>
<span class="token keyword">fi</span>
</code></pre><div class="line-numbers" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br></div></div>`,76);function e(t,l){return p}var r=n(a,[["render",e],["__file","\u5B9E\u7528 shell \u811A\u672C.html.vue"]]);export{r as default};
